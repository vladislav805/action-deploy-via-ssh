(()=>{var __webpack_modules__={7351:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.issue=t.issueCommand=void 0;const o=n(r(2037));const p=r(5278);function issueCommand(e,t,r){const i=new Command(e,t,r);process.stdout.write(i.toString()+o.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const l="::";class Command{constructor(e,t,r){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=r}toString(){let e=l+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const r in this.properties){if(this.properties.hasOwnProperty(r)){const i=this.properties[r];if(i){if(t){t=false}else{e+=","}e+=`${r}=${escapeProperty(i)}`}}}}e+=`${l}${escapeData(this.message)}`;return e}}function escapeData(e){return p.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return p.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},2186:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};var o=this&&this.__awaiter||function(e,t,r,i){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,s){function fulfilled(e){try{step(i.next(e))}catch(e){s(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){s(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.getIDToken=t.getState=t.saveState=t.group=t.endGroup=t.startGroup=t.info=t.notice=t.warning=t.error=t.debug=t.isDebug=t.setFailed=t.setCommandEcho=t.setOutput=t.getBooleanInput=t.getMultilineInput=t.getInput=t.addPath=t.setSecret=t.exportVariable=t.ExitCode=void 0;const p=r(7351);const l=r(717);const u=r(5278);const m=n(r(2037));const h=n(r(1017));const g=r(8041);var _;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(_=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){const r=u.toCommandValue(t);process.env[e]=r;const i=process.env["GITHUB_ENV"]||"";if(i){return l.issueFileCommand("ENV",l.prepareKeyValueMessage(e,t))}p.issueCommand("set-env",{name:e},r)}t.exportVariable=exportVariable;function setSecret(e){p.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){const t=process.env["GITHUB_PATH"]||"";if(t){l.issueFileCommand("PATH",e)}else{p.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${h.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const r=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!r){throw new Error(`Input required and not supplied: ${e}`)}if(t&&t.trimWhitespace===false){return r}return r.trim()}t.getInput=getInput;function getMultilineInput(e,t){const r=getInput(e,t).split("\n").filter((e=>e!==""));if(t&&t.trimWhitespace===false){return r}return r.map((e=>e.trim()))}t.getMultilineInput=getMultilineInput;function getBooleanInput(e,t){const r=["true","True","TRUE"];const i=["false","False","FALSE"];const s=getInput(e,t);if(r.includes(s))return true;if(i.includes(s))return false;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n`+`Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}t.getBooleanInput=getBooleanInput;function setOutput(e,t){const r=process.env["GITHUB_OUTPUT"]||"";if(r){return l.issueFileCommand("OUTPUT",l.prepareKeyValueMessage(e,t))}process.stdout.write(m.EOL);p.issueCommand("set-output",{name:e},u.toCommandValue(t))}t.setOutput=setOutput;function setCommandEcho(e){p.issue("echo",e?"on":"off")}t.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=_.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){p.issueCommand("debug",{},e)}t.debug=debug;function error(e,t={}){p.issueCommand("error",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.error=error;function warning(e,t={}){p.issueCommand("warning",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.warning=warning;function notice(e,t={}){p.issueCommand("notice",u.toCommandProperties(t),e instanceof Error?e.toString():e)}t.notice=notice;function info(e){process.stdout.write(e+m.EOL)}t.info=info;function startGroup(e){p.issue("group",e)}t.startGroup=startGroup;function endGroup(){p.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return o(this,void 0,void 0,(function*(){startGroup(e);let r;try{r=yield t()}finally{endGroup()}return r}))}t.group=group;function saveState(e,t){const r=process.env["GITHUB_STATE"]||"";if(r){return l.issueFileCommand("STATE",l.prepareKeyValueMessage(e,t))}p.issueCommand("save-state",{name:e},u.toCommandValue(t))}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState;function getIDToken(e){return o(this,void 0,void 0,(function*(){return yield g.OidcClient.getIDToken(e)}))}t.getIDToken=getIDToken;var E=r(1327);Object.defineProperty(t,"summary",{enumerable:true,get:function(){return E.summary}});var w=r(1327);Object.defineProperty(t,"markdownSummary",{enumerable:true,get:function(){return w.markdownSummary}});var v=r(2981);Object.defineProperty(t,"toPosixPath",{enumerable:true,get:function(){return v.toPosixPath}});Object.defineProperty(t,"toWin32Path",{enumerable:true,get:function(){return v.toWin32Path}});Object.defineProperty(t,"toPlatformPath",{enumerable:true,get:function(){return v.toPlatformPath}})},717:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.prepareKeyValueMessage=t.issueFileCommand=void 0;const o=n(r(7147));const p=n(r(2037));const l=r(5840);const u=r(5278);function issueFileCommand(e,t){const r=process.env[`GITHUB_${e}`];if(!r){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!o.existsSync(r)){throw new Error(`Missing file at path: ${r}`)}o.appendFileSync(r,`${u.toCommandValue(t)}${p.EOL}`,{encoding:"utf8"})}t.issueFileCommand=issueFileCommand;function prepareKeyValueMessage(e,t){const r=`ghadelimiter_${l.v4()}`;const i=u.toCommandValue(t);if(e.includes(r)){throw new Error(`Unexpected input: name should not contain the delimiter "${r}"`)}if(i.includes(r)){throw new Error(`Unexpected input: value should not contain the delimiter "${r}"`)}return`${e}<<${r}${p.EOL}${i}${p.EOL}${r}`}t.prepareKeyValueMessage=prepareKeyValueMessage},8041:function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,s){function fulfilled(e){try{step(i.next(e))}catch(e){s(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){s(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.OidcClient=void 0;const s=r(6255);const n=r(5526);const o=r(2186);class OidcClient{static createHttpClient(e=true,t=10){const r={allowRetries:e,maxRetries:t};return new s.HttpClient("actions/oidc-client",[new n.BearerCredentialHandler(OidcClient.getRequestToken())],r)}static getRequestToken(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable")}return e}static getIDTokenUrl(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable")}return e}static getCall(e){var t;return i(this,void 0,void 0,(function*(){const r=OidcClient.createHttpClient();const i=yield r.getJson(e).catch((e=>{throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.result.message}`)}));const s=(t=i.result)===null||t===void 0?void 0:t.value;if(!s){throw new Error("Response json body do not have ID Token field")}return s}))}static getIDToken(e){return i(this,void 0,void 0,(function*(){try{let t=OidcClient.getIDTokenUrl();if(e){const r=encodeURIComponent(e);t=`${t}&audience=${r}`}o.debug(`ID token url is ${t}`);const r=yield OidcClient.getCall(t);o.setSecret(r);return r}catch(e){throw new Error(`Error message: ${e.message}`)}}))}}t.OidcClient=OidcClient},2981:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.toPlatformPath=t.toWin32Path=t.toPosixPath=void 0;const o=n(r(1017));function toPosixPath(e){return e.replace(/[\\]/g,"/")}t.toPosixPath=toPosixPath;function toWin32Path(e){return e.replace(/[/]/g,"\\")}t.toWin32Path=toWin32Path;function toPlatformPath(e){return e.replace(/[/\\]/g,o.sep)}t.toPlatformPath=toPlatformPath},1327:function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,s){function fulfilled(e){try{step(i.next(e))}catch(e){s(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){s(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.summary=t.markdownSummary=t.SUMMARY_DOCS_URL=t.SUMMARY_ENV_VAR=void 0;const s=r(2037);const n=r(7147);const{access:o,appendFile:p,writeFile:l}=n.promises;t.SUMMARY_ENV_VAR="GITHUB_STEP_SUMMARY";t.SUMMARY_DOCS_URL="https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";class Summary{constructor(){this._buffer=""}filePath(){return i(this,void 0,void 0,(function*(){if(this._filePath){return this._filePath}const e=process.env[t.SUMMARY_ENV_VAR];if(!e){throw new Error(`Unable to find environment variable for $${t.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`)}try{yield o(e,n.constants.R_OK|n.constants.W_OK)}catch(t){throw new Error(`Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`)}this._filePath=e;return this._filePath}))}wrap(e,t,r={}){const i=Object.entries(r).map((([e,t])=>` ${e}="${t}"`)).join("");if(!t){return`<${e}${i}>`}return`<${e}${i}>${t}</${e}>`}write(e){return i(this,void 0,void 0,(function*(){const t=!!(e===null||e===void 0?void 0:e.overwrite);const r=yield this.filePath();const i=t?l:p;yield i(r,this._buffer,{encoding:"utf8"});return this.emptyBuffer()}))}clear(){return i(this,void 0,void 0,(function*(){return this.emptyBuffer().write({overwrite:true})}))}stringify(){return this._buffer}isEmptyBuffer(){return this._buffer.length===0}emptyBuffer(){this._buffer="";return this}addRaw(e,t=false){this._buffer+=e;return t?this.addEOL():this}addEOL(){return this.addRaw(s.EOL)}addCodeBlock(e,t){const r=Object.assign({},t&&{lang:t});const i=this.wrap("pre",this.wrap("code",e),r);return this.addRaw(i).addEOL()}addList(e,t=false){const r=t?"ol":"ul";const i=e.map((e=>this.wrap("li",e))).join("");const s=this.wrap(r,i);return this.addRaw(s).addEOL()}addTable(e){const t=e.map((e=>{const t=e.map((e=>{if(typeof e==="string"){return this.wrap("td",e)}const{header:t,data:r,colspan:i,rowspan:s}=e;const n=t?"th":"td";const o=Object.assign(Object.assign({},i&&{colspan:i}),s&&{rowspan:s});return this.wrap(n,r,o)})).join("");return this.wrap("tr",t)})).join("");const r=this.wrap("table",t);return this.addRaw(r).addEOL()}addDetails(e,t){const r=this.wrap("details",this.wrap("summary",e)+t);return this.addRaw(r).addEOL()}addImage(e,t,r){const{width:i,height:s}=r||{};const n=Object.assign(Object.assign({},i&&{width:i}),s&&{height:s});const o=this.wrap("img",null,Object.assign({src:e,alt:t},n));return this.addRaw(o).addEOL()}addHeading(e,t){const r=`h${t}`;const i=["h1","h2","h3","h4","h5","h6"].includes(r)?r:"h1";const s=this.wrap(i,e);return this.addRaw(s).addEOL()}addSeparator(){const e=this.wrap("hr",null);return this.addRaw(e).addEOL()}addBreak(){const e=this.wrap("br",null);return this.addRaw(e).addEOL()}addQuote(e,t){const r=Object.assign({},t&&{cite:t});const i=this.wrap("blockquote",e,r);return this.addRaw(i).addEOL()}addLink(e,t){const r=this.wrap("a",e,{href:t});return this.addRaw(r).addEOL()}}const u=new Summary;t.markdownSummary=u;t.summary=u},5278:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.toCommandProperties=t.toCommandValue=void 0;function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}t.toCommandValue=toCommandValue;function toCommandProperties(e){if(!Object.keys(e).length){return{}}return{title:e.title,file:e.file,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}}t.toCommandProperties=toCommandProperties},4087:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Context=void 0;const i=r(7147);const s=r(2037);class Context{constructor(){var e,t,r;this.payload={};if(process.env.GITHUB_EVENT_PATH){if(i.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(i.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${s.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR;this.job=process.env.GITHUB_JOB;this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10);this.runId=parseInt(process.env.GITHUB_RUN_ID,10);this.apiUrl=(e=process.env.GITHUB_API_URL)!==null&&e!==void 0?e:`https://api.github.com`;this.serverUrl=(t=process.env.GITHUB_SERVER_URL)!==null&&t!==void 0?t:`https://github.com`;this.graphqlUrl=(r=process.env.GITHUB_GRAPHQL_URL)!==null&&r!==void 0?r:`https://api.github.com/graphql`}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:t}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=Context},5438:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokit=t.context=void 0;const o=n(r(4087));const p=r(3030);t.context=new o.Context;function getOctokit(e,t,...r){const i=p.GitHub.plugin(...r);return new i(p.getOctokitOptions(e,t))}t.getOctokit=getOctokit},7914:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getApiBaseUrl=t.getProxyAgent=t.getAuthString=void 0;const o=n(r(6255));function getAuthString(e,t){if(!e&&!t.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&t.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof t.auth==="string"?t.auth:`token ${e}`}t.getAuthString=getAuthString;function getProxyAgent(e){const t=new o.HttpClient;return t.getAgent(e)}t.getProxyAgent=getProxyAgent;function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}t.getApiBaseUrl=getApiBaseUrl},3030:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokitOptions=t.GitHub=t.defaults=t.context=void 0;const o=n(r(4087));const p=n(r(7914));const l=r(6762);const u=r(3044);const m=r(4193);t.context=new o.Context;const h=p.getApiBaseUrl();t.defaults={baseUrl:h,request:{agent:p.getProxyAgent(h)}};t.GitHub=l.Octokit.plugin(u.restEndpointMethods,m.paginateRest).defaults(t.defaults);function getOctokitOptions(e,t){const r=Object.assign({},t||{});const i=p.getAuthString(e,r);if(i){r.auth=i}return r}t.getOctokitOptions=getOctokitOptions},5526:function(e,t){"use strict";var r=this&&this.__awaiter||function(e,t,r,i){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,s){function fulfilled(e){try{step(i.next(e))}catch(e){s(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){s(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.PersonalAccessTokenCredentialHandler=t.BearerCredentialHandler=t.BasicCredentialHandler=void 0;class BasicCredentialHandler{constructor(e,t){this.username=e;this.password=t}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BasicCredentialHandler=BasicCredentialHandler;class BearerCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Bearer ${this.token}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.BearerCredentialHandler=BearerCredentialHandler;class PersonalAccessTokenCredentialHandler{constructor(e){this.token=e}prepareRequest(e){if(!e.headers){throw Error("The request has no headers")}e.headers["Authorization"]=`Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`}canHandleAuthentication(){return false}handleAuthentication(){return r(this,void 0,void 0,(function*(){throw new Error("not implemented")}))}}t.PersonalAccessTokenCredentialHandler=PersonalAccessTokenCredentialHandler},6255:function(e,t,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,t,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,i){if(i===undefined)i=r;e[i]=t[r]});var s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(t,e,r);s(t,e);return t};var o=this&&this.__awaiter||function(e,t,r,i){function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,s){function fulfilled(e){try{step(i.next(e))}catch(e){s(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){s(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:true});t.HttpClient=t.isHttps=t.HttpClientResponse=t.HttpClientError=t.getProxyUrl=t.MediaTypes=t.Headers=t.HttpCodes=void 0;const p=n(r(3685));const l=n(r(5687));const u=n(r(9835));const m=n(r(4294));var h;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(h=t.HttpCodes||(t.HttpCodes={}));var g;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(g=t.Headers||(t.Headers={}));var _;(function(e){e["ApplicationJson"]="application/json"})(_=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){const t=u.getProxyUrl(new URL(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const E=[h.MovedPermanently,h.ResourceMoved,h.SeeOther,h.TemporaryRedirect,h.PermanentRedirect];const w=[h.BadGateway,h.ServiceUnavailable,h.GatewayTimeout];const v=["OPTIONS","GET","DELETE","HEAD"];const b=10;const y=5;class HttpClientError extends Error{constructor(e,t){super(e);this.name="HttpClientError";this.statusCode=t;Object.setPrototypeOf(this,HttpClientError.prototype)}}t.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return o(this,void 0,void 0,(function*(){return new Promise((e=>o(this,void 0,void 0,(function*(){let t=Buffer.alloc(0);this.message.on("data",(e=>{t=Buffer.concat([t,e])}));this.message.on("end",(()=>{e(t.toString())}))}))))}))}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){const t=new URL(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,r){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=r;if(r){if(r.ignoreSslError!=null){this._ignoreSslError=r.ignoreSslError}this._socketTimeout=r.socketTimeout;if(r.allowRedirects!=null){this._allowRedirects=r.allowRedirects}if(r.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=r.allowRedirectDowngrade}if(r.maxRedirects!=null){this._maxRedirects=Math.max(r.maxRedirects,0)}if(r.keepAlive!=null){this._keepAlive=r.keepAlive}if(r.allowRetries!=null){this._allowRetries=r.allowRetries}if(r.maxRetries!=null){this._maxRetries=r.maxRetries}}}options(e,t){return o(this,void 0,void 0,(function*(){return this.request("OPTIONS",e,null,t||{})}))}get(e,t){return o(this,void 0,void 0,(function*(){return this.request("GET",e,null,t||{})}))}del(e,t){return o(this,void 0,void 0,(function*(){return this.request("DELETE",e,null,t||{})}))}post(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("POST",e,t,r||{})}))}patch(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("PATCH",e,t,r||{})}))}put(e,t,r){return o(this,void 0,void 0,(function*(){return this.request("PUT",e,t,r||{})}))}head(e,t){return o(this,void 0,void 0,(function*(){return this.request("HEAD",e,null,t||{})}))}sendStream(e,t,r,i){return o(this,void 0,void 0,(function*(){return this.request(e,t,r,i)}))}getJson(e,t={}){return o(this,void 0,void 0,(function*(){t[g.Accept]=this._getExistingOrDefaultHeader(t,g.Accept,_.ApplicationJson);const r=yield this.get(e,t);return this._processResponse(r,this.requestOptions)}))}postJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const i=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,_.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,_.ApplicationJson);const s=yield this.post(e,i,r);return this._processResponse(s,this.requestOptions)}))}putJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const i=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,_.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,_.ApplicationJson);const s=yield this.put(e,i,r);return this._processResponse(s,this.requestOptions)}))}patchJson(e,t,r={}){return o(this,void 0,void 0,(function*(){const i=JSON.stringify(t,null,2);r[g.Accept]=this._getExistingOrDefaultHeader(r,g.Accept,_.ApplicationJson);r[g.ContentType]=this._getExistingOrDefaultHeader(r,g.ContentType,_.ApplicationJson);const s=yield this.patch(e,i,r);return this._processResponse(s,this.requestOptions)}))}request(e,t,r,i){return o(this,void 0,void 0,(function*(){if(this._disposed){throw new Error("Client has already been disposed.")}const s=new URL(t);let n=this._prepareRequest(e,s,i);const o=this._allowRetries&&v.includes(e)?this._maxRetries+1:1;let p=0;let l;do{l=yield this.requestRaw(n,r);if(l&&l.message&&l.message.statusCode===h.Unauthorized){let e;for(const t of this.handlers){if(t.canHandleAuthentication(l)){e=t;break}}if(e){return e.handleAuthentication(this,n,r)}else{return l}}let t=this._maxRedirects;while(l.message.statusCode&&E.includes(l.message.statusCode)&&this._allowRedirects&&t>0){const o=l.message.headers["location"];if(!o){break}const p=new URL(o);if(s.protocol==="https:"&&s.protocol!==p.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}yield l.readBody();if(p.hostname!==s.hostname){for(const e in i){if(e.toLowerCase()==="authorization"){delete i[e]}}}n=this._prepareRequest(e,p,i);l=yield this.requestRaw(n,r);t--}if(!l.message.statusCode||!w.includes(l.message.statusCode)){return l}p+=1;if(p<o){yield l.readBody();yield this._performExponentialBackoff(p)}}while(p<o);return l}))}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return o(this,void 0,void 0,(function*(){return new Promise(((r,i)=>{function callbackForResult(e,t){if(e){i(e)}else if(!t){i(new Error("Unknown error"))}else{r(t)}}this.requestRawWithCallback(e,t,callbackForResult)}))}))}requestRawWithCallback(e,t,r){if(typeof t==="string"){if(!e.options.headers){e.options.headers={}}e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let i=false;function handleResult(e,t){if(!i){i=true;r(e,t)}}const s=e.httpModule.request(e.options,(e=>{const t=new HttpClientResponse(e);handleResult(undefined,t)}));let n;s.on("socket",(e=>{n=e}));s.setTimeout(this._socketTimeout||3*6e4,(()=>{if(n){n.end()}handleResult(new Error(`Request timeout: ${e.options.path}`))}));s.on("error",(function(e){handleResult(e)}));if(t&&typeof t==="string"){s.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",(function(){s.end()}));t.pipe(s)}else{s.end()}}getAgent(e){const t=new URL(e);return this._getAgent(t)}_prepareRequest(e,t,r){const i={};i.parsedUrl=t;const s=i.parsedUrl.protocol==="https:";i.httpModule=s?l:p;const n=s?443:80;i.options={};i.options.host=i.parsedUrl.hostname;i.options.port=i.parsedUrl.port?parseInt(i.parsedUrl.port):n;i.options.path=(i.parsedUrl.pathname||"")+(i.parsedUrl.search||"");i.options.method=e;i.options.headers=this._mergeHeaders(r);if(this.userAgent!=null){i.options.headers["user-agent"]=this.userAgent}i.options.agent=this._getAgent(i.parsedUrl);if(this.handlers){for(const e of this.handlers){e.prepareRequest(i.options)}}return i}_mergeHeaders(e){if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e||{}))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,t,r){let i;if(this.requestOptions&&this.requestOptions.headers){i=lowercaseKeys(this.requestOptions.headers)[t]}return e[t]||i||r}_getAgent(e){let t;const r=u.getProxyUrl(e);const i=r&&r.hostname;if(this._keepAlive&&i){t=this._proxyAgent}if(this._keepAlive&&!i){t=this._agent}if(t){return t}const s=e.protocol==="https:";let n=100;if(this.requestOptions){n=this.requestOptions.maxSockets||p.globalAgent.maxSockets}if(r&&r.hostname){const e={maxSockets:n,keepAlive:this._keepAlive,proxy:Object.assign(Object.assign({},(r.username||r.password)&&{proxyAuth:`${r.username}:${r.password}`}),{host:r.hostname,port:r.port})};let i;const o=r.protocol==="https:";if(s){i=o?m.httpsOverHttps:m.httpsOverHttp}else{i=o?m.httpOverHttps:m.httpOverHttp}t=i(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:n};t=s?new l.Agent(e):new p.Agent(e);this._agent=t}if(!t){t=s?l.globalAgent:p.globalAgent}if(s&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){return o(this,void 0,void 0,(function*(){e=Math.min(b,e);const t=y*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),t)))}))}_processResponse(e,t){return o(this,void 0,void 0,(function*(){return new Promise(((r,i)=>o(this,void 0,void 0,(function*(){const s=e.message.statusCode||0;const n={statusCode:s,result:null,headers:{}};if(s===h.NotFound){r(n)}function dateTimeDeserializer(e,t){if(typeof t==="string"){const e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}let o;let p;try{p=yield e.readBody();if(p&&p.length>0){if(t&&t.deserializeDates){o=JSON.parse(p,dateTimeDeserializer)}else{o=JSON.parse(p)}n.result=o}n.headers=e.message.headers}catch(e){}if(s>299){let e;if(o&&o.message){e=o.message}else if(p&&p.length>0){e=p}else{e=`Failed request: (${s})`}const t=new HttpClientError(e,s);t.result=n.result;i(t)}else{r(n)}}))))}))}}t.HttpClient=HttpClient;const lowercaseKeys=e=>Object.keys(e).reduce(((t,r)=>(t[r.toLowerCase()]=e[r],t)),{})},9835:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.checkBypass=t.getProxyUrl=void 0;function getProxyUrl(e){const t=e.protocol==="https:";if(checkBypass(e)){return undefined}const r=(()=>{if(t){return process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{return process.env["http_proxy"]||process.env["HTTP_PROXY"]}})();if(r){return new URL(r)}else{return undefined}}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}const t=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!t){return false}let r;if(e.port){r=Number(e.port)}else if(e.protocol==="http:"){r=80}else if(e.protocol==="https:"){r=443}const i=[e.hostname.toUpperCase()];if(typeof r==="number"){i.push(`${i[0]}:${r}`)}for(const e of t.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(i.some((t=>t===e))){return true}}return false}t.checkBypass=checkBypass},334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const r=/^v1\./;const i=/^ghs_/;const s=/^ghu_/;async function auth(e){const t=e.split(/\./).length===3;const n=r.test(e)||i.test(e);const o=s.test(e);const p=t?"app":n?"installation":o?"user-to-server":"oauth";return{type:"token",token:e,tokenType:p}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,t,r,i){const s=t.endpoint.merge(r,i);s.headers.authorization=withAuthorizationPrefix(e);return t(s)}const n=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};t.createTokenAuth=n},6762:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var i=r(5030);var s=r(3682);var n=r(6234);var o=r(8467);var p=r(334);function _objectWithoutPropertiesLoose(e,t){if(e==null)return{};var r={};var i=Object.keys(e);var s,n;for(n=0;n<i.length;n++){s=i[n];if(t.indexOf(s)>=0)continue;r[s]=e[s]}return r}function _objectWithoutProperties(e,t){if(e==null)return{};var r=_objectWithoutPropertiesLoose(e,t);var i,s;if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++){i=n[s];if(t.indexOf(i)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,i))continue;r[i]=e[i]}}return r}const l="3.6.0";const u=["authStrategy"];class Octokit{constructor(e={}){const t=new s.Collection;const r={baseUrl:n.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};r.headers["user-agent"]=[e.userAgent,`octokit-core.js/${l} ${i.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){r.baseUrl=e.baseUrl}if(e.previews){r.mediaType.previews=e.previews}if(e.timeZone){r.headers["time-zone"]=e.timeZone}this.request=n.request.defaults(r);this.graphql=o.withCustomRequest(this.request).defaults(r);this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=t;if(!e.authStrategy){if(!e.auth){this.auth=async()=>({type:"unauthenticated"})}else{const r=p.createTokenAuth(e.auth);t.wrap("request",r.hook);this.auth=r}}else{const{authStrategy:r}=e,i=_objectWithoutProperties(e,u);const s=r(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:i},e.auth));t.wrap("request",s.hook);this.auth=s}const m=this.constructor;m.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}static defaults(e){const t=class extends(this){constructor(...t){const r=t[0]||{};if(typeof e==="function"){super(e(r));return}super(Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:`${r.userAgent} ${e.userAgent}`}:null))}};return t}static plugin(...e){var t;const r=this.plugins;const i=(t=class extends(this){},t.plugins=r.concat(e.filter((e=>!r.includes(e)))),t);return i}}Octokit.VERSION=l;Octokit.plugins=[];t.Octokit=Octokit},9440:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var i=r(3287);var s=r(5030);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((t,r)=>{t[r.toLowerCase()]=e[r];return t}),{})}function mergeDeep(e,t){const r=Object.assign({},e);Object.keys(t).forEach((s=>{if(i.isPlainObject(t[s])){if(!(s in e))Object.assign(r,{[s]:t[s]});else r[s]=mergeDeep(e[s],t[s])}else{Object.assign(r,{[s]:t[s]})}}));return r}function removeUndefinedProperties(e){for(const t in e){if(e[t]===undefined){delete e[t]}}return e}function merge(e,t,r){if(typeof t==="string"){let[e,i]=t.split(" ");r=Object.assign(i?{method:e,url:i}:{url:e},r)}else{r=Object.assign({},t)}r.headers=lowercaseKeys(r.headers);removeUndefinedProperties(r);removeUndefinedProperties(r.headers);const i=mergeDeep(e||{},r);if(e&&e.mediaType.previews.length){i.mediaType.previews=e.mediaType.previews.filter((e=>!i.mediaType.previews.includes(e))).concat(i.mediaType.previews)}i.mediaType.previews=i.mediaType.previews.map((e=>e.replace(/-preview/,"")));return i}function addQueryParameters(e,t){const r=/\?/.test(e)?"&":"?";const i=Object.keys(t);if(i.length===0){return e}return e+r+i.map((e=>{if(e==="q"){return"q="+t.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(t[e])}`})).join("&")}const n=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(n);if(!t){return[]}return t.map(removeNonChars).reduce(((e,t)=>e.concat(t)),[])}function omit(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,r)=>{t[r]=e[r];return t}),{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,t,r){t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t);if(r){return encodeUnreserved(r)+"="+t}else{return t}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,r,i){var s=e[r],n=[];if(isDefined(s)&&s!==""){if(typeof s==="string"||typeof s==="number"||typeof s==="boolean"){s=s.toString();if(i&&i!=="*"){s=s.substring(0,parseInt(i,10))}n.push(encodeValue(t,s,isKeyOperator(t)?r:""))}else{if(i==="*"){if(Array.isArray(s)){s.filter(isDefined).forEach((function(e){n.push(encodeValue(t,e,isKeyOperator(t)?r:""))}))}else{Object.keys(s).forEach((function(e){if(isDefined(s[e])){n.push(encodeValue(t,s[e],e))}}))}}else{const e=[];if(Array.isArray(s)){s.filter(isDefined).forEach((function(r){e.push(encodeValue(t,r))}))}else{Object.keys(s).forEach((function(r){if(isDefined(s[r])){e.push(encodeUnreserved(r));e.push(encodeValue(t,s[r].toString()))}}))}if(isKeyOperator(t)){n.push(encodeUnreserved(r)+"="+e.join(","))}else if(e.length!==0){n.push(e.join(","))}}}}else{if(t===";"){if(isDefined(s)){n.push(encodeUnreserved(r))}}else if(s===""&&(t==="&"||t==="?")){n.push(encodeUnreserved(r)+"=")}else if(s===""){n.push("")}}return n}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,i,s){if(i){let e="";const s=[];if(r.indexOf(i.charAt(0))!==-1){e=i.charAt(0);i=i.substr(1)}i.split(/,/g).forEach((function(r){var i=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);s.push(getValues(t,e,i[1],i[2]||i[3]))}));if(e&&e!=="+"){var n=",";if(e==="?"){n="&"}else if(e!=="#"){n=e}return(s.length!==0?e:"")+s.join(n)}else{return s.join(",")}}else{return encodeReserved(s)}}))}function parse(e){let t=e.method.toUpperCase();let r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let i=Object.assign({},e.headers);let s;let n=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const o=extractUrlVariableNames(r);r=parseUrl(r).expand(n);if(!/^http/.test(r)){r=e.baseUrl+r}const p=Object.keys(e).filter((e=>o.includes(e))).concat("baseUrl");const l=omit(n,p);const u=/application\/octet-stream/i.test(i.accept);if(!u){if(e.mediaType.format){i.accept=i.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(e.mediaType.previews.length){const t=i.accept.match(/[\w-]+(?=-preview)/g)||[];i.accept=t.concat(e.mediaType.previews).map((t=>{const r=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${r}`})).join(",")}}if(["GET","HEAD"].includes(t)){r=addQueryParameters(r,l)}else{if("data"in l){s=l.data}else{if(Object.keys(l).length){s=l}else{i["content-length"]=0}}}if(!i["content-type"]&&typeof s!=="undefined"){i["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(t)&&typeof s==="undefined"){s=""}return Object.assign({method:t,url:r,headers:i},typeof s!=="undefined"?{body:s}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,r){return parse(merge(e,t,r))}function withDefaults(e,t){const r=merge(e,t);const i=endpointWithDefaults.bind(null,r);return Object.assign(i,{DEFAULTS:r,defaults:withDefaults.bind(null,r),merge:merge.bind(null,r),parse:parse})}const o="6.0.12";const p=`octokit-endpoint.js/${o} ${s.getUserAgent()}`;const l={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":p},mediaType:{format:"",previews:[]}};const u=withDefaults(null,l);t.endpoint=u},8467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var i=r(6234);var s=r(5030);const n="4.8.0";function _buildMessageForResponseErrors(e){return`Request failed due to following response errors:\n`+e.errors.map((e=>` - ${e.message}`)).join("\n")}class GraphqlResponseError extends Error{constructor(e,t,r){super(_buildMessageForResponseErrors(r));this.request=e;this.headers=t;this.response=r;this.name="GraphqlResponseError";this.errors=r.errors;this.data=r.data;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const o=["method","baseUrl","url","headers","request","query","mediaType"];const p=["query","method","url"];const l=/\/api\/v3\/?$/;function graphql(e,t,r){if(r){if(typeof t==="string"&&"query"in r){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}for(const e in r){if(!p.includes(e))continue;return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}}const i=typeof t==="string"?Object.assign({query:t},r):t;const s=Object.keys(i).reduce(((e,t)=>{if(o.includes(t)){e[t]=i[t];return e}if(!e.variables){e.variables={}}e.variables[t]=i[t];return e}),{});const n=i.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(l.test(n)){s.url=n.replace(l,"/api/graphql")}return e(s).then((e=>{if(e.data.errors){const t={};for(const r of Object.keys(e.headers)){t[r]=e.headers[r]}throw new GraphqlResponseError(s,t,e.data)}return e.data.data}))}function withDefaults(e,t){const r=e.defaults(t);const newApi=(e,t)=>graphql(r,e,t);return Object.assign(newApi,{defaults:withDefaults.bind(null,r),endpoint:i.request.endpoint})}const u=withDefaults(i.request,{headers:{"user-agent":`octokit-graphql.js/${n} ${s.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}t.GraphqlResponseError=GraphqlResponseError;t.graphql=u;t.withCustomRequest=withCustomRequest},4193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const r="2.21.3";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(r),!0).forEach((function(t){_defineProperty(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function normalizePaginatedListResponse(e){if(!e.data){return _objectSpread2(_objectSpread2({},e),{},{data:[]})}const t="total_count"in e.data&&!("url"in e.data);if(!t)return e;const r=e.data.incomplete_results;const i=e.data.repository_selection;const s=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const n=Object.keys(e.data)[0];const o=e.data[n];e.data=o;if(typeof r!=="undefined"){e.data.incomplete_results=r}if(typeof i!=="undefined"){e.data.repository_selection=i}e.data.total_count=s;return e}function iterator(e,t,r){const i=typeof t==="function"?t.endpoint(r):e.request.endpoint(t,r);const s=typeof t==="function"?t:e.request;const n=i.method;const o=i.headers;let p=i.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!p)return{done:true};try{const e=await s({method:n,url:p,headers:o});const t=normalizePaginatedListResponse(e);p=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:t}}catch(e){if(e.status!==409)throw e;p="";return{value:{status:200,headers:{},data:[]}}}}})}}function paginate(e,t,r,i){if(typeof r==="function"){i=r;r=undefined}return gather(e,[],iterator(e,t,r)[Symbol.asyncIterator](),i)}function gather(e,t,r,i){return r.next().then((s=>{if(s.done){return t}let n=false;function done(){n=true}t=t.concat(i?i(s.value,done):s.value.data);if(n){return t}return gather(e,t,r,i)}))}const i=Object.assign(paginate,{iterator:iterator});const s=["GET /app/hook/deliveries","GET /app/installations","GET /applications/grants","GET /authorizations","GET /enterprises/{enterprise}/actions/permissions/organizations","GET /enterprises/{enterprise}/actions/runner-groups","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners","GET /enterprises/{enterprise}/actions/runners","GET /enterprises/{enterprise}/audit-log","GET /enterprises/{enterprise}/secret-scanning/alerts","GET /enterprises/{enterprise}/settings/billing/advanced-security","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /licenses","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/cache/usage-by-repository","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/audit-log","GET /orgs/{org}/blocks","GET /orgs/{org}/code-scanning/alerts","GET /orgs/{org}/codespaces","GET /orgs/{org}/credential-authorizations","GET /orgs/{org}/dependabot/secrets","GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories","GET /orgs/{org}/events","GET /orgs/{org}/external-groups","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/packages","GET /orgs/{org}/packages/{package_type}/{package_name}/versions","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/secret-scanning/alerts","GET /orgs/{org}/settings/billing/advanced-security","GET /orgs/{org}/team-sync/groups","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/caches","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/codespaces","GET /repos/{owner}/{repo}/codespaces/devcontainers","GET /repos/{owner}/{repo}/codespaces/secrets","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/status","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/dependabot/secrets","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/environments","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/git/matching-refs/{ref}","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/releases/{release_id}/reactions","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repos/{owner}/{repo}/topics","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/codespaces","GET /user/codespaces/secrets","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/packages","GET /user/packages/{package_type}/{package_name}/versions","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/packages","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function isPaginatingEndpoint(e){if(typeof e==="string"){return s.includes(e)}else{return false}}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=r;t.composePaginateRest=i;t.isPaginatingEndpoint=isPaginatingEndpoint;t.paginateRest=paginateRest;t.paginatingEndpoints=s},3044:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);if(t){i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))}r.push.apply(r,i)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}const r={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForEnterprise:["GET /enterprises/{enterprise}/actions/cache/usage"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsDefaultWorkflowPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setGithubActionsDefaultWorkflowPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubAdvancedSecurityBillingGhe:["GET /enterprises/{enterprise}/settings/billing/advanced-security"],getGithubAdvancedSecurityBillingOrg:["GET /orgs/{org}/settings/billing/advanced-security"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{addCustomLabelsToSelfHostedRunnerForEnterprise:["POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],getServerStatistics:["GET /enterprise-installation/{enterprise_or_org}/server-statistics"],listLabelsForSelfHostedRunnerForEnterprise:["GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],removeAllCustomLabelsFromSelfHostedRunnerForEnterprise:["DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForEnterprise:["DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForEnterprise:["PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomRoles:["GET /organizations/{organization_id}/custom_roles"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableLfsForRepo:["DELETE /repos/{owner}/{repo}/lfs"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enableLfsForRepo:["PUT /repos/{owner}/{repo}/lfs"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const i="5.16.2";function endpointsToMethods(e,t){const r={};for(const[i,s]of Object.entries(t)){for(const[t,n]of Object.entries(s)){const[s,o,p]=n;const[l,u]=s.split(/ /);const m=Object.assign({method:l,url:u},o);if(!r[i]){r[i]={}}const h=r[i];if(p){h[t]=decorate(e,i,t,m,p);continue}h[t]=e.request.defaults(m)}}return r}function decorate(e,t,r,i,s){const n=e.request.defaults(i);function withDecorations(...i){let o=n.endpoint.merge(...i);if(s.mapToData){o=Object.assign({},o,{data:o[s.mapToData],[s.mapToData]:undefined});return n(o)}if(s.renamed){const[i,n]=s.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${i}.${n}()`)}if(s.deprecated){e.log.warn(s.deprecated)}if(s.renamedParameters){const o=n.endpoint.merge(...i);for(const[i,n]of Object.entries(s.renamedParameters)){if(i in o){e.log.warn(`"${i}" parameter is deprecated for "octokit.${t}.${r}()". Use "${n}" instead`);if(!(n in o)){o[n]=o[i]}delete o[i]}}return n(o)}return n(...i)}return Object.assign(withDecorations,n)}function restEndpointMethods(e){const t=endpointsToMethods(e,r);return{rest:t}}restEndpointMethods.VERSION=i;function legacyRestEndpointMethods(e){const t=endpointsToMethods(e,r);return _objectSpread2(_objectSpread2({},t),{},{rest:t})}legacyRestEndpointMethods.VERSION=i;t.legacyRestEndpointMethods=legacyRestEndpointMethods;t.restEndpointMethods=restEndpointMethods},537:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var i=r(8932);var s=_interopDefault(r(1223));const n=s((e=>console.warn(e)));const o=s((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,r){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=t;let s;if("headers"in r&&typeof r.headers!=="undefined"){s=r.headers}if("response"in r){this.response=r.response;s=r.response.headers}const p=Object.assign({},r.request);if(r.request.headers.authorization){p.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}p.url=p.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=p;Object.defineProperty(this,"code",{get(){n(new i.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return t}});Object.defineProperty(this,"headers",{get(){o(new i.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));return s||{}}})}}t.RequestError=RequestError},6234:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var i=r(9440);var s=r(5030);var n=r(3287);var o=_interopDefault(r(467));var p=r(537);const l="5.6.3";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){const t=e.request&&e.request.log?e.request.log:console;if(n.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let r={};let i;let s;const l=e.request&&e.request.fetch||o;return l(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async n=>{s=n.url;i=n.status;for(const e of n.headers){r[e[0]]=e[1]}if("deprecation"in r){const i=r.link&&r.link.match(/<([^>]+)>; rel="deprecation"/);const s=i&&i.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${r.sunset}${s?`. See ${s}`:""}`)}if(i===204||i===205){return}if(e.method==="HEAD"){if(i<400){return}throw new p.RequestError(n.statusText,i,{response:{url:s,status:i,headers:r,data:undefined},request:e})}if(i===304){throw new p.RequestError("Not modified",i,{response:{url:s,status:i,headers:r,data:await getResponseData(n)},request:e})}if(i>=400){const t=await getResponseData(n);const o=new p.RequestError(toErrorMessage(t),i,{response:{url:s,status:i,headers:r,data:t},request:e});throw o}return getResponseData(n)})).then((e=>({status:i,url:s,headers:r,data:e}))).catch((t=>{if(t instanceof p.RequestError)throw t;throw new p.RequestError(t.message,500,{request:e})}))}async function getResponseData(e){const t=e.headers.get("content-type");if(/application\/json/.test(t)){return e.json()}if(!t||/^text\/|charset=utf-8$/.test(t)){return e.text()}return getBufferResponse(e)}function toErrorMessage(e){if(typeof e==="string")return e;if("message"in e){if(Array.isArray(e.errors)){return`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`}return e.message}return`Unknown error: ${JSON.stringify(e)}`}function withDefaults(e,t){const r=e.defaults(t);const newApi=function(e,t){const i=r.merge(e,t);if(!i.request||!i.request.hook){return fetchWrapper(r.parse(i))}const request=(e,t)=>fetchWrapper(r.parse(r.merge(e,t)));Object.assign(request,{endpoint:r,defaults:withDefaults.bind(null,r)});return i.request.hook(request,i)};return Object.assign(newApi,{endpoint:r,defaults:withDefaults.bind(null,r)})}const u=withDefaults(i.endpoint,{headers:{"user-agent":`octokit-request.js/${l} ${s.getUserAgent()}`}});t.request=u},9348:e=>{e.exports={newInvalidAsn1Error:function(e){var t=new Error;t.name="InvalidAsn1Error";t.message=e||"";return t}}},194:(e,t,r)=>{var i=r(9348);var s=r(2473);var n=r(290);var o=r(3200);e.exports={Reader:n,Writer:o};for(var p in s){if(s.hasOwnProperty(p))e.exports[p]=s[p]}for(var l in i){if(i.hasOwnProperty(l))e.exports[l]=i[l]}},290:(e,t,r)=>{var i=r(9491);var s=r(5118).Buffer;var n=r(2473);var o=r(9348);var p=o.newInvalidAsn1Error;function Reader(e){if(!e||!s.isBuffer(e))throw new TypeError("data must be a node Buffer");this._buf=e;this._size=e.length;this._len=0;this._offset=0}Object.defineProperty(Reader.prototype,"length",{enumerable:true,get:function(){return this._len}});Object.defineProperty(Reader.prototype,"offset",{enumerable:true,get:function(){return this._offset}});Object.defineProperty(Reader.prototype,"remain",{get:function(){return this._size-this._offset}});Object.defineProperty(Reader.prototype,"buffer",{get:function(){return this._buf.slice(this._offset)}});Reader.prototype.readByte=function(e){if(this._size-this._offset<1)return null;var t=this._buf[this._offset]&255;if(!e)this._offset+=1;return t};Reader.prototype.peek=function(){return this.readByte(true)};Reader.prototype.readLength=function(e){if(e===undefined)e=this._offset;if(e>=this._size)return null;var t=this._buf[e++]&255;if(t===null)return null;if((t&128)===128){t&=127;if(t===0)throw p("Indefinite length not supported");if(t>4)throw p("encoding too long");if(this._size-e<t)return null;this._len=0;for(var r=0;r<t;r++)this._len=(this._len<<8)+(this._buf[e++]&255)}else{this._len=t}return e};Reader.prototype.readSequence=function(e){var t=this.peek();if(t===null)return null;if(e!==undefined&&e!==t)throw p("Expected 0x"+e.toString(16)+": got 0x"+t.toString(16));var r=this.readLength(this._offset+1);if(r===null)return null;this._offset=r;return t};Reader.prototype.readInt=function(){return this._readTag(n.Integer)};Reader.prototype.readBoolean=function(){return this._readTag(n.Boolean)===0?false:true};Reader.prototype.readEnumeration=function(){return this._readTag(n.Enumeration)};Reader.prototype.readString=function(e,t){if(!e)e=n.OctetString;var r=this.peek();if(r===null)return null;if(r!==e)throw p("Expected 0x"+e.toString(16)+": got 0x"+r.toString(16));var i=this.readLength(this._offset+1);if(i===null)return null;if(this.length>this._size-i)return null;this._offset=i;if(this.length===0)return t?s.alloc(0):"";var o=this._buf.slice(this._offset,this._offset+this.length);this._offset+=this.length;return t?o:o.toString("utf8")};Reader.prototype.readOID=function(e){if(!e)e=n.OID;var t=this.readString(e,true);if(t===null)return null;var r=[];var i=0;for(var s=0;s<t.length;s++){var o=t[s]&255;i<<=7;i+=o&127;if((o&128)===0){r.push(i);i=0}}i=r.shift();r.unshift(i%40);r.unshift(i/40>>0);return r.join(".")};Reader.prototype._readTag=function(e){i.ok(e!==undefined);var t=this.peek();if(t===null)return null;if(t!==e)throw p("Expected 0x"+e.toString(16)+": got 0x"+t.toString(16));var r=this.readLength(this._offset+1);if(r===null)return null;if(this.length>4)throw p("Integer too long: "+this.length);if(this.length>this._size-r)return null;this._offset=r;var s=this._buf[this._offset];var n=0;for(var o=0;o<this.length;o++){n<<=8;n|=this._buf[this._offset++]&255}if((s&128)===128&&o!==4)n-=1<<o*8;return n>>0};e.exports=Reader},2473:e=>{e.exports={EOC:0,Boolean:1,Integer:2,BitString:3,OctetString:4,Null:5,OID:6,ObjectDescriptor:7,External:8,Real:9,Enumeration:10,PDV:11,Utf8String:12,RelativeOID:13,Sequence:16,Set:17,NumericString:18,PrintableString:19,T61String:20,VideotexString:21,IA5String:22,UTCTime:23,GeneralizedTime:24,GraphicString:25,VisibleString:26,GeneralString:28,UniversalString:29,CharacterString:30,BMPString:31,Constructor:32,Context:128}},3200:(e,t,r)=>{var i=r(9491);var s=r(5118).Buffer;var n=r(2473);var o=r(9348);var p=o.newInvalidAsn1Error;var l={size:1024,growthFactor:8};function merge(e,t){i.ok(e);i.equal(typeof e,"object");i.ok(t);i.equal(typeof t,"object");var r=Object.getOwnPropertyNames(e);r.forEach((function(r){if(t[r])return;var i=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,i)}));return t}function Writer(e){e=merge(l,e||{});this._buf=s.alloc(e.size||1024);this._size=this._buf.length;this._offset=0;this._options=e;this._seq=[]}Object.defineProperty(Writer.prototype,"buffer",{get:function(){if(this._seq.length)throw p(this._seq.length+" unended sequence(s)");return this._buf.slice(0,this._offset)}});Writer.prototype.writeByte=function(e){if(typeof e!=="number")throw new TypeError("argument must be a Number");this._ensure(1);this._buf[this._offset++]=e};Writer.prototype.writeInt=function(e,t){if(typeof e!=="number")throw new TypeError("argument must be a Number");if(typeof t!=="number")t=n.Integer;var r=4;while(((e&4286578688)===0||(e&4286578688)===4286578688>>0)&&r>1){r--;e<<=8}if(r>4)throw p("BER ints cannot be > 0xffffffff");this._ensure(2+r);this._buf[this._offset++]=t;this._buf[this._offset++]=r;while(r-- >0){this._buf[this._offset++]=(e&4278190080)>>>24;e<<=8}};Writer.prototype.writeNull=function(){this.writeByte(n.Null);this.writeByte(0)};Writer.prototype.writeEnumeration=function(e,t){if(typeof e!=="number")throw new TypeError("argument must be a Number");if(typeof t!=="number")t=n.Enumeration;return this.writeInt(e,t)};Writer.prototype.writeBoolean=function(e,t){if(typeof e!=="boolean")throw new TypeError("argument must be a Boolean");if(typeof t!=="number")t=n.Boolean;this._ensure(3);this._buf[this._offset++]=t;this._buf[this._offset++]=1;this._buf[this._offset++]=e?255:0};Writer.prototype.writeString=function(e,t){if(typeof e!=="string")throw new TypeError("argument must be a string (was: "+typeof e+")");if(typeof t!=="number")t=n.OctetString;var r=s.byteLength(e);this.writeByte(t);this.writeLength(r);if(r){this._ensure(r);this._buf.write(e,this._offset);this._offset+=r}};Writer.prototype.writeBuffer=function(e,t){if(typeof t!=="number")throw new TypeError("tag must be a number");if(!s.isBuffer(e))throw new TypeError("argument must be a buffer");this.writeByte(t);this.writeLength(e.length);this._ensure(e.length);e.copy(this._buf,this._offset,0,e.length);this._offset+=e.length};Writer.prototype.writeStringArray=function(e){if(!e instanceof Array)throw new TypeError("argument must be an Array[String]");var t=this;e.forEach((function(e){t.writeString(e)}))};Writer.prototype.writeOID=function(e,t){if(typeof e!=="string")throw new TypeError("argument must be a string");if(typeof t!=="number")t=n.OID;if(!/^([0-9]+\.){3,}[0-9]+$/.test(e))throw new Error("argument is not a valid OID string");function encodeOctet(e,t){if(t<128){e.push(t)}else if(t<16384){e.push(t>>>7|128);e.push(t&127)}else if(t<2097152){e.push(t>>>14|128);e.push((t>>>7|128)&255);e.push(t&127)}else if(t<268435456){e.push(t>>>21|128);e.push((t>>>14|128)&255);e.push((t>>>7|128)&255);e.push(t&127)}else{e.push((t>>>28|128)&255);e.push((t>>>21|128)&255);e.push((t>>>14|128)&255);e.push((t>>>7|128)&255);e.push(t&127)}}var r=e.split(".");var i=[];i.push(parseInt(r[0],10)*40+parseInt(r[1],10));r.slice(2).forEach((function(e){encodeOctet(i,parseInt(e,10))}));var s=this;this._ensure(2+i.length);this.writeByte(t);this.writeLength(i.length);i.forEach((function(e){s.writeByte(e)}))};Writer.prototype.writeLength=function(e){if(typeof e!=="number")throw new TypeError("argument must be a Number");this._ensure(4);if(e<=127){this._buf[this._offset++]=e}else if(e<=255){this._buf[this._offset++]=129;this._buf[this._offset++]=e}else if(e<=65535){this._buf[this._offset++]=130;this._buf[this._offset++]=e>>8;this._buf[this._offset++]=e}else if(e<=16777215){this._buf[this._offset++]=131;this._buf[this._offset++]=e>>16;this._buf[this._offset++]=e>>8;this._buf[this._offset++]=e}else{throw p("Length too long (> 4 bytes)")}};Writer.prototype.startSequence=function(e){if(typeof e!=="number")e=n.Sequence|n.Constructor;this.writeByte(e);this._seq.push(this._offset);this._ensure(3);this._offset+=3};Writer.prototype.endSequence=function(){var e=this._seq.pop();var t=e+3;var r=this._offset-t;if(r<=127){this._shift(t,r,-2);this._buf[e]=r}else if(r<=255){this._shift(t,r,-1);this._buf[e]=129;this._buf[e+1]=r}else if(r<=65535){this._buf[e]=130;this._buf[e+1]=r>>8;this._buf[e+2]=r}else if(r<=16777215){this._shift(t,r,1);this._buf[e]=131;this._buf[e+1]=r>>16;this._buf[e+2]=r>>8;this._buf[e+3]=r}else{throw p("Sequence too long")}};Writer.prototype._shift=function(e,t,r){i.ok(e!==undefined);i.ok(t!==undefined);i.ok(r);this._buf.copy(this._buf,e+r,e,e+t);this._offset+=r};Writer.prototype._ensure=function(e){i.ok(e);if(this._size-this._offset<e){var t=this._size*this._options.growthFactor;if(t-this._offset<e)t+=e;var r=s.alloc(t);this._buf.copy(r,0,0,this._offset);this._buf=r;this._size=t}};e.exports=Writer},970:(e,t,r)=>{var i=r(194);e.exports={Ber:i,BerReader:i.Reader,BerWriter:i.Writer}},5447:(e,t,r)=>{"use strict";var i=r(8729).lowlevel.crypto_hash;var s=0;var Blowfish=function(){this.S=[new Uint32Array([3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946]),new Uint32Array([1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055]),new Uint32Array([3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504]),new Uint32Array([976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462])];this.P=new Uint32Array([608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731])};function F(e,t,r){return(e[0][t[r+3]]+e[1][t[r+2]]^e[2][t[r+1]])+e[3][t[r]]}Blowfish.prototype.encipher=function(e,t){if(t===undefined){t=new Uint8Array(e.buffer);if(e.byteOffset!==0)t=t.subarray(e.byteOffset)}e[0]^=this.P[0];for(var r=1;r<16;r+=2){e[1]^=F(this.S,t,0)^this.P[r];e[0]^=F(this.S,t,4)^this.P[r+1]}var i=e[0];e[0]=e[1]^this.P[17];e[1]=i};Blowfish.prototype.decipher=function(e){var t=new Uint8Array(e.buffer);if(e.byteOffset!==0)t=t.subarray(e.byteOffset);e[0]^=this.P[17];for(var r=16;r>0;r-=2){e[1]^=F(this.S,t,0)^this.P[r];e[0]^=F(this.S,t,4)^this.P[r-1]}var i=e[0];e[0]=e[1]^this.P[0];e[1]=i};function stream2word(e,t){var r,i=0;for(r=0;r<4;r++,s++){if(s>=t)s=0;i=i<<8|e[s]}return i}Blowfish.prototype.expand0state=function(e,t){var r=new Uint32Array(2),i,n;var o=new Uint8Array(r.buffer);for(i=0,s=0;i<18;i++){this.P[i]^=stream2word(e,t)}s=0;for(i=0;i<18;i+=2){this.encipher(r,o);this.P[i]=r[0];this.P[i+1]=r[1]}for(i=0;i<4;i++){for(n=0;n<256;n+=2){this.encipher(r,o);this.S[i][n]=r[0];this.S[i][n+1]=r[1]}}};Blowfish.prototype.expandstate=function(e,t,r,i){var n=new Uint32Array(2),o,p;for(o=0,s=0;o<18;o++){this.P[o]^=stream2word(r,i)}for(o=0,s=0;o<18;o+=2){n[0]^=stream2word(e,t);n[1]^=stream2word(e,t);this.encipher(n);this.P[o]=n[0];this.P[o+1]=n[1]}for(o=0;o<4;o++){for(p=0;p<256;p+=2){n[0]^=stream2word(e,t);n[1]^=stream2word(e,t);this.encipher(n);this.S[o][p]=n[0];this.S[o][p+1]=n[1]}}s=0};Blowfish.prototype.enc=function(e,t){for(var r=0;r<t;r++){this.encipher(e.subarray(r*2))}};Blowfish.prototype.dec=function(e,t){for(var r=0;r<t;r++){this.decipher(e.subarray(r*2))}};var n=8,o=32;function bcrypt_hash(e,t,r){var i=new Blowfish,s=new Uint32Array(n),o,p=new Uint8Array([79,120,121,99,104,114,111,109,97,116,105,99,66,108,111,119,102,105,115,104,83,119,97,116,68,121,110,97,109,105,116,101]);i.expandstate(t,64,e,64);for(o=0;o<64;o++){i.expand0state(t,64);i.expand0state(e,64)}for(o=0;o<n;o++)s[o]=stream2word(p,p.byteLength);for(o=0;o<64;o++)i.enc(s,s.byteLength/8);for(o=0;o<n;o++){r[4*o+3]=s[o]>>>24;r[4*o+2]=s[o]>>>16;r[4*o+1]=s[o]>>>8;r[4*o+0]=s[o]}}function bcrypt_pbkdf(e,t,r,s,n,p,l){var u=new Uint8Array(64),m=new Uint8Array(64),h=new Uint8Array(o),g=new Uint8Array(o),_=new Uint8Array(s+4),E,w,v,b,y,T,I=p;if(l<1)return-1;if(t===0||s===0||p===0||p>h.byteLength*h.byteLength||s>1<<20)return-1;b=Math.floor((p+h.byteLength-1)/h.byteLength);v=Math.floor((p+b-1)/b);for(E=0;E<s;E++)_[E]=r[E];i(u,e,t);for(T=1;p>0;T++){_[s+0]=T>>>24;_[s+1]=T>>>16;_[s+2]=T>>>8;_[s+3]=T;i(m,_,s+4);bcrypt_hash(u,m,g);for(E=h.byteLength;E--;)h[E]=g[E];for(E=1;E<l;E++){i(m,g,g.byteLength);bcrypt_hash(u,m,g);for(w=0;w<h.byteLength;w++)h[w]^=g[w]}v=Math.min(v,p);for(E=0;E<v;E++){y=E*b+(T-1);if(y>=I)break;n[y]=h[E]}p-=E}return 0}e.exports={BLOCKS:n,HASHSIZE:o,hash:bcrypt_hash,pbkdf:bcrypt_pbkdf}},3682:(e,t,r)=>{var i=r(4670);var s=r(5549);var n=r(6819);var o=Function.bind;var p=o.bind(o);function bindApi(e,t,r){var i=p(n,null).apply(null,r?[t,r]:[t]);e.api={remove:i};e.remove=i;["before","error","after","wrap"].forEach((function(i){var n=r?[t,i,r]:[t,i];e[i]=e.api[i]=p(s,null).apply(null,n)}))}function HookSingular(){var e="h";var t={registry:{}};var r=i.bind(null,t,e);bindApi(r,t,e);return r}function HookCollection(){var e={registry:{}};var t=i.bind(null,e);bindApi(t,e);return t}var l=false;function Hook(){if(!l){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');l=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},5549:e=>{e.exports=addHook;function addHook(e,t,r,i){var s=i;if(!e.registry[r]){e.registry[r]=[]}if(t==="before"){i=function(e,t){return Promise.resolve().then(s.bind(null,t)).then(e.bind(null,t))}}if(t==="after"){i=function(e,t){var r;return Promise.resolve().then(e.bind(null,t)).then((function(e){r=e;return s(r,t)})).then((function(){return r}))}}if(t==="error"){i=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return s(e,t)}))}}e.registry[r].push({hook:i,orig:s})}},4670:e=>{e.exports=register;function register(e,t,r,i){if(typeof r!=="function"){throw new Error("method for before hook must be a function")}if(!i){i={}}if(Array.isArray(t)){return t.reverse().reduce((function(t,r){return register.bind(null,e,r,t,i)}),r)()}return Promise.resolve().then((function(){if(!e.registry[t]){return r(i)}return e.registry[t].reduce((function(e,t){return t.hook.bind(null,e,i)}),r)()}))}},6819:e=>{e.exports=removeHook;function removeHook(e,t,r){if(!e.registry[t]){return}var i=e.registry[t].map((function(e){return e.orig})).indexOf(r);if(i===-1){return}e.registry[t].splice(i,1)}},4137:(e,t,r)=>{"use strict";const i=r(4240);e.exports=i.getCPUInfo},8932:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}t.Deprecation=Deprecation},3287:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,r;if(isObject(e)===false)return false;t=e.constructor;if(t===undefined)return true;r=t.prototype;if(isObject(r)===false)return false;if(r.hasOwnProperty("isPrototypeOf")===false){return false}return true}t.isPlainObject=isPlainObject},467:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var i=_interopDefault(r(2781));var s=_interopDefault(r(3685));var n=_interopDefault(r(7310));var o=_interopDefault(r(8665));var p=_interopDefault(r(5687));var l=_interopDefault(r(9796));const u=i.Readable;const m=Symbol("buffer");const h=Symbol("type");class Blob{constructor(){this[h]="";const e=arguments[0];const t=arguments[1];const r=[];let i=0;if(e){const t=e;const s=Number(t.length);for(let e=0;e<s;e++){const s=t[e];let n;if(s instanceof Buffer){n=s}else if(ArrayBuffer.isView(s)){n=Buffer.from(s.buffer,s.byteOffset,s.byteLength)}else if(s instanceof ArrayBuffer){n=Buffer.from(s)}else if(s instanceof Blob){n=s[m]}else{n=Buffer.from(typeof s==="string"?s:String(s))}i+=n.length;r.push(n)}}this[m]=Buffer.concat(r);let s=t&&t.type!==undefined&&String(t.type).toLowerCase();if(s&&!/[^\u0020-\u007E]/.test(s)){this[h]=s}}get size(){return this[m].length}get type(){return this[h]}text(){return Promise.resolve(this[m].toString())}arrayBuffer(){const e=this[m];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new u;e._read=function(){};e.push(this[m]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const r=arguments[1];let i,s;if(t===undefined){i=0}else if(t<0){i=Math.max(e+t,0)}else{i=Math.min(t,e)}if(r===undefined){s=e}else if(r<0){s=Math.max(e+r,0)}else{s=Math.min(r,e)}const n=Math.max(s-i,0);const o=this[m];const p=o.slice(i,i+n);const l=new Blob([],{type:arguments[2]});l[m]=p;return l}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,r){Error.call(this,e);this.message=e;this.type=t;if(r){this.code=this.errno=r.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let g;try{g=r(2877).convert}catch(e){}const _=Symbol("Body internals");const E=i.PassThrough;function Body(e){var t=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},s=r.size;let n=s===undefined?0:s;var o=r.timeout;let p=o===undefined?0:o;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof i);else{e=Buffer.from(String(e))}this[_]={body:e,disturbed:false,error:null};this.size=n;this.timeout=p;if(e instanceof i){e.on("error",(function(e){const r=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[_].error=r}))}}Body.prototype={get body(){return this[_].body},get bodyUsed(){return this[_].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[m]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,r)}}};function consumeBody(){var e=this;if(this[_].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[_].disturbed=true;if(this[_].error){return Body.Promise.reject(this[_].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof i)){return Body.Promise.resolve(Buffer.alloc(0))}let r=[];let s=0;let n=false;return new Body.Promise((function(i,o){let p;if(e.timeout){p=setTimeout((function(){n=true;o(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){n=true;o(t)}else{o(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(n||t===null){return}if(e.size&&s+t.length>e.size){n=true;o(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}s+=t.length;r.push(t)}));t.on("end",(function(){if(n){return}clearTimeout(p);try{i(Buffer.concat(r,s))}catch(t){o(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof g!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const r=t.get("content-type");let i="utf-8";let s,n;if(r){s=/charset=([^;]*)/i.exec(r)}n=e.slice(0,1024).toString();if(!s&&n){s=/<meta.+?charset=(['"])(.+?)\1/i.exec(n)}if(!s&&n){s=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(n);if(!s){s=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(n);if(s){s.pop()}}if(s){s=/charset=(.*)/i.exec(s.pop())}}if(!s&&n){s=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(n)}if(s){i=s.pop();if(i==="gb2312"||i==="gbk"){i="gb18030"}}return g(e,"UTF-8",i).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,r;let s=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(s instanceof i&&typeof s.getBoundary!=="function"){t=new E;r=new E;s.pipe(t);s.pipe(r);e[_].body=t;s=r}return s}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof i){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const r=t.body;if(r===null){e.end()}else if(isBlob(r)){r.stream().pipe(e)}else if(Buffer.isBuffer(r)){e.write(r);e.end()}else{r.pipe(e)}}Body.Promise=global.Promise;const w=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const v=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(w.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(v.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const r in e){if(r.toLowerCase()===t){return r}}return undefined}const b=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[b]=Object.create(null);if(e instanceof Headers){const t=e.raw();const r=Object.keys(t);for(const e of r){for(const r of t[e]){this.append(e,r)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const r=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}r.push(Array.from(t))}for(const e of r){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const r=e[t];this.append(t,r)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[b],e);if(t===undefined){return null}return this[b][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let r=getHeaders(this);let i=0;while(i<r.length){var s=r[i];const n=s[0],o=s[1];e.call(t,o,n,this);r=getHeaders(this);i++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[b],e);this[b][r!==undefined?r:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const r=find(this[b],e);if(r!==undefined){this[b][r].push(t)}else{this[b][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[b],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[b],e);if(t!==undefined){delete this[b][t]}}raw(){return this[b]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const r=Object.keys(e[b]).sort();return r.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[b][t].join(", ")}:function(t){return[t.toLowerCase(),e[b][t].join(", ")]})}const y=Symbol("internal");function createHeadersIterator(e,t){const r=Object.create(T);r[y]={target:e,kind:t,index:0};return r}const T=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==T){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[y];const t=e.target,r=e.kind,i=e.index;const s=getHeaders(t,r);const n=s.length;if(i>=n){return{value:undefined,done:true}}this[y].index=i+1;return{value:s[i],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(T,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[b]);const r=find(e[b],"Host");if(r!==undefined){t[r]=t[r][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const r of Object.keys(e)){if(w.test(r)){continue}if(Array.isArray(e[r])){for(const i of e[r]){if(v.test(i)){continue}if(t[b][r]===undefined){t[b][r]=[i]}else{t[b][r].push(i)}}}else if(!v.test(e[r])){t[b][r]=[e[r]]}}return t}const I=Symbol("Response internals");const C=s.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const r=t.status||200;const i=new Headers(t.headers);if(e!=null&&!i.has("Content-Type")){const t=extractContentType(e);if(t){i.append("Content-Type",t)}}this[I]={url:t.url,status:r,statusText:t.statusText||C[r],headers:i,counter:t.counter}}get url(){return this[I].url||""}get status(){return this[I].status}get ok(){return this[I].status>=200&&this[I].status<300}get redirected(){return this[I].counter>0}get statusText(){return this[I].statusText}get headers(){return this[I].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const k=Symbol("Request internals");const R=n.URL||o.URL;const B=n.parse;const P=n.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new R(e).toString()}return B(e)}const O="destroy"in i.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[k]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let r;if(!isRequest(e)){if(e&&e.href){r=parseURL(e.href)}else{r=parseURL(`${e}`)}e={}}else{r=parseURL(e.url)}let i=t.method||e.method||"GET";i=i.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(i==="GET"||i==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let s=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,s,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const n=new Headers(t.headers||e.headers||{});if(s!=null&&!n.has("Content-Type")){const e=extractContentType(s);if(e){n.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in t)o=t.signal;if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[k]={method:i,redirect:t.redirect||e.redirect||"follow",headers:n,parsedURL:r,signal:o};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[k].method}get url(){return P(this[k].parsedURL)}get headers(){return this[k].headers}get redirect(){return this[k].redirect}get signal(){return this[k].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[k].parsedURL;const r=new Headers(e[k].headers);if(!r.has("Accept")){r.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof i.Readable&&!O){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let s=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){s="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){s=String(t)}}if(s){r.set("Content-Length",s)}if(!r.has("User-Agent")){r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!r.has("Accept-Encoding")){r.set("Accept-Encoding","gzip,deflate")}let n=e.agent;if(typeof n==="function"){n=n(t)}if(!r.has("Connection")&&!n){r.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:n})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const D=n.URL||o.URL;const U=i.PassThrough;const L=function isDomainOrSubdomain(e,t){const r=new D(t).hostname;const i=new D(e).hostname;return r===i||r[r.length-i.length-1]==="."&&r.endsWith(i)};function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(r,n){const o=new Request(e,t);const u=getNodeRequestOptions(o);const m=(u.protocol==="https:"?p:s).request;const h=o.signal;let g=null;const _=function abort(){let e=new AbortError("The user aborted a request.");n(e);if(o.body&&o.body instanceof i.Readable){o.body.destroy(e)}if(!g||!g.body)return;g.body.emit("error",e)};if(h&&h.aborted){_();return}const E=function abortAndFinalize(){_();finalize()};const w=m(u);let v;if(h){h.addEventListener("abort",E)}function finalize(){w.abort();if(h)h.removeEventListener("abort",E);clearTimeout(v)}if(o.timeout){w.once("socket",(function(e){v=setTimeout((function(){n(new FetchError(`network timeout at: ${o.url}`,"request-timeout"));finalize()}),o.timeout)}))}w.on("error",(function(e){n(new FetchError(`request to ${o.url} failed, reason: ${e.message}`,"system",e));finalize()}));w.on("response",(function(e){clearTimeout(v);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const i=t.get("Location");let s=null;try{s=i===null?null:new D(i,o.url).toString()}catch(e){if(o.redirect!=="manual"){n(new FetchError(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect"));finalize();return}}switch(o.redirect){case"error":n(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect"));finalize();return;case"manual":if(s!==null){try{t.set("Location",s)}catch(e){n(e)}}break;case"follow":if(s===null){break}if(o.counter>=o.follow){n(new FetchError(`maximum redirect reached at: ${o.url}`,"max-redirect"));finalize();return}const i={headers:new Headers(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!L(o.url,s)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){i.headers.delete(e)}}if(e.statusCode!==303&&o.body&&getTotalBytes(o)===null){n(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&o.method==="POST"){i.method="GET";i.body=undefined;i.headers.delete("content-length")}r(fetch(new Request(s,i)));finalize();return}}e.once("end",(function(){if(h)h.removeEventListener("abort",E)}));let i=e.pipe(new U);const s={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:o.size,timeout:o.timeout,counter:o.counter};const p=t.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||p===null||e.statusCode===204||e.statusCode===304){g=new Response(i,s);r(g);return}const u={flush:l.Z_SYNC_FLUSH,finishFlush:l.Z_SYNC_FLUSH};if(p=="gzip"||p=="x-gzip"){i=i.pipe(l.createGunzip(u));g=new Response(i,s);r(g);return}if(p=="deflate"||p=="x-deflate"){const t=e.pipe(new U);t.once("data",(function(e){if((e[0]&15)===8){i=i.pipe(l.createInflate())}else{i=i.pipe(l.createInflateRaw())}g=new Response(i,s);r(g)}));return}if(p=="br"&&typeof l.createBrotliDecompress==="function"){i=i.pipe(l.createBrotliDecompress());g=new Response(i,s);r(g);return}g=new Response(i,s);r(g)}));writeToStream(w,o)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},1223:(e,t,r)=>{var i=r(2940);e.exports=i(once);e.exports.strict=i(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||"Function wrapped with `once`";f.onceError=t+" shouldn't be called more than once";f.called=false;return f}},5118:(e,t,r)=>{"use strict";var i=r(4300);var s=i.Buffer;var n={};var o;for(o in i){if(!i.hasOwnProperty(o))continue;if(o==="SlowBuffer"||o==="Buffer")continue;n[o]=i[o]}var p=n.Buffer={};for(o in s){if(!s.hasOwnProperty(o))continue;if(o==="allocUnsafe"||o==="allocUnsafeSlow")continue;p[o]=s[o]}n.Buffer.prototype=s.prototype;if(!p.from||p.from===Uint8Array.from){p.from=function(e,t,r){if(typeof e==="number"){throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e)}if(e&&typeof e.length==="undefined"){throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}return s(e,t,r)}}if(!p.alloc){p.alloc=function(e,t,r){if(typeof e!=="number"){throw new TypeError('The "size" argument must be of type number. Received type '+typeof e)}if(e<0||e>=2*(1<<30)){throw new RangeError('The value "'+e+'" is invalid for option "size"')}var i=s(e);if(!t||t.length===0){i.fill(0)}else if(typeof r==="string"){i.fill(t,r)}else{i.fill(t)}return i}}if(!n.kStringMaxLength){try{n.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch(e){}}if(!n.constants){n.constants={MAX_LENGTH:n.kMaxLength};if(n.kStringMaxLength){n.constants.MAX_STRING_LENGTH=n.kStringMaxLength}}e.exports=n},3204:(e,t,r)=>{"use strict";const{Duplex:i,Readable:s,Writable:n}=r(2781);const{CHANNEL_EXTENDED_DATATYPE:{STDERR:o}}=r(6832);const{bufferSlice:p}=r(9475);const l=32*1024;const u=2*1024*1024;const m=u/2;class ClientStderr extends s{constructor(e,t){super(t);this._channel=e}_read(e){if(this._channel._waitChanDrain){this._channel._waitChanDrain=false;if(this._channel.incoming.window<=m)windowAdjust(this._channel)}}}class ServerStderr extends n{constructor(e){super({highWaterMark:u});this._channel=e}_write(e,t,r){const i=this._channel;const s=i._client._protocol;const n=i.outgoing;const l=n.packetSize;const u=n.id;let m=n.window;const h=e.length;let g=0;if(n.state!=="open")return;while(h-g>0&&m>0){let t=h-g;if(t>m)t=m;if(t>l)t=l;if(g===0&&t===h)s.channelExtData(u,e,o);else s.channelExtData(u,p(e,g,g+t),o);g+=t;m-=t}n.window=m;if(h-g>0){if(m===0)i._waitWindow=true;if(g>0)i._chunkErr=p(e,g,h);else i._chunkErr=e;i._chunkcbErr=r;return}r()}}class Channel extends i{constructor(e,t,r){const i={highWaterMark:u,allowHalfOpen:!r||r&&r.allowHalfOpen!==false,emitClose:false};super(i);this.allowHalfOpen=i.allowHalfOpen;const s=!!(r&&r.server);this.server=s;this.type=t.type;this.subtype=undefined;this.incoming=t.incoming;this.outgoing=t.outgoing;this._callbacks=[];this._client=e;this._hasX11=false;this._exit={code:undefined,signal:undefined,dump:undefined,desc:undefined};this.stdin=this.stdout=this;if(s)this.stderr=new ServerStderr(this);else this.stderr=new ClientStderr(this,i);this._waitWindow=false;this._waitChanDrain=false;this._chunk=undefined;this._chunkcb=undefined;this._chunkErr=undefined;this._chunkcbErr=undefined;this.on("finish",onFinish).on("prefinish",onFinish);this.on("end",onEnd).on("close",onEnd)}_read(e){if(this._waitChanDrain){this._waitChanDrain=false;if(this.incoming.window<=m)windowAdjust(this)}}_write(e,t,r){const i=this._client._protocol;const s=this.outgoing;const n=s.packetSize;const o=s.id;let l=s.window;const u=e.length;let m=0;if(s.state!=="open")return;while(u-m>0&&l>0){let t=u-m;if(t>l)t=l;if(t>n)t=n;if(m===0&&t===u)i.channelData(o,e);else i.channelData(o,p(e,m,m+t));m+=t;l-=t}s.window=l;if(u-m>0){if(l===0)this._waitWindow=true;if(m>0)this._chunk=p(e,m,u);else this._chunk=e;this._chunkcb=r;return}r()}eof(){if(this.outgoing.state==="open"){this.outgoing.state="eof";this._client._protocol.channelEOF(this.outgoing.id)}}close(){if(this.outgoing.state==="open"||this.outgoing.state==="eof"){this.outgoing.state="closing";this._client._protocol.channelClose(this.outgoing.id)}}destroy(){this.end();this.close();return this}setWindow(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");if(this.type==="session"&&(this.subtype==="shell"||this.subtype==="exec")&&this.writable&&this.outgoing.state==="open"){this._client._protocol.windowChange(this.outgoing.id,e,t,r,i)}}signal(e){if(this.server)throw new Error("Client-only method called in server mode");if(this.type==="session"&&this.writable&&this.outgoing.state==="open"){this._client._protocol.signal(this.outgoing.id,e)}}exit(e,t,r){if(!this.server)throw new Error("Server-only method called in client mode");if(this.type==="session"&&this.writable&&this.outgoing.state==="open"){if(typeof e==="number"){this._client._protocol.exitStatus(this.outgoing.id,e)}else{this._client._protocol.exitSignal(this.outgoing.id,e,t,r)}}}}function onFinish(){this.eof();if(this.server||!this.allowHalfOpen)this.close();this.writable=false}function onEnd(){this.readable=false}function windowAdjust(e){if(e.outgoing.state==="closed")return;const t=u-e.incoming.window;if(t<=0)return;e.incoming.window+=t;e._client._protocol.channelWindowAdjust(e.outgoing.id,t)}e.exports={Channel:Channel,MAX_WINDOW:u,PACKET_SIZE:l,windowAdjust:windowAdjust,WINDOW_THRESHOLD:m}},9054:(e,t,r)=>{"use strict";const{Socket:i}=r(1808);const{Duplex:s}=r(2781);const{resolve:n}=r(1017);const{readFile:o}=r(7147);const{execFile:p,spawn:l}=r(2081);const{isParsedKey:u,parseKey:m}=r(2218);const{makeBufferParser:h,readUInt32BE:g,writeUInt32BE:_,writeUInt32LE:E}=r(9475);function once(e){let t=false;return(...r)=>{if(t)return;t=true;e(...r)}}function concat(e,t){const r=Buffer.allocUnsafe(e.length+t.length);e.copy(r,0);t.copy(r,e.length);return r}function noop(){}const w=Buffer.alloc(0);const v=h();class BaseAgent{getIdentities(e){e(new Error("Missing getIdentities() implementation"))}sign(e,t,r,i){if(typeof r==="function")i=r;i(new Error("Missing sign() implementation"))}}class OpenSSHAgent extends BaseAgent{constructor(e){super();this.socketPath=e}getStream(e){e=once(e);const t=new i;t.on("connect",(()=>{e(null,t)}));t.on("close",onFail).on("end",onFail).on("error",onFail);t.connect(this.socketPath);function onFail(){try{t.destroy()}catch{}e(new Error("Failed to connect to agent"))}}getIdentities(e){e=once(e);this.getStream(((t,r)=>{function onFail(t){if(r){try{r.destroy()}catch{}}if(!t)t=new Error("Failed to retrieve identities from agent");e(t)}if(t)return onFail(t);const i=new I(true);i.on("error",onFail);i.pipe(r).pipe(i);r.on("close",onFail).on("end",onFail).on("error",onFail);i.getIdentities(((t,i)=>{if(t)return onFail(t);try{r.destroy()}catch{}e(null,i)}))}))}sign(e,t,r,i){if(typeof r==="function"){i=r;r=undefined}else if(typeof r!=="object"||r===null){r=undefined}i=once(i);this.getStream(((s,n)=>{function onFail(e){if(n){try{n.destroy()}catch{}}if(!e)e=new Error("Failed to sign data with agent");i(e)}if(s)return onFail(s);const o=new I(true);o.on("error",onFail);o.pipe(n).pipe(o);n.on("close",onFail).on("end",onFail).on("error",onFail);o.sign(e,t,r,((e,t)=>{if(e)return onFail(e);try{n.destroy()}catch{}i(null,t)}))}))}}const b=(()=>{const e=10;const t=11;const i=12;const n=13;const o=14;const p=15;const u=r.ab+"pagent.exe";const m={[e]:new Error("Invalid pagent.exe arguments"),[t]:new Error("Pageant is not running"),[i]:new Error("pagent.exe could not create an mmap"),[n]:new Error("pagent.exe could not set mode for stdin"),[o]:new Error("pagent.exe could not set mode for stdout"),[p]:new Error("pagent.exe did not get expected input payload")};function destroy(e){e.buffer=null;if(e.proc){e.proc.kill();e.proc=undefined}}class PageantSocket extends s{constructor(){super();this.proc=undefined;this.buffer=null}_read(e){}_write(e,t,i){if(this.buffer===null){this.buffer=e}else{const t=Buffer.allocUnsafe(this.buffer.length+e.length);this.buffer.copy(t,0);e.copy(t,this.buffer.length);this.buffer=t}if(this.buffer.length<4)return i();const s=g(this.buffer,0);if(this.buffer.length-4<s)return i();e=this.buffer.slice(0,4+s);if(this.buffer.length>4+s)return i(new Error("Unexpected multiple agent requests"));this.buffer=null;let n;const o=this.proc=l(r.ab+"pagent.exe",[e.length]);o.stdout.on("data",(e=>{this.push(e)}));o.on("error",(e=>{n=e;i(n)}));o.on("close",(e=>{this.proc=undefined;if(!n){if(n=m[e])return i(n);i()}}));o.stdin.end(e)}_final(e){destroy(this);e()}_destroy(e,t){destroy(this);t()}}return class PageantAgent extends OpenSSHAgent{getStream(e){e(null,new PageantSocket)}}})();const y=(()=>{const e=/^!<socket >(\d+) s ([A-Z0-9]{8}-[A-Z0-9]{8}-[A-Z0-9]{8}-[A-Z0-9]{8})/;return class CygwinAgent extends OpenSSHAgent{getStream(t){t=once(t);let r=this.socketPath;let s=false;o(r,(function readCygsocket(n,l){if(n){if(s)return t(new Error("Invalid cygwin unix socket path"));p("cygpath",["-w",r],((e,i,n)=>{if(e||i.length===0)return t(new Error("Invalid cygwin unix socket path"));s=true;r=i.toString().replace(/[\r\n]/g,"");o(r,readCygsocket)}));return}const u=e.exec(l.toString("ascii"));if(!u)return t(new Error("Malformed cygwin unix socket file"));let m;let h=0;let _=false;const w=[];let v;let b=Buffer.alloc(12);const y=parseInt(u[1],10);const T=u[2].replace(/-/g,"");const I=Buffer.allocUnsafe(16);for(let e=0,t=0;t<32;++e,t+=2)I[e]=parseInt(T.substring(t,t+2),16);for(let e=0;e<16;e+=4)E(I,g(I,e),e);tryConnect();function _onconnect(){h=0;m="secret";v.write(I)}function _ondata(e){h+=e.length;if(m==="secret"){if(h===16){h=0;m="creds";v.write(b)}return}if(m==="creds"){if(!_)w.push(e);if(h===12){v.removeListener("connect",_onconnect);v.removeListener("data",_ondata);v.removeListener("error",onFail);v.removeListener("end",onFail);v.removeListener("close",onFail);if(_)return t(null,v);_=true;b=Buffer.concat(w);E(b,process.pid,0);v.on("error",(()=>{}));v.destroy();tryConnect()}}}function onFail(){t(new Error("Problem negotiating cygwin unix socket security"))}function tryConnect(){v=new i;v.on("connect",_onconnect);v.on("data",_ondata);v.on("error",onFail);v.on("end",onFail);v.on("close",onFail);v.connect(y)}}))}}})();const T=/^[/\\][/\\]\.[/\\]pipe[/\\].+/;function createAgent(e){if(process.platform==="win32"&&!T.test(e)){return e==="pageant"?new b:new y(e)}return new OpenSSHAgent(e)}const I=(()=>{const e=11;const t=13;const r=5;const i=12;const n=14;const o=1<<1;const p=1<<2;const l=0;const h=1;function processResponses(e){let t;while(e[T].length){const r=e[T][0][b];if(r===undefined)break;e[T].shift();t=e.push(r)}return t}const E=Symbol("Inbound Request Type");const b=Symbol("Inbound Request Response");const y=Symbol("Inbound Request Context");class AgentInboundRequest{constructor(e,t){this[E]=e;this[b]=undefined;this[y]=t}hasResponded(){return this[b]!==undefined}getType(){return this[E]}getContext(){return this[y]}}function respond(e,t,r){t[b]=r;return processResponses(e)}function cleanup(e){e[C]=null;if(e[I]===l){const t=e[T];if(t&&t.length){e[T]=[];for(const e of t)e.cb(new Error("No reply from server"))}}try{e.end()}catch{}setImmediate((()=>{if(!e[B])e.emit("end");if(!e[R])e.emit("close")}))}function onClose(){this[R]=true}function onEnd(){this[B]=true}const T=Symbol("Requests");const I=Symbol("Agent Protocol Role");const C=Symbol("Agent Protocol Buffer");const k=Symbol("Agent Protocol Current Message Length");const R=Symbol("Agent Protocol Closed");const B=Symbol("Agent Protocol Ended");return class AgentProtocol extends s{constructor(e){super({autoDestroy:true,emitClose:false});this[I]=e?l:h;this[T]=[];this[C]=null;this[k]=-1;this.once("end",onEnd);this.once("close",onClose)}_read(e){}_write(s,u,h){if(this[C]===null)this[C]=s;else this[C]=concat(this[C],s);let _=this[C];let E=_.length;let w=0;while(w<E){if(E<5)break;if(this[k]===-1)this[k]=g(_,w);if(E<4+this[k])break;const s=_[w+=4];++w;if(this[I]===l){if(this[T].length===0)return h(new Error("Received unexpected message from server"));const o=this[T].shift();switch(s){case r:o.cb(new Error("Agent responded with failure"));break;case i:{if(o.type!==e)return h(new Error("Agent responded with wrong message type"));v.init(_,w);const t=v.readUInt32BE();if(t===undefined){v.clear();return h(new Error("Malformed agent response"))}const r=[];for(let e=0;e<t;++e){let e=v.readString();if(e===undefined){v.clear();return h(new Error("Malformed agent response"))}const t=v.readString(true);if(t===undefined){v.clear();return h(new Error("Malformed agent response"))}e=m(e);if(e instanceof Error)continue;e.comment=e.comment||t;r.push(e)}w=v.pos();v.clear();o.cb(null,r);break}case n:{if(o.type!==t)return h(new Error("Agent responded with wrong message type"));v.init(_,w);let e=v.readString();w=v.pos();v.clear();if(e===undefined)return h(new Error("Malformed agent response"));v.init(e,0);v.readString(true);e=v.readString();v.clear();if(e===undefined)return h(new Error("Malformed OpenSSH signature format"));o.cb(null,e);break}default:return h(new Error("Agent responded with unsupported message type"))}}else{switch(s){case e:{const e=new AgentInboundRequest(s);this[T].push(e);this.emit("identities",e);break}case t:{v.init(_,w);let e=v.readString();const t=v.readString();const r=v.readUInt32BE();w=v.pos();v.clear();if(r===undefined){const e=new AgentInboundRequest(s);this[T].push(e);return this.failureReply(e)}e=m(e);if(e instanceof Error){const e=new AgentInboundRequest(s);this[T].push(e);return this.failureReply(e)}const i={hash:undefined};let n;if(e.type==="ssh-rsa"){if(r&o){n="rsa-sha2-256";i.hash="sha256"}else if(r&p){n="rsa-sha2-512";i.hash="sha512"}}if(n===undefined)n=e.type;const l=new AgentInboundRequest(s,n);this[T].push(l);this.emit("sign",l,e,t,i);break}default:{const e=new AgentInboundRequest(s);this[T].push(e);this.failureReply(e)}}}this[k]=-1;if(w===E){this[C]=null;break}else{this[C]=_=_.slice(w);E=_.length;w=0}}h()}_destroy(e,t){cleanup(this);t()}_final(e){cleanup(this);e()}sign(e,r,i,s){if(this[I]!==l)throw new Error("Client-only method called with server role");if(typeof i==="function"){s=i;i=undefined}else if(typeof i!=="object"||i===null){i=undefined}let n=0;e=m(e);if(e instanceof Error)throw new Error("Invalid public key argument");if(e.type==="ssh-rsa"&&i){switch(i.hash){case"sha256":n=o;break;case"sha512":n=p;break}}e=e.getPublicSSH();const u=t;const h=e.length;const g=r.length;let E=0;const w=Buffer.allocUnsafe(4+1+4+h+4+g+4);_(w,w.length-4,E);w[E+=4]=u;_(w,h,++E);e.copy(w,E+=4);_(w,g,E+=h);r.copy(w,E+=4);_(w,n,E+=g);if(typeof s!=="function")s=noop;this[T].push({type:u,cb:s});return this.push(w)}getIdentities(t){if(this[I]!==l)throw new Error("Client-only method called with server role");const r=e;let i=0;const s=Buffer.allocUnsafe(4+1);_(s,s.length-4,i);s[i+=4]=r;if(typeof t!=="function")t=noop;this[T].push({type:r,cb:t});return this.push(s)}failureReply(e){if(this[I]!==h)throw new Error("Server-only method called with client role");if(!(e instanceof AgentInboundRequest))throw new Error("Wrong request argument");if(e.hasResponded())return true;let t=0;const i=Buffer.allocUnsafe(4+1);_(i,i.length-4,t);i[t+=4]=r;return respond(this,e,i)}getIdentitiesReply(t,r){if(this[I]!==h)throw new Error("Server-only method called with client role");if(!(t instanceof AgentInboundRequest))throw new Error("Wrong request argument");if(t.hasResponded())return true;if(t.getType()!==e)throw new Error("Invalid response to request");if(!Array.isArray(r))throw new Error("Keys argument must be an array");let s=4;const n=[];for(let e=0;e<r.length;++e){const t=r[e];if(typeof t!=="object"||t===null)throw new Error(`Invalid key entry: ${t}`);let i;let o;if(u(t)){i=t}else if(u(t.pubKey)){i=t.pubKey}else{if(typeof t.pubKey!=="object"||t.pubKey===null)continue;({pubKey:i,comment:o}=t.pubKey);i=m(i);if(i instanceof Error)continue}o=i.comment||o;i=i.getPublicSSH();s+=4+i.length;if(o&&typeof o==="string")o=Buffer.from(o);else if(!Buffer.isBuffer(o))o=w;s+=4+o.length;n.push({pubKey:i,comment:o})}let o=0;const p=Buffer.allocUnsafe(4+1+s);_(p,p.length-4,o);p[o+=4]=i;_(p,n.length,++o);o+=4;for(let e=0;e<n.length;++e){const{pubKey:t,comment:r}=n[e];_(p,t.length,o);t.copy(p,o+=4);_(p,r.length,o+=t.length);o+=4;if(r.length){r.copy(p,o);o+=r.length}}return respond(this,t,p)}signReply(e,r){if(this[I]!==h)throw new Error("Server-only method called with client role");if(!(e instanceof AgentInboundRequest))throw new Error("Wrong request argument");if(e.hasResponded())return true;if(e.getType()!==t)throw new Error("Invalid response to request");if(!Buffer.isBuffer(r))throw new Error("Signature argument must be a Buffer");if(r.length===0)throw new Error("Signature argument must be non-empty");let i=0;const s=e.getContext();const o=Buffer.byteLength(s);const p=Buffer.allocUnsafe(4+1+4+4+o+4+r.length);_(p,p.length-4,i);p[i+=4]=n;_(p,4+o+4+r.length,++i);_(p,o,i+=4);p.utf8Write(s,i+=4,o);_(p,r.length,i+=o);r.copy(p,i+=4);return respond(this,e,p)}}})();const C=Symbol("Agent");const k=Symbol("Agent Keys");const R=Symbol("Agent Keys Index");const B=Symbol("Agent Init Callbacks");class AgentContext{constructor(e){if(typeof e==="string")e=createAgent(e);else if(!isAgent(e))throw new Error("Invalid agent argument");this[C]=e;this[k]=null;this[R]=-1;this[B]=null}init(e){if(typeof e!=="function")e=noop;if(this[k]===null){if(this[B]===null){this[B]=[e];const doCbs=(...e)=>{process.nextTick((()=>{const t=this[B];this[B]=null;for(const r of t)r(...e)}))};this[C].getIdentities(once(((e,t)=>{if(e)return doCbs(e);if(!Array.isArray(t)){return doCbs(new Error("Agent implementation failed to provide keys"))}const r=[];for(let e of t){e=m(e);if(e instanceof Error){continue}r.push(e)}this[k]=r;this[R]=-1;doCbs()})))}else{this[B].push(e)}}else{process.nextTick(e)}}nextKey(){if(this[k]===null||++this[R]>=this[k].length){return false}return this[k][this[R]]}currentKey(){if(this[k]===null||this[R]>=this[k].length){return null}return this[k][this[R]]}pos(){if(this[k]===null||this[R]>=this[k].length){return-1}return this[R]}reset(){this[R]=-1}sign(...e){this[C].sign(...e)}}function isAgent(e){return e instanceof BaseAgent}e.exports={AgentContext:AgentContext,AgentProtocol:I,BaseAgent:BaseAgent,createAgent:createAgent,CygwinAgent:y,isAgent:isAgent,OpenSSHAgent:OpenSSHAgent,PageantAgent:b}},6063:(e,t,r)=>{"use strict";const{createHash:i,getHashes:s,randomFillSync:n}=r(6113);const{Socket:o}=r(1808);const{lookup:p}=r(9523);const l=r(2361);const u=s();const{COMPAT:m,CHANNEL_EXTENDED_DATATYPE:{STDERR:h},CHANNEL_OPEN_FAILURE:g,DEFAULT_CIPHER:_,DEFAULT_COMPRESSION:E,DEFAULT_KEX:w,DEFAULT_MAC:v,DEFAULT_SERVER_HOST_KEY:b,DISCONNECT_REASON:y,DISCONNECT_REASON_BY_VALUE:T,SUPPORTED_CIPHER:I,SUPPORTED_COMPRESSION:C,SUPPORTED_KEX:k,SUPPORTED_MAC:R,SUPPORTED_SERVER_HOST_KEY:B}=r(6832);const{init:P}=r(5708);const O=r(9031);const{parseKey:D}=r(2218);const{SFTP:U}=r(2026);const{bufferCopy:L,makeBufferParser:G,makeError:x,readUInt32BE:Q,sigSSHToASN1:V,writeUInt32BE:q}=r(9475);const{AgentContext:W,createAgent:j,isAgent:$}=r(9054);const{Channel:Y,MAX_WINDOW:z,PACKET_SIZE:J,windowAdjust:ee,WINDOW_THRESHOLD:te}=r(3204);const{ChannelManager:re,generateAlgorithmList:ie,isWritable:ae,onChannelOpenFailure:se,onCHANNEL_CLOSE:ne}=r(834);const oe=G();const pe=G();const de=/^OpenSSH_(?:(?![0-4])\d)|(?:\d{2,})/;const noop=e=>{};class Client extends l{constructor(){super();this.config={host:undefined,port:undefined,localAddress:undefined,localPort:undefined,forceIPv4:undefined,forceIPv6:undefined,keepaliveCountMax:undefined,keepaliveInterval:undefined,readyTimeout:undefined,ident:undefined,username:undefined,password:undefined,privateKey:undefined,tryKeyboard:undefined,agent:undefined,allowAgentFwd:undefined,authHandler:undefined,hostHashAlgo:undefined,hostHashCb:undefined,strictVendor:undefined,debug:undefined};this._agent=undefined;this._readyTimeout=undefined;this._chanMgr=undefined;this._callbacks=undefined;this._forwarding=undefined;this._forwardingUnix=undefined;this._acceptX11=undefined;this._agentFwdEnabled=undefined;this._remoteVer=undefined;this._protocol=undefined;this._sock=undefined;this._resetKA=undefined}connect(e){if(this._sock&&ae(this._sock)){this.once("close",(()=>{this.connect(e)}));this.end();return this}this.config.host=e.hostname||e.host||"localhost";this.config.port=e.port||22;this.config.localAddress=typeof e.localAddress==="string"?e.localAddress:undefined;this.config.localPort=typeof e.localPort==="string"||typeof e.localPort==="number"?e.localPort:undefined;this.config.forceIPv4=e.forceIPv4||false;this.config.forceIPv6=e.forceIPv6||false;this.config.keepaliveCountMax=typeof e.keepaliveCountMax==="number"&&e.keepaliveCountMax>=0?e.keepaliveCountMax:3;this.config.keepaliveInterval=typeof e.keepaliveInterval==="number"&&e.keepaliveInterval>0?e.keepaliveInterval:0;this.config.readyTimeout=typeof e.readyTimeout==="number"&&e.readyTimeout>=0?e.readyTimeout:2e4;this.config.ident=typeof e.ident==="string"||Buffer.isBuffer(e.ident)?e.ident:undefined;const t={kex:undefined,serverHostKey:undefined,cs:{cipher:undefined,mac:undefined,compress:undefined,lang:[]},sc:undefined};let r=true;if(typeof e.algorithms==="object"&&e.algorithms!==null){t.kex=ie(e.algorithms.kex,w,k);if(t.kex!==w)r=false;t.serverHostKey=ie(e.algorithms.serverHostKey,b,B);if(t.serverHostKey!==b)r=false;t.cs.cipher=ie(e.algorithms.cipher,_,I);if(t.cs.cipher!==_)r=false;t.cs.mac=ie(e.algorithms.hmac,v,R);if(t.cs.mac!==v)r=false;t.cs.compress=ie(e.algorithms.compress,E,C);if(t.cs.compress!==E)r=false;if(!r)t.sc=t.cs}if(typeof e.username==="string")this.config.username=e.username;else if(typeof e.user==="string")this.config.username=e.user;else throw new Error("Invalid username");this.config.password=typeof e.password==="string"?e.password:undefined;this.config.privateKey=typeof e.privateKey==="string"||Buffer.isBuffer(e.privateKey)?e.privateKey:undefined;this.config.localHostname=typeof e.localHostname==="string"?e.localHostname:undefined;this.config.localUsername=typeof e.localUsername==="string"?e.localUsername:undefined;this.config.tryKeyboard=e.tryKeyboard===true;if(typeof e.agent==="string"&&e.agent.length)this.config.agent=j(e.agent);else if($(e.agent))this.config.agent=e.agent;else this.config.agent=undefined;this.config.allowAgentFwd=e.agentForward===true&&this.config.agent!==undefined;let s=this.config.authHandler=typeof e.authHandler==="function"||Array.isArray(e.authHandler)?e.authHandler:undefined;this.config.strictVendor=typeof e.strictVendor==="boolean"?e.strictVendor:true;const n=this.config.debug=typeof e.debug==="function"?e.debug:undefined;if(e.agentForward===true&&!this.config.allowAgentFwd){throw new Error("You must set a valid agent path to allow agent forwarding")}let l=this._callbacks=[];this._chanMgr=new re(this);this._forwarding={};this._forwardingUnix={};this._acceptX11=0;this._agentFwdEnabled=false;this._agent=this.config.agent?this.config.agent:undefined;this._remoteVer=undefined;let m;if(this.config.privateKey){m=D(this.config.privateKey,e.passphrase);if(m instanceof Error)throw new Error(`Cannot parse privateKey: ${m.message}`);if(Array.isArray(m)){m=m[0]}if(m.getPrivatePEM()===null){throw new Error("privateKey value does not contain a (valid) private key")}}let g;if(typeof e.hostVerifier==="function"){const t=e.hostVerifier;let r;if(u.indexOf(e.hostHash)!==-1){r=i(e.hostHash)}g=(e,i)=>{if(r){r.update(e);e=r.digest("hex")}const s=t(e,i);if(s!==undefined)i(s)}}const L=this._sock=e.sock||new o;let G=false;let Q=false;if(this._protocol)this._protocol.cleanup();const V=!n?undefined:(e,t,r)=>{n(`Debug output from server: ${JSON.stringify(r)}`)};const q=this._protocol=new O({ident:this.config.ident,offer:r?undefined:t,onWrite:e=>{if(ae(L))L.write(e)},onError:e=>{if(e.level==="handshake")clearTimeout(this._readyTimeout);if(!q._destruct)L.removeAllListeners("data");this.emit("error",e);try{L.end()}catch{}},onHeader:e=>{Q=true;this._remoteVer=e.versions.software;if(e.greeting)this.emit("greeting",e.greeting)},onHandshakeComplete:e=>{this.emit("handshake",e);if(!G){G=true;q.service("ssh-userauth")}},debug:n,hostVerifier:g,messageHandlers:{DEBUG:V,DISCONNECT:(e,t,r)=>{if(t!==y.BY_APPLICATION){if(!r){r=T[t];if(r===undefined)r=`Unexpected disconnection reason: ${t}`}const e=new Error(r);e.code=t;this.emit("error",e)}L.end()},SERVICE_ACCEPT:(e,t)=>{if(t==="ssh-userauth")tryNextAuth()},USERAUTH_BANNER:(e,t)=>{this.emit("banner",t)},USERAUTH_SUCCESS:e=>{resetKA();clearTimeout(this._readyTimeout);this.emit("ready")},USERAUTH_FAILURE:(e,t,r)=>{if(fe.type==="agent"){const e=fe.agentCtx.pos();n&&n(`Client: Agent key #${e+1} failed`);return tryNextAgentKey()}n&&n(`Client: ${fe.type} auth failed`);he=r;ge=t;tryNextAuth()},USERAUTH_PASSWD_CHANGEREQ:(e,t)=>{if(fe.type==="password"){this.emit("change password",t,(e=>{q.authPassword(this.config.username,this.config.password,e)}))}},USERAUTH_PK_OK:e=>{if(fe.type==="agent"){const e=fe.agentCtx.currentKey();q.authPK(fe.username,e,((t,r)=>{fe.agentCtx.sign(e,t,{},((e,t)=>{if(e){e.level="agent";this.emit("error",e)}else{return r(t)}tryNextAgentKey()}))}))}else if(fe.type==="publickey"){q.authPK(fe.username,fe.key,((e,t)=>{const r=fe.key.sign(e);if(r instanceof Error){r.message=`Error signing data with key: ${r.message}`;r.level="client-authentication";this.emit("error",r);return tryNextAuth()}t(r)}))}},USERAUTH_INFO_REQUEST:(e,t,r,i)=>{if(fe.type==="keyboard-interactive"){const e=Array.isArray(i)?i.length:0;if(e===0){n&&n("Client: Sending automatic USERAUTH_INFO_RESPONSE");q.authInfoRes();return}fe.prompt(t,r,"",i,(e=>{q.authInfoRes(e)}))}},REQUEST_SUCCESS:(e,t)=>{if(l.length)l.shift()(false,t)},REQUEST_FAILURE:e=>{if(l.length)l.shift()(true)},GLOBAL_REQUEST:(e,t,r,i)=>{switch(t){case"hostkeys-00@openssh.com":hostKeysProve(this,i,((e,t)=>{if(e)return;this.emit("hostkeys",t)}));if(r)q.requestSuccess();break;default:if(r)q.requestFailure()}},CHANNEL_OPEN:(e,t)=>{onCHANNEL_OPEN(this,t)},CHANNEL_OPEN_CONFIRMATION:(e,t)=>{const r=this._chanMgr.get(t.recipient);if(typeof r!=="function")return;const i=r.type==="sftp";const s=i?"session":r.type;const o={type:s,incoming:{id:t.recipient,window:z,packetSize:J,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}};const p=i?new U(this,o,{debug:n}):new Y(this,o);this._chanMgr.update(t.recipient,p);r(undefined,p)},CHANNEL_OPEN_FAILURE:(e,t,r,i)=>{const s=this._chanMgr.get(t);if(typeof s!=="function")return;const n={reason:r,description:i};se(this,t,n,s)},CHANNEL_DATA:(e,t,r)=>{const i=this._chanMgr.get(t);if(typeof i!=="object"||i===null)return;if(i.incoming.window===0)return;i.incoming.window-=r.length;if(i.push(r)===false){i._waitChanDrain=true;return}if(i.incoming.window<=te)ee(i)},CHANNEL_EXTENDED_DATA:(e,t,r,i)=>{if(i!==h)return;const s=this._chanMgr.get(t);if(typeof s!=="object"||s===null)return;if(s.incoming.window===0)return;s.incoming.window-=r.length;if(!s.stderr.push(r)){s._waitChanDrain=true;return}if(s.incoming.window<=te)ee(s)},CHANNEL_WINDOW_ADJUST:(e,t,r)=>{const i=this._chanMgr.get(t);if(typeof i!=="object"||i===null)return;i.outgoing.window+=r;if(i._waitWindow){i._waitWindow=false;if(i._chunk){i._write(i._chunk,null,i._chunkcb)}else if(i._chunkcb){i._chunkcb()}else if(i._chunkErr){i.stderr._write(i._chunkErr,null,i._chunkcbErr)}else if(i._chunkcbErr){i._chunkcbErr()}}},CHANNEL_SUCCESS:(e,t)=>{const r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;this._resetKA();if(r._callbacks.length)r._callbacks.shift()(false)},CHANNEL_FAILURE:(e,t)=>{const r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;this._resetKA();if(r._callbacks.length)r._callbacks.shift()(true)},CHANNEL_REQUEST:(e,t,r,i,s)=>{const n=this._chanMgr.get(t);if(typeof n!=="object"||n===null)return;const o=n._exit;if(o.code!==undefined)return;switch(r){case"exit-status":n.emit("exit",o.code=s);return;case"exit-signal":n.emit("exit",o.code=null,o.signal=`SIG${s.signal}`,o.dump=s.coreDumped,o.desc=s.errorMessage);return}if(i)e.channelFailure(n.outgoing.id)},CHANNEL_EOF:(e,t)=>{const r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;if(r.incoming.state!=="open")return;r.incoming.state="eof";if(r.readable)r.push(null);if(r.stderr.readable)r.stderr.push(null)},CHANNEL_CLOSE:(e,t)=>{ne(this,t,this._chanMgr.get(t))}}});L.pause();const oe=this.config.keepaliveInterval;const pe=this.config.keepaliveCountMax;let de=0;let le;const sendKA=()=>{if(++de>pe){clearInterval(le);if(L.readable){const e=new Error("Keepalive timeout");e.level="client-timeout";this.emit("error",e);L.destroy()}return}if(ae(L)){l.push(resetKA);q.ping()}else{clearInterval(le)}};function resetKA(){if(oe>0){de=0;clearInterval(le);if(ae(L))le=setInterval(sendKA,oe)}}this._resetKA=resetKA;const ce=(()=>{let e=false;return()=>{if(e)return;e=true;if(me&&!Q){const e=x("Connection lost before handshake","protocol",true);this.emit("error",e)}}})();const ue=(()=>{let e=false;return()=>{if(e)return;e=true;me=true;n&&n("Socket connected");this.emit("connect");P.then((()=>{q.start();L.on("data",(e=>{try{q.parse(e,0,e.length)}catch(e){this.emit("error",e);try{if(ae(L))L.end()}catch{}}}));if(L.stderr&&typeof L.stderr.resume==="function")L.stderr.resume();L.resume()})).catch((e=>{this.emit("error",e);try{if(ae(L))L.end()}catch{}}))}})();let me=false;L.on("connect",ue).on("timeout",(()=>{this.emit("timeout")})).on("error",(e=>{n&&n(`Socket error: ${e.message}`);clearTimeout(this._readyTimeout);e.level="client-socket";this.emit("error",e)})).on("end",(()=>{n&&n("Socket ended");ce();q.cleanup();clearTimeout(this._readyTimeout);clearInterval(le);this.emit("end")})).on("close",(()=>{n&&n("Socket closed");ce();q.cleanup();clearTimeout(this._readyTimeout);clearInterval(le);this.emit("close");const e=l;l=this._callbacks=[];const t=new Error("No response from server");for(let r=0;r<e.length;++r)e[r](t);this._chanMgr.cleanup(t)}));let fe;let he=null;let ge=null;const _e=["none"];if(this.config.password!==undefined)_e.push("password");if(m!==undefined)_e.push("publickey");if(this._agent!==undefined)_e.push("agent");if(this.config.tryKeyboard)_e.push("keyboard-interactive");if(m!==undefined&&this.config.localHostname!==undefined&&this.config.localUsername!==undefined){_e.push("hostbased")}if(Array.isArray(s))s=makeSimpleAuthHandler(s);else if(typeof s!=="function")s=makeSimpleAuthHandler(_e);let Ae=false;const doNextAuth=e=>{if(Ae)return;Ae=true;if(e===false){const e=new Error("All configured authentication methods failed");e.level="client-authentication";this.emit("error",e);this.end();return}if(typeof e==="string"){const t=e;if(_e.indexOf(t)===-1)return skipAuth(`Authentication method not allowed: ${t}`);const r=this.config.username;switch(t){case"password":e={type:t,username:r,password:this.config.password};break;case"publickey":e={type:t,username:r,key:m};break;case"hostbased":e={type:t,username:r,key:m,localHostname:this.config.localHostname,localUsername:this.config.localUsername};break;case"agent":e={type:t,username:r,agentCtx:new W(this._agent)};break;case"keyboard-interactive":e={type:t,username:r,prompt:(...e)=>this.emit("keyboard-interactive",...e)};break;case"none":e={type:t,username:r};break;default:return skipAuth(`Skipping unsupported authentication method: ${e}`)}}else if(typeof e!=="object"||e===null){return skipAuth(`Skipping invalid authentication attempt: ${e}`)}else{const t=e.username;if(typeof t!=="string"){return skipAuth(`Skipping invalid authentication attempt: ${e}`)}const r=e.type;switch(r){case"password":{const{password:i}=e;if(typeof i!=="string"&&!Buffer.isBuffer(i))return skipAuth("Skipping invalid password auth attempt");e={type:r,username:t,password:i};break}case"publickey":{const i=D(e.key,e.passphrase);if(i instanceof Error)return skipAuth("Skipping invalid key auth attempt");if(!i.isPrivateKey())return skipAuth("Skipping non-private key");e={type:r,username:t,key:i};break}case"hostbased":{const{localHostname:i,localUsername:s}=e;const n=D(e.key,e.passphrase);if(n instanceof Error||typeof i!=="string"||typeof s!=="string"){return skipAuth("Skipping invalid hostbased auth attempt")}if(!n.isPrivateKey())return skipAuth("Skipping non-private key");e={type:r,username:t,key:n,localHostname:i,localUsername:s};break}case"agent":{let i=e.agent;if(typeof i==="string"&&i.length){i=j(i)}else if(!$(i)){return skipAuth(`Skipping invalid agent: ${e.agent}`)}e={type:r,username:t,agentCtx:new W(i)};break}case"keyboard-interactive":{const{prompt:i}=e;if(typeof i!=="function"){return skipAuth("Skipping invalid keyboard-interactive auth attempt")}e={type:r,username:t,prompt:i};break}case"none":e={type:r,username:t};break;default:return skipAuth(`Skipping unsupported authentication method: ${e}`)}}fe=e;try{const e=fe.username;switch(fe.type){case"password":q.authPassword(e,fe.password);break;case"publickey":q.authPK(e,fe.key);break;case"hostbased":q.authHostbased(e,fe.key,fe.localHostname,fe.localUsername,((e,t)=>{const r=fe.key.sign(e);if(r instanceof Error){r.message=`Error while signing with key: ${r.message}`;r.level="client-authentication";this.emit("error",r);return tryNextAuth()}t(r)}));break;case"agent":fe.agentCtx.init((e=>{if(e){e.level="agent";this.emit("error",e);return tryNextAuth()}tryNextAgentKey()}));break;case"keyboard-interactive":q.authKeyboard(e);break;case"none":q.authNone(e);break}}finally{Ae=false}};function skipAuth(e){n&&n(e);process.nextTick(tryNextAuth)}function tryNextAuth(){Ae=false;const e=s(ge,he,doNextAuth);if(Ae||e===undefined)return;doNextAuth(e)}const tryNextAgentKey=()=>{if(fe.type==="agent"){const e=fe.agentCtx.nextKey();if(e===false){n&&n("Agent: No more keys left to try");n&&n("Client: agent auth failed");tryNextAuth()}else{const t=fe.agentCtx.pos();n&&n(`Agent: Trying key #${t+1}`);q.authPK(fe.username,e)}}};const startTimeout=()=>{if(this.config.readyTimeout>0){this._readyTimeout=setTimeout((()=>{const e=new Error("Timed out while waiting for handshake");e.level="client-timeout";this.emit("error",e);L.destroy()}),this.config.readyTimeout)}};if(!e.sock){let t=this.config.host;const r=this.config.forceIPv4;const i=this.config.forceIPv6;n&&n(`Client: Trying ${t} on port ${this.config.port} ...`);const doConnect=()=>{startTimeout();L.connect({host:t,port:this.config.port,localAddress:this.config.localAddress,localPort:this.config.localPort});L.setNoDelay(true);L.setMaxListeners(0);L.setTimeout(typeof e.timeout==="number"?e.timeout:0)};if(!r&&!i||r&&i){doConnect()}else{p(t,r?4:6,((e,i,s)=>{if(e){const i=r?"IPv4":"IPv6";const s=new Error(`Error while looking up ${i} address for '${t}': ${e}`);clearTimeout(this._readyTimeout);s.level="client-dns";this.emit("error",s);this.emit("close");return}t=i;doConnect()}))}}else{startTimeout();if(typeof L.connecting==="boolean"){if(!L.connecting){ue()}}else{ue()}}return this}end(){if(this._sock&&ae(this._sock)){this._protocol.disconnect(y.BY_APPLICATION);this._sock.end()}return this}destroy(){this._sock&&ae(this._sock)&&this._sock.destroy();return this}exec(e,t,r){if(!this._sock||!ae(this._sock))throw new Error("Not connected");if(typeof t==="function"){r=t;t={}}const i={allowHalfOpen:t.allowHalfOpen!==false};openChannel(this,"session",i,((i,s)=>{if(i){r(i);return}const n=[];function reqCb(e){if(e){s.close();r(e);return}if(n.length)n.shift()()}if(this.config.allowAgentFwd===true||t&&t.agentForward===true&&this._agent!==undefined){n.push((()=>reqAgentFwd(s,reqCb)))}if(typeof t==="object"&&t!==null){if(typeof t.env==="object"&&t.env!==null)reqEnv(s,t.env);if(typeof t.pty==="object"&&t.pty!==null||t.pty===true){n.push((()=>reqPty(s,t.pty,reqCb)))}if(typeof t.x11==="object"&&t.x11!==null||t.x11==="number"||t.x11===true){n.push((()=>reqX11(s,t.x11,reqCb)))}}n.push((()=>reqExec(s,e,t,r)));n.shift()()}));return this}shell(e,t,r){if(!this._sock||!ae(this._sock))throw new Error("Not connected");if(typeof e==="function"){r=e;e=t=undefined}else if(typeof t==="function"){r=t;t=undefined}if(e&&(e.x11!==undefined||e.env!==undefined)){t=e;e=undefined}openChannel(this,"session",((i,s)=>{if(i){r(i);return}const n=[];function reqCb(e){if(e){s.close();r(e);return}if(n.length)n.shift()()}if(this.config.allowAgentFwd===true||t&&t.agentForward===true&&this._agent!==undefined){n.push((()=>reqAgentFwd(s,reqCb)))}if(e!==false)n.push((()=>reqPty(s,e,reqCb)));if(typeof t==="object"&&t!==null){if(typeof t.env==="object"&&t.env!==null)reqEnv(s,t.env);if(typeof t.x11==="object"&&t.x11!==null||t.x11==="number"||t.x11===true){n.push((()=>reqX11(s,t.x11,reqCb)))}}n.push((()=>reqShell(s,r)));n.shift()()}));return this}subsys(e,t){if(!this._sock||!ae(this._sock))throw new Error("Not connected");openChannel(this,"session",((r,i)=>{if(r){t(r);return}reqSubsystem(i,e,((e,r)=>{if(e){t(e);return}t(undefined,r)}))}));return this}forwardIn(e,t,r){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const i=typeof r==="function";if(i){this._callbacks.push(((i,s)=>{if(i){r(i!==true?i:new Error(`Unable to bind to ${e}:${t}`));return}let n=t;if(t===0&&s&&s.length>=4){n=Q(s,0);if(!(this._protocol._compatFlags&m.DYN_RPORT_BUG))t=n}this._forwarding[`${e}:${t}`]=n;r(undefined,n)}))}this._protocol.tcpipForward(e,t,i);return this}unforwardIn(e,t,r){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const i=typeof r==="function";if(i){this._callbacks.push((i=>{if(i){r(i!==true?i:new Error(`Unable to unbind from ${e}:${t}`));return}delete this._forwarding[`${e}:${t}`];r()}))}this._protocol.cancelTcpipForward(e,t,i);return this}forwardOut(e,t,r,i,s){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const n={srcIP:e,srcPort:t,dstIP:r,dstPort:i};if(typeof s!=="function")s=noop;openChannel(this,"direct-tcpip",n,s);return this}openssh_noMoreSessions(e){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const t=typeof e==="function";if(!this.config.strictVendor||this.config.strictVendor&&de.test(this._remoteVer)){if(t){this._callbacks.push((t=>{if(t){e(t!==true?t:new Error("Unable to disable future sessions"));return}e()}))}this._protocol.openssh_noMoreSessions(t);return this}if(!t)return this;process.nextTick(e,new Error("strictVendor enabled and server is not OpenSSH or compatible version"));return this}openssh_forwardInStreamLocal(e,t){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const r=typeof t==="function";if(!this.config.strictVendor||this.config.strictVendor&&de.test(this._remoteVer)){if(r){this._callbacks.push((r=>{if(r){t(r!==true?r:new Error(`Unable to bind to ${e}`));return}this._forwardingUnix[e]=true;t()}))}this._protocol.openssh_streamLocalForward(e,r);return this}if(!r)return this;process.nextTick(t,new Error("strictVendor enabled and server is not OpenSSH or compatible version"));return this}openssh_unforwardInStreamLocal(e,t){if(!this._sock||!ae(this._sock))throw new Error("Not connected");const r=typeof t==="function";if(!this.config.strictVendor||this.config.strictVendor&&de.test(this._remoteVer)){if(r){this._callbacks.push((r=>{if(r){t(r!==true?r:new Error(`Unable to unbind from ${e}`));return}delete this._forwardingUnix[e];t()}))}this._protocol.openssh_cancelStreamLocalForward(e,r);return this}if(!r)return this;process.nextTick(t,new Error("strictVendor enabled and server is not OpenSSH or compatible version"));return this}openssh_forwardOutStreamLocal(e,t){if(!this._sock||!ae(this._sock))throw new Error("Not connected");if(typeof t!=="function")t=noop;if(!this.config.strictVendor||this.config.strictVendor&&de.test(this._remoteVer)){openChannel(this,"direct-streamlocal@openssh.com",{socketPath:e},t);return this}process.nextTick(t,new Error("strictVendor enabled and server is not OpenSSH or compatible version"));return this}sftp(e){if(!this._sock||!ae(this._sock))throw new Error("Not connected");openChannel(this,"sftp",((t,r)=>{if(t){e(t);return}reqSubsystem(r,"sftp",((t,i)=>{if(t){e(t);return}function removeListeners(){r.removeListener("ready",onReady);r.removeListener("error",onError);r.removeListener("exit",onExit);r.removeListener("close",onExit)}function onReady(){removeListeners();e(undefined,r)}function onError(t){removeListeners();e(t)}function onExit(t,r){removeListeners();let i;if(typeof t==="number")i=`Received exit code ${t} while establishing SFTP session`;else if(r!==undefined)i=`Received signal ${r} while establishing SFTP session`;else i="Received unexpected SFTP session termination";const s=new Error(i);s.code=t;s.signal=r;e(s)}r.on("ready",onReady).on("error",onError).on("exit",onExit).on("close",onExit);r._init()}))}));return this}}function openChannel(e,t,r,i){const s=z;const n=J;if(typeof r==="function"){i=r;r={}}const wrapper=(e,t)=>{i(e,t)};wrapper.type=t;const o=e._chanMgr.add(wrapper);if(o===-1){i(new Error("No free channels available"));return}switch(t){case"session":case"sftp":e._protocol.session(o,s,n);break;case"direct-tcpip":e._protocol.directTcpip(o,s,n,r);break;case"direct-streamlocal@openssh.com":e._protocol.openssh_directStreamLocal(o,s,n,r);break;default:throw new Error(`Unsupported channel type: ${t}`)}}function reqX11(e,t,r){const i={single:false,protocol:"MIT-MAGIC-COOKIE-1",cookie:undefined,screen:0};if(typeof t==="function"){r=t}else if(typeof t==="object"&&t!==null){if(typeof t.single==="boolean")i.single=t.single;if(typeof t.screen==="number")i.screen=t.screen;if(typeof t.protocol==="string")i.protocol=t.protocol;if(typeof t.cookie==="string")i.cookie=t.cookie;else if(Buffer.isBuffer(t.cookie))i.cookie=t.cookie.hexSlice(0,t.cookie.length)}if(i.cookie===undefined)i.cookie=le();const s=typeof r==="function";if(e.outgoing.state!=="open"){if(s)r(new Error("Channel is not open"));return}if(s){e._callbacks.push((t=>{if(t){r(t!==true?t:new Error("Unable to request X11"));return}e._hasX11=true;++e._client._acceptX11;e.once("close",(()=>{if(e._client._acceptX11)--e._client._acceptX11}));r()}))}e._client._protocol.x11Forward(e.outgoing.id,i,s)}function reqPty(e,t,r){let i=24;let s=80;let n=640;let o=480;let p="vt100";let l=null;if(typeof t==="function"){r=t}else if(typeof t==="object"&&t!==null){if(typeof t.rows==="number")i=t.rows;if(typeof t.cols==="number")s=t.cols;if(typeof t.width==="number")n=t.width;if(typeof t.height==="number")o=t.height;if(typeof t.term==="string")p=t.term;if(typeof t.modes==="object")l=t.modes}const u=typeof r==="function";if(e.outgoing.state!=="open"){if(u)r(new Error("Channel is not open"));return}if(u){e._callbacks.push((e=>{if(e){r(e!==true?e:new Error("Unable to request a pseudo-terminal"));return}r()}))}e._client._protocol.pty(e.outgoing.id,i,s,o,n,p,l,u)}function reqAgentFwd(e,t){const r=typeof t==="function";if(e.outgoing.state!=="open"){r&&t(new Error("Channel is not open"));return}if(e._client._agentFwdEnabled){r&&t(false);return}e._client._agentFwdEnabled=true;e._callbacks.push((i=>{if(i){e._client._agentFwdEnabled=false;if(r){t(i!==true?i:new Error("Unable to request agent forwarding"))}return}if(r)t()}));e._client._protocol.openssh_agentForward(e.outgoing.id,true)}function reqShell(e,t){if(e.outgoing.state!=="open"){t(new Error("Channel is not open"));return}e._callbacks.push((r=>{if(r){t(r!==true?r:new Error("Unable to open shell"));return}e.subtype="shell";t(undefined,e)}));e._client._protocol.shell(e.outgoing.id,true)}function reqExec(e,t,r,i){if(e.outgoing.state!=="open"){i(new Error("Channel is not open"));return}e._callbacks.push((t=>{if(t){i(t!==true?t:new Error("Unable to exec"));return}e.subtype="exec";e.allowHalfOpen=r.allowHalfOpen!==false;i(undefined,e)}));e._client._protocol.exec(e.outgoing.id,t,true)}function reqEnv(e,t){if(e.outgoing.state!=="open")return;const r=Object.keys(t||{});for(let i=0;i<r.length;++i){const s=r[i];const n=t[s];e._client._protocol.env(e.outgoing.id,s,n,false)}}function reqSubsystem(e,t,r){if(e.outgoing.state!=="open"){r(new Error("Channel is not open"));return}e._callbacks.push((i=>{if(i){r(i!==true?i:new Error(`Unable to start subsystem: ${t}`));return}e.subtype="subsystem";r(undefined,e)}));e._client._protocol.subsystem(e.outgoing.id,t,true)}function onCHANNEL_OPEN(e,t){let r=-1;let i;const accept=()=>{const i={type:t.type,incoming:{id:r,window:z,packetSize:J,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}};const s=new Y(e,i);e._chanMgr.update(r,s);e._protocol.channelOpenConfirm(t.sender,r,z,J);return s};const reject=()=>{if(i===undefined){if(r===-1)i=g.RESOURCE_SHORTAGE;else i=g.CONNECT_FAILED}if(r!==-1)e._chanMgr.remove(r);e._protocol.channelOpenFail(t.sender,i,"")};const reserveChannel=()=>{r=e._chanMgr.add();if(r===-1){i=g.RESOURCE_SHORTAGE;if(e.config.debug){e.config.debug("Client: Automatic rejection of incoming channel open: "+"no channels available")}}return r!==-1};const s=t.data;switch(t.type){case"forwarded-tcpip":{const t=e._forwarding[`${s.destIP}:${s.destPort}`];if(t!==undefined&&reserveChannel()){if(s.destPort===0)s.destPort=t;e.emit("tcp connection",s,accept,reject);return}break}case"forwarded-streamlocal@openssh.com":if(e._forwardingUnix[s.socketPath]!==undefined&&reserveChannel()){e.emit("unix connection",s,accept,reject);return}break;case"auth-agent@openssh.com":if(e._agentFwdEnabled&&typeof e._agent.getStream==="function"&&reserveChannel()){e._agent.getStream(((e,t)=>{if(e)return reject();const r=accept();r.pipe(t).pipe(r)}));return}break;case"x11":if(e._acceptX11!==0&&reserveChannel()){e.emit("x11",s,accept,reject);return}break;default:i=g.UNKNOWN_CHANNEL_TYPE;if(e.config.debug){e.config.debug("Client: Automatic rejection of unsupported incoming channel open "+`type: ${t.type}`)}}if(i===undefined){i=g.ADMINISTRATIVELY_PROHIBITED;if(e.config.debug){e.config.debug("Client: Automatic rejection of unexpected incoming channel open for: "+t.type)}}reject()}const le=(()=>{const e=Buffer.allocUnsafe(16);return()=>{n(e,0,16);return e.hexSlice(0,16)}})();function makeSimpleAuthHandler(e){if(!Array.isArray(e))throw new Error("authList must be an array");let t=0;return(r,i,s)=>{if(t===e.length)return false;return e[t++]}}function hostKeysProve(e,t,r){if(!e._sock||!ae(e._sock))return;if(typeof r!=="function")r=noop;if(!Array.isArray(t))throw new TypeError("Invalid keys argument type");const i=[];for(const e of t){const t=D(e);if(t instanceof Error)throw t;i.push(t)}if(!e.config.strictVendor||e.config.strictVendor&&de.test(e._remoteVer)){e._callbacks.push(((t,s)=>{if(t){r(t!==true?t:new Error("Server failed to prove supplied keys"));return}const n=[];let o=0;oe.init(s,0);while(oe.avail()){if(o===i.length)break;const t=i[o++];const r=t.getPublicSSH();const s=oe.readString();pe.init(s,0);const p=pe.readString(true);let l=pe.readString();let u;if(p!==t.type){if(t.type==="ssh-rsa"){switch(p){case"rsa-sha2-256":u="sha256";break;case"rsa-sha2-512":u="sha512";break;default:continue}}else{continue}}const m=e._protocol._kex.sessionID;const h=Buffer.allocUnsafe(4+29+4+m.length+4+r.length);let g=0;q(h,29,g);h.utf8Write("hostkeys-prove-00@openssh.com",g+=4,29);q(h,m.length,g+=29);L(m,h,0,m.length,g+=4);q(h,r.length,g+=m.length);L(r,h,0,r.length,g+=4);if(!(l=V(l,p)))continue;if(t.verify(h,l,u)===true)n.push(t)}pe.clear();oe.clear();r(null,n)}));e._protocol.openssh_hostKeysProve(i);return}process.nextTick(r,new Error("strictVendor enabled and server is not OpenSSH or compatible version"))}e.exports=Client},2994:(e,t,r)=>{"use strict";const{Agent:i}=r(3685);const{Agent:s}=r(5687);const{connect:n}=r(4404);let o;for(const e of[i,s]){class SSHAgent extends e{constructor(e,t){super(t);this._connectCfg=e;this._defaultSrcIP=t&&t.srcIP||"localhost"}createConnection(t,i){const s=t&&t.localAddress||this._defaultSrcIP;const n=t&&t.localPort||0;const p=t.host;const l=t.port;if(o===undefined)o=r(6063);const u=new o;let m=false;u.on("ready",(()=>{u.forwardOut(s,n,p,l,((r,s)=>{m=true;if(r){u.end();return i(r)}s.once("close",(()=>u.end()));i(null,decorateStream(s,e,t))}))})).on("error",i).on("close",(()=>{if(!m)i(new Error("Unexpected connection close"))})).connect(this._connectCfg)}}t[e===i?"SSHTTPAgent":"SSHTTPSAgent"]=SSHAgent}function noop(){}function decorateStream(e,t,r){if(t===i){e.setKeepAlive=noop;e.setNoDelay=noop;e.setTimeout=noop;e.ref=noop;e.unref=noop;e.destroySoon=e.destroy;return e}r.socket=e;const s=n(r);const o=(()=>{let t=false;return()=>{if(t)return;t=true;if(e.isPaused())e.resume()}})();s.on("end",o).on("close",o);return s}},5869:(e,t,r)=>{"use strict";const{AgentProtocol:i,BaseAgent:s,createAgent:n,CygwinAgent:o,OpenSSHAgent:p,PageantAgent:l}=r(9054);const{SSHTTPAgent:u,SSHTTPSAgent:m}=r(2994);const{parseKey:h}=r(2218);const{flagsToString:g,OPEN_MODE:_,STATUS_CODE:E,stringToFlags:w}=r(2026);e.exports={AgentProtocol:i,BaseAgent:s,createAgent:n,Client:r(6063),CygwinAgent:o,HTTPAgent:u,HTTPSAgent:m,OpenSSHAgent:p,PageantAgent:l,Server:r(2986),utils:{parseKey:h,sftp:{flagsToString:g,OPEN_MODE:_,STATUS_CODE:E,stringToFlags:w}}}},9031:(e,t,r)=>{"use strict";const{inspect:i}=r(3837);const{bindingAvailable:s,NullCipher:n,NullDecipher:o}=r(5708);const{COMPAT_CHECKS:p,DISCONNECT_REASON:l,MESSAGE:u,SIGNALS:m,TERMINAL_MODE:h}=r(6832);const{DEFAULT_KEXINIT:g,KexInit:_,kexinit:E,onKEXPayload:w}=r(4126);const{parseKey:v}=r(2218);const b=r(172);const{bufferCopy:y,bufferFill:T,bufferSlice:I,convertSignature:C,sendPacket:k,writeUInt32BE:R}=r(9475);const{PacketReader:B,PacketWriter:P,ZlibPacketReader:O,ZlibPacketWriter:D}=r(6715);const U=r(6674).i8;const L=new Map(Object.values(l).map((e=>[e,1])));const G=Buffer.from(`SSH-2.0-ssh2js${U}`);const x=Buffer.from(`${G}\r\n`);const Q=8192;const V=1024;const q=Buffer.from([u.GLOBAL_REQUEST,0,0,0,21,107,101,101,112,97,108,105,118,101,64,111,112,101,110,115,115,104,46,99,111,109,1]);const W=Buffer.from([h.TTY_OP_END]);function noop(){}class Protocol{constructor(e){const t=e.onWrite;if(typeof t!=="function")throw new Error("Missing onWrite function");this._onWrite=e=>{t(e)};const r=e.onError;if(typeof r!=="function")throw new Error("Missing onError function");this._onError=e=>{r(e)};const o=e.debug;this._debug=typeof o==="function"?e=>{o(e)}:undefined;const p=e.onHeader;this._onHeader=typeof p==="function"?(...e)=>{p(...e)}:noop;const l=e.onPacket;this._onPacket=typeof l==="function"?()=>{l()}:noop;let u=e.onHandshakeComplete;if(typeof u!=="function")u=noop;this._onHandshakeComplete=(...e)=>{this._debug&&this._debug("Handshake completed");const t=this._queue;if(t){this._queue=undefined;this._debug&&this._debug(`Draining outbound queue (${t.length}) ...`);for(let e=0;e<t.length;++e){const r=t[e];let i=this._packetRW.write.finalize(r);if(i===r){const e=this._cipher.allocPacket(r.length);e.set(r,5);i=e}k(this,i)}this._debug&&this._debug("... finished draining outbound queue")}u(...e)};this._queue=undefined;const m=e.messageHandlers;if(typeof m==="object"&&m!==null)this._handlers=m;else this._handlers={};this._onPayload=onPayload.bind(this);this._server=!!e.server;this._banner=undefined;let h;if(this._server){if(typeof e.hostKeys!=="object"||e.hostKeys===null)throw new Error("Missing server host key(s)");this._hostKeys=e.hostKeys;if(typeof e.greeting==="string"&&e.greeting.length){h=e.greeting.slice(-2)==="\r\n"?e.greeting:`${e.greeting}\r\n`}if(typeof e.banner==="string"&&e.banner.length){this._banner=e.banner.slice(-2)==="\r\n"?e.banner:`${e.banner}\r\n`}}else{this._hostKeys=undefined}let E=e.offer;if(typeof E!=="object"||E===null)E=g;else if(E.constructor!==_)E=new _(E);this._kex=undefined;this._kexinit=undefined;this._offer=E;this._cipher=new n(0,this._onWrite);this._decipher=undefined;this._skipNextInboundPacket=false;this._packetRW={read:new B,write:new P(this)};this._hostVerifier=!this._server&&typeof e.hostVerifier==="function"?e.hostVerifier:undefined;this._parse=parseHeader;this._buffer=undefined;this._authsQueue=[];this._authenticated=false;this._remoteIdentRaw=undefined;let w;if(typeof e.ident==="string"){this._identRaw=Buffer.from(`SSH-2.0-${e.ident}`);w=Buffer.allocUnsafe(this._identRaw.length+2);w.set(this._identRaw,0);w[w.length-2]=13;w[w.length-1]=10}else if(Buffer.isBuffer(e.ident)){const t=Buffer.allocUnsafe(8+e.ident.length);t.latin1Write("SSH-2.0-",0,8);t.set(e.ident,8);this._identRaw=t;w=Buffer.allocUnsafe(t.length+2);w.set(t,0);w[w.length-2]=13;w[w.length-1]=10}else{this._identRaw=G;w=x}this._compatFlags=0;if(this._debug){if(s)this._debug("Custom crypto binding available");else this._debug("Custom crypto binding not available")}this._debug&&this._debug(`Local ident: ${i(this._identRaw.toString())}`);this.start=()=>{this.start=undefined;if(h)this._onWrite(h);this._onWrite(w)}}_destruct(e){this._packetRW.read.cleanup();this._packetRW.write.cleanup();this._cipher&&this._cipher.free();this._decipher&&this._decipher.free();if(typeof e!=="string"||e.length===0)e="fatal error";this.parse=()=>{throw new Error(`Instance unusable after ${e}`)};this._onWrite=()=>{throw new Error(`Instance unusable after ${e}`)};this._destruct=undefined}cleanup(){this._destruct&&this._destruct()}parse(e,t,r){while(t<r)t=this._parse(e,t,r)}disconnect(e){const t=1+4+4+4;let r=this._packetRW.write.allocStartKEX;const i=this._packetRW.write.alloc(t,true);const s=r+t;if(!L.has(e))e=l.PROTOCOL_ERROR;i[r]=u.DISCONNECT;R(i,e,++r);i.fill(0,r+=4,s);this._debug&&this._debug(`Outbound: Sending DISCONNECT (${e})`);k(this,this._packetRW.write.finalize(i,true),true)}ping(){const e=this._packetRW.write.allocStart;const t=this._packetRW.write.alloc(q.length);t.set(q,e);this._debug&&this._debug("Outbound: Sending ping (GLOBAL_REQUEST: keepalive@openssh.com)");k(this,this._packetRW.write.finalize(t))}rekey(){if(this._kexinit===undefined){this._debug&&this._debug("Outbound: Initiated explicit rekey");this._queue=[];E(this)}else{this._debug&&this._debug("Outbound: Ignoring rekey during handshake")}}requestSuccess(e){let t=this._packetRW.write.allocStart;let r;if(Buffer.isBuffer(e)){r=this._packetRW.write.alloc(1+e.length);r[t]=u.REQUEST_SUCCESS;r.set(e,++t)}else{r=this._packetRW.write.alloc(1);r[t]=u.REQUEST_SUCCESS}this._debug&&this._debug("Outbound: Sending REQUEST_SUCCESS");k(this,this._packetRW.write.finalize(r))}requestFailure(){const e=this._packetRW.write.allocStart;const t=this._packetRW.write.alloc(1);t[e]=u.REQUEST_FAILURE;this._debug&&this._debug("Outbound: Sending REQUEST_FAILURE");k(this,this._packetRW.write.finalize(t))}channelSuccess(e){let t=this._packetRW.write.allocStart;const r=this._packetRW.write.alloc(1+4);r[t]=u.CHANNEL_SUCCESS;R(r,e,++t);this._debug&&this._debug(`Outbound: Sending CHANNEL_SUCCESS (r:${e})`);k(this,this._packetRW.write.finalize(r))}channelFailure(e){let t=this._packetRW.write.allocStart;const r=this._packetRW.write.alloc(1+4);r[t]=u.CHANNEL_FAILURE;R(r,e,++t);this._debug&&this._debug(`Outbound: Sending CHANNEL_FAILURE (r:${e})`);k(this,this._packetRW.write.finalize(r))}channelEOF(e){let t=this._packetRW.write.allocStart;const r=this._packetRW.write.alloc(1+4);r[t]=u.CHANNEL_EOF;R(r,e,++t);this._debug&&this._debug(`Outbound: Sending CHANNEL_EOF (r:${e})`);k(this,this._packetRW.write.finalize(r))}channelClose(e){let t=this._packetRW.write.allocStart;const r=this._packetRW.write.alloc(1+4);r[t]=u.CHANNEL_CLOSE;R(r,e,++t);this._debug&&this._debug(`Outbound: Sending CHANNEL_CLOSE (r:${e})`);k(this,this._packetRW.write.finalize(r))}channelWindowAdjust(e,t){let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+4);i[r]=u.CHANNEL_WINDOW_ADJUST;R(i,e,++r);R(i,t,r+=4);this._debug&&this._debug(`Outbound: Sending CHANNEL_WINDOW_ADJUST (r:${e}, ${t})`);k(this,this._packetRW.write.finalize(i))}channelData(e,t){const r=Buffer.isBuffer(t);const i=r?t.length:Buffer.byteLength(t);let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+4+i);n[s]=u.CHANNEL_DATA;R(n,e,++s);R(n,i,s+=4);if(r)n.set(t,s+=4);else n.utf8Write(t,s+=4,i);this._debug&&this._debug(`Outbound: Sending CHANNEL_DATA (r:${e}, ${i})`);k(this,this._packetRW.write.finalize(n))}channelExtData(e,t,r){const i=Buffer.isBuffer(t);const s=i?t.length:Buffer.byteLength(t);let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+4+4+s);o[n]=u.CHANNEL_EXTENDED_DATA;R(o,e,++n);R(o,r,n+=4);R(o,s,n+=4);if(i)o.set(t,n+=4);else o.utf8Write(t,n+=4,s);this._debug&&this._debug(`Outbound: Sending CHANNEL_EXTENDED_DATA (r:${e})`);k(this,this._packetRW.write.finalize(o))}channelOpenConfirm(e,t,r,i){let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+4+4+4);n[s]=u.CHANNEL_OPEN_CONFIRMATION;R(n,e,++s);R(n,t,s+=4);R(n,r,s+=4);R(n,i,s+=4);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN_CONFIRMATION (r:${e}, l:${t})`);k(this,this._packetRW.write.finalize(n))}channelOpenFail(e,t,r){if(typeof r!=="string")r="";const i=Buffer.byteLength(r);let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+4+4+i+4);n[s]=u.CHANNEL_OPEN_FAILURE;R(n,e,++s);R(n,t,s+=4);R(n,i,s+=4);s+=4;if(i){n.utf8Write(r,s,i);s+=i}R(n,0,s);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN_FAILURE (r:${e})`);k(this,this._packetRW.write.finalize(n))}service(e){if(this._server)throw new Error("Client-only method called in server mode");const t=Buffer.byteLength(e);let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t);i[r]=u.SERVICE_REQUEST;R(i,t,++r);i.utf8Write(e,r+=4,t);this._debug&&this._debug(`Outbound: Sending SERVICE_REQUEST (${e})`);k(this,this._packetRW.write.finalize(i))}authPassword(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(e);const s=Buffer.byteLength(t);const n=r?Buffer.byteLength(r):0;let o=this._packetRW.write.allocStart;const p=this._packetRW.write.alloc(1+4+i+4+14+4+8+1+4+s+(r?4+n:0));p[o]=u.USERAUTH_REQUEST;R(p,i,++o);p.utf8Write(e,o+=4,i);R(p,14,o+=i);p.utf8Write("ssh-connection",o+=4,14);R(p,8,o+=14);p.utf8Write("password",o+=4,8);p[o+=8]=r?1:0;R(p,s,++o);if(Buffer.isBuffer(t))y(t,p,0,s,o+=4);else p.utf8Write(t,o+=4,s);if(r){R(p,n,o+=s);if(Buffer.isBuffer(r))y(r,p,0,n,o+=4);else p.utf8Write(r,o+=4,n);this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (changed password)")}else{this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (password)")}this._authsQueue.push("password");k(this,this._packetRW.write.finalize(p))}authPK(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");t=v(t);if(t instanceof Error)throw new Error("Invalid key");const i=t.type;t=t.getPublicSSH();const s=Buffer.byteLength(e);const n=Buffer.byteLength(i);const o=t.length;const p=this._kex.sessionID;const l=p.length;const m=(r?4+l:0)+1+4+s+4+14+4+9+1+4+n+4+o;let h;let g;if(r){h=Buffer.allocUnsafe(m);g=0;R(h,l,g);h.set(p,g+=4);g+=l}else{h=this._packetRW.write.alloc(m);g=this._packetRW.write.allocStart}h[g]=u.USERAUTH_REQUEST;R(h,s,++g);h.utf8Write(e,g+=4,s);R(h,14,g+=s);h.utf8Write("ssh-connection",g+=4,14);R(h,9,g+=14);h.utf8Write("publickey",g+=4,9);h[g+=9]=r?1:0;R(h,n,++g);h.utf8Write(i,g+=4,n);R(h,o,g+=n);h.set(t,g+=4);if(!r){this._authsQueue.push("publickey");this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (publickey -- check)");k(this,this._packetRW.write.finalize(h));return}r(h,(r=>{r=C(r,i);if(r===false)throw new Error("Error while converting handshake signature");const p=r.length;g=this._packetRW.write.allocStart;h=this._packetRW.write.alloc(1+4+s+4+14+4+9+1+4+n+4+o+4+4+n+4+p);h[g]=u.USERAUTH_REQUEST;R(h,s,++g);h.utf8Write(e,g+=4,s);R(h,14,g+=s);h.utf8Write("ssh-connection",g+=4,14);R(h,9,g+=14);h.utf8Write("publickey",g+=4,9);h[g+=9]=1;R(h,n,++g);h.utf8Write(i,g+=4,n);R(h,o,g+=n);h.set(t,g+=4);R(h,4+n+4+p,g+=o);R(h,n,g+=4);h.utf8Write(i,g+=4,n);R(h,p,g+=n);h.set(r,g+=4);this._authsQueue.push("publickey");this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (publickey)");k(this,this._packetRW.write.finalize(h))}))}authHostbased(e,t,r,i,s){if(this._server)throw new Error("Client-only method called in server mode");t=v(t);if(t instanceof Error)throw new Error("Invalid key");const n=t.type;t=t.getPublicSSH();const o=Buffer.byteLength(e);const p=Buffer.byteLength(n);const l=t.length;const m=this._kex.sessionID;const h=m.length;const g=Buffer.byteLength(r);const _=Buffer.byteLength(i);const E=Buffer.allocUnsafe(4+h+1+4+o+4+14+4+9+4+p+4+l+4+g+4+_);let w=0;R(E,h,w);E.set(m,w+=4);E[w+=h]=u.USERAUTH_REQUEST;R(E,o,++w);E.utf8Write(e,w+=4,o);R(E,14,w+=o);E.utf8Write("ssh-connection",w+=4,14);R(E,9,w+=14);E.utf8Write("hostbased",w+=4,9);R(E,p,w+=9);E.utf8Write(n,w+=4,p);R(E,l,w+=p);E.set(t,w+=4);R(E,g,w+=l);E.utf8Write(r,w+=4,g);R(E,_,w+=g);E.utf8Write(i,w+=4,_);s(E,(e=>{e=C(e,n);if(!e)throw new Error("Error while converting handshake signature");const t=e.length;const r=E.length-h-4;w=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(r+4+4+p+4+t);y(E,i,4+h,E.length,w);R(i,4+p+4+t,w+=r);R(i,p,w+=4);i.utf8Write(n,w+=4,p);R(i,t,w+=p);i.set(e,w+=4);this._authsQueue.push("hostbased");this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (hostbased)");k(this,this._packetRW.write.finalize(i))}))}authKeyboard(e){if(this._server)throw new Error("Client-only method called in server mode");const t=Buffer.byteLength(e);let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t+4+14+4+20+4+4);i[r]=u.USERAUTH_REQUEST;R(i,t,++r);i.utf8Write(e,r+=4,t);R(i,14,r+=t);i.utf8Write("ssh-connection",r+=4,14);R(i,20,r+=14);i.utf8Write("keyboard-interactive",r+=4,20);R(i,0,r+=20);R(i,0,r+=4);this._authsQueue.push("keyboard-interactive");this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (keyboard-interactive)");k(this,this._packetRW.write.finalize(i))}authNone(e){if(this._server)throw new Error("Client-only method called in server mode");const t=Buffer.byteLength(e);let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t+4+14+4+4);i[r]=u.USERAUTH_REQUEST;R(i,t,++r);i.utf8Write(e,r+=4,t);R(i,14,r+=t);i.utf8Write("ssh-connection",r+=4,14);R(i,4,r+=14);i.utf8Write("none",r+=4,4);this._authsQueue.push("none");this._debug&&this._debug("Outbound: Sending USERAUTH_REQUEST (none)");k(this,this._packetRW.write.finalize(i))}authInfoRes(e){if(this._server)throw new Error("Client-only method called in server mode");let t=0;let r;if(e){r=new Array(e.length);for(let i=0;i<e.length;++i){const s=Buffer.byteLength(e[i]);r[i]=s;t+=4+s}}let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+t);s[i]=u.USERAUTH_INFO_RESPONSE;if(e){R(s,e.length,++i);i+=4;for(let t=0;t<e.length;++t){const n=r[t];R(s,n,i);i+=4;if(n){s.utf8Write(e[t],i,n);i+=n}}}else{R(s,0,++i)}this._debug&&this._debug("Outbound: Sending USERAUTH_INFO_RESPONSE");k(this,this._packetRW.write.finalize(s))}tcpipForward(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(e);let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+13+1+4+i+4);n[s]=u.GLOBAL_REQUEST;R(n,13,++s);n.utf8Write("tcpip-forward",s+=4,13);n[s+=13]=r===undefined||r===true?1:0;R(n,i,++s);n.utf8Write(e,s+=4,i);R(n,t,s+=i);this._debug&&this._debug("Outbound: Sending GLOBAL_REQUEST (tcpip-forward)");k(this,this._packetRW.write.finalize(n))}cancelTcpipForward(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(e);let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+20+1+4+i+4);n[s]=u.GLOBAL_REQUEST;R(n,20,++s);n.utf8Write("cancel-tcpip-forward",s+=4,20);n[s+=20]=r===undefined||r===true?1:0;R(n,i,++s);n.utf8Write(e,s+=4,i);R(n,t,s+=i);this._debug&&this._debug("Outbound: Sending GLOBAL_REQUEST (cancel-tcpip-forward)");k(this,this._packetRW.write.finalize(n))}openssh_streamLocalForward(e,t){if(this._server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+31+1+4+r);s[i]=u.GLOBAL_REQUEST;R(s,31,++i);s.utf8Write("streamlocal-forward@openssh.com",i+=4,31);s[i+=31]=t===undefined||t===true?1:0;R(s,r,++i);s.utf8Write(e,i+=4,r);this._debug&&this._debug("Outbound: Sending GLOBAL_REQUEST (streamlocal-forward@openssh.com)");k(this,this._packetRW.write.finalize(s))}openssh_cancelStreamLocalForward(e,t){if(this._server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+38+1+4+r);s[i]=u.GLOBAL_REQUEST;R(s,38,++i);s.utf8Write("cancel-streamlocal-forward@openssh.com",i+=4,38);s[i+=38]=t===undefined||t===true?1:0;R(s,r,++i);s.utf8Write(e,i+=4,r);if(this._debug){this._debug("Outbound: Sending GLOBAL_REQUEST "+"(cancel-streamlocal-forward@openssh.com)")}k(this,this._packetRW.write.finalize(s))}directTcpip(e,t,r,i){if(this._server)throw new Error("Client-only method called in server mode");const s=Buffer.byteLength(i.srcIP);const n=Buffer.byteLength(i.dstIP);let o=this._packetRW.write.allocStart;const p=this._packetRW.write.alloc(1+4+12+4+4+4+4+s+4+4+n+4);p[o]=u.CHANNEL_OPEN;R(p,12,++o);p.utf8Write("direct-tcpip",o+=4,12);R(p,e,o+=12);R(p,t,o+=4);R(p,r,o+=4);R(p,n,o+=4);p.utf8Write(i.dstIP,o+=4,n);R(p,i.dstPort,o+=n);R(p,s,o+=4);p.utf8Write(i.srcIP,o+=4,s);R(p,i.srcPort,o+=s);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN (r:${e}, direct-tcpip)`);k(this,this._packetRW.write.finalize(p))}openssh_directStreamLocal(e,t,r,i){if(this._server)throw new Error("Client-only method called in server mode");const s=Buffer.byteLength(i.socketPath);let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+30+4+4+4+4+s+4+4);o[n]=u.CHANNEL_OPEN;R(o,30,++n);o.utf8Write("direct-streamlocal@openssh.com",n+=4,30);R(o,e,n+=30);R(o,t,n+=4);R(o,r,n+=4);R(o,s,n+=4);o.utf8Write(i.socketPath,n+=4,s);T(o,0,n+=s,n+8);if(this._debug){this._debug("Outbound: Sending CHANNEL_OPEN "+`(r:${e}, direct-streamlocal@openssh.com)`)}k(this,this._packetRW.write.finalize(o))}openssh_noMoreSessions(e){if(this._server)throw new Error("Client-only method called in server mode");let t=this._packetRW.write.allocStart;const r=this._packetRW.write.alloc(1+4+28+1);r[t]=u.GLOBAL_REQUEST;R(r,28,++t);r.utf8Write("no-more-sessions@openssh.com",t+=4,28);r[t+=28]=e===undefined||e===true?1:0;this._debug&&this._debug("Outbound: Sending GLOBAL_REQUEST (no-more-sessions@openssh.com)");k(this,this._packetRW.write.finalize(r))}session(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+7+4+4+4);s[i]=u.CHANNEL_OPEN;R(s,7,++i);s.utf8Write("session",i+=4,7);R(s,e,i+=7);R(s,t,i+=4);R(s,r,i+=4);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN (r:${e}, session)`);k(this,this._packetRW.write.finalize(s))}windowChange(e,t,r,i,s){if(this._server)throw new Error("Client-only method called in server mode");let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+4+13+1+4+4+4+4);o[n]=u.CHANNEL_REQUEST;R(o,e,++n);R(o,13,n+=4);o.utf8Write("window-change",n+=4,13);o[n+=13]=0;R(o,r,++n);R(o,t,n+=4);R(o,s,n+=4);R(o,i,n+=4);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, window-change)`);k(this,this._packetRW.write.finalize(o))}pty(e,t,r,i,s,n,o,p){if(this._server)throw new Error("Client-only method called in server mode");if(!n||!n.length)n="vt100";if(o&&!Buffer.isBuffer(o)&&!Array.isArray(o)&&typeof o==="object"&&o!==null){o=modesToBytes(o)}if(!o||!o.length)o=W;const l=n.length;const m=o.length;let h=this._packetRW.write.allocStart;const g=this._packetRW.write.alloc(1+4+4+7+1+4+l+4+4+4+4+4+m);g[h]=u.CHANNEL_REQUEST;R(g,e,++h);R(g,7,h+=4);g.utf8Write("pty-req",h+=4,7);g[h+=7]=p===undefined||p===true?1:0;R(g,l,++h);g.utf8Write(n,h+=4,l);R(g,r,h+=l);R(g,t,h+=4);R(g,s,h+=4);R(g,i,h+=4);R(g,m,h+=4);h+=4;if(Array.isArray(o)){for(let e=0;e<m;++e)g[h++]=o[e]}else if(Buffer.isBuffer(o)){g.set(o,h)}this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, pty-req)`);k(this,this._packetRW.write.finalize(g))}shell(e,t){if(this._server)throw new Error("Client-only method called in server mode");let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+4+5+1);i[r]=u.CHANNEL_REQUEST;R(i,e,++r);R(i,5,r+=4);i.utf8Write("shell",r+=4,5);i[r+=5]=t===undefined||t===true?1:0;this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, shell)`);k(this,this._packetRW.write.finalize(i))}exec(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=Buffer.isBuffer(t);const s=i?t.length:Buffer.byteLength(t);let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+4+4+1+4+s);o[n]=u.CHANNEL_REQUEST;R(o,e,++n);R(o,4,n+=4);o.utf8Write("exec",n+=4,4);o[n+=4]=r===undefined||r===true?1:0;R(o,s,++n);if(i)o.set(t,n+=4);else o.utf8Write(t,n+=4,s);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, exec: ${t})`);k(this,this._packetRW.write.finalize(o))}signal(e,t){if(this._server)throw new Error("Client-only method called in server mode");const r=t;t=t.toUpperCase();if(t.slice(0,3)==="SIG")t=t.slice(3);if(m[t]!==1)throw new Error(`Invalid signal: ${r}`);const i=t.length;let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+4+6+1+4+i);n[s]=u.CHANNEL_REQUEST;R(n,e,++s);R(n,6,s+=4);n.utf8Write("signal",s+=4,6);n[s+=6]=0;R(n,i,++s);n.utf8Write(t,s+=4,i);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, signal: ${t})`);k(this,this._packetRW.write.finalize(n))}env(e,t,r,i){if(this._server)throw new Error("Client-only method called in server mode");const s=Buffer.byteLength(t);const n=Buffer.isBuffer(r);const o=n?r.length:Buffer.byteLength(r);let p=this._packetRW.write.allocStart;const l=this._packetRW.write.alloc(1+4+4+3+1+4+s+4+o);l[p]=u.CHANNEL_REQUEST;R(l,e,++p);R(l,3,p+=4);l.utf8Write("env",p+=4,3);l[p+=3]=i===undefined||i===true?1:0;R(l,s,++p);l.utf8Write(t,p+=4,s);R(l,o,p+=s);if(n)l.set(r,p+=4);else l.utf8Write(r,p+=4,o);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, env: ${t}=${r})`);k(this,this._packetRW.write.finalize(l))}x11Forward(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=t.protocol;const s=t.cookie;const n=Buffer.isBuffer(i);const o=n?i.length:Buffer.byteLength(i);const p=Buffer.isBuffer(s);const l=p?s.length:Buffer.byteLength(s);let m=this._packetRW.write.allocStart;const h=this._packetRW.write.alloc(1+4+4+7+1+1+4+o+4+l+4);h[m]=u.CHANNEL_REQUEST;R(h,e,++m);R(h,7,m+=4);h.utf8Write("x11-req",m+=4,7);h[m+=7]=r===undefined||r===true?1:0;h[++m]=t.single?1:0;R(h,o,++m);if(n)h.set(i,m+=4);else h.utf8Write(i,m+=4,o);R(h,l,m+=o);if(p)h.set(s,m+=4);else h.latin1Write(s,m+=4,l);R(h,t.screen||0,m+=l);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, x11-req)`);k(this,this._packetRW.write.finalize(h))}subsystem(e,t,r){if(this._server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(t);let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+4+9+1+4+i);n[s]=u.CHANNEL_REQUEST;R(n,e,++s);R(n,9,s+=4);n.utf8Write("subsystem",s+=4,9);n[s+=9]=r===undefined||r===true?1:0;R(n,i,++s);n.utf8Write(t,s+=4,i);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, subsystem: ${t})`);k(this,this._packetRW.write.finalize(n))}openssh_agentForward(e,t){if(this._server)throw new Error("Client-only method called in server mode");let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+4+26+1);i[r]=u.CHANNEL_REQUEST;R(i,e,++r);R(i,26,r+=4);i.utf8Write("auth-agent-req@openssh.com",r+=4,26);i[r+=26]=t===undefined||t===true?1:0;if(this._debug){this._debug("Outbound: Sending CHANNEL_REQUEST "+`(r:${e}, auth-agent-req@openssh.com)`)}k(this,this._packetRW.write.finalize(i))}openssh_hostKeysProve(e){if(this._server)throw new Error("Client-only method called in server mode");let t=0;const r=[];for(const i of e){const e=i.getPublicSSH();t+=4+e.length;r.push(e)}let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+29+1+t);s[i]=u.GLOBAL_REQUEST;R(s,29,++i);s.utf8Write("hostkeys-prove-00@openssh.com",i+=4,29);s[i+=29]=1;++i;for(const e of r){R(s,e.length,i);y(e,s,0,e.length,i+=4);i+=e.length}if(this._debug){this._debug("Outbound: Sending GLOBAL_REQUEST (hostkeys-prove-00@openssh.com)")}k(this,this._packetRW.write.finalize(s))}serviceAccept(e){if(!this._server)throw new Error("Server-only method called in client mode");const t=Buffer.byteLength(e);let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t);i[r]=u.SERVICE_ACCEPT;R(i,t,++r);i.utf8Write(e,r+=4,t);this._debug&&this._debug(`Outbound: Sending SERVICE_ACCEPT (${e})`);k(this,this._packetRW.write.finalize(i));if(this._server&&this._banner&&e==="ssh-userauth"){const e=this._banner;this._banner=undefined;const t=Buffer.byteLength(e);r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t+4);i[r]=u.USERAUTH_BANNER;R(i,t,++r);i.utf8Write(e,r+=4,t);R(i,0,r+=t);this._debug&&this._debug("Outbound: Sending USERAUTH_BANNER");k(this,this._packetRW.write.finalize(i))}}forwardedTcpip(e,t,r,i){if(!this._server)throw new Error("Server-only method called in client mode");const s=Buffer.byteLength(i.boundAddr);const n=Buffer.byteLength(i.remoteAddr);let o=this._packetRW.write.allocStart;const p=this._packetRW.write.alloc(1+4+15+4+4+4+4+s+4+4+n+4);p[o]=u.CHANNEL_OPEN;R(p,15,++o);p.utf8Write("forwarded-tcpip",o+=4,15);R(p,e,o+=15);R(p,t,o+=4);R(p,r,o+=4);R(p,s,o+=4);p.utf8Write(i.boundAddr,o+=4,s);R(p,i.boundPort,o+=s);R(p,n,o+=4);p.utf8Write(i.remoteAddr,o+=4,n);R(p,i.remotePort,o+=n);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN (r:${e}, forwarded-tcpip)`);k(this,this._packetRW.write.finalize(p))}x11(e,t,r,i){if(!this._server)throw new Error("Server-only method called in client mode");const s=Buffer.byteLength(i.originAddr);let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+3+4+4+4+4+s+4);o[n]=u.CHANNEL_OPEN;R(o,3,++n);o.utf8Write("x11",n+=4,3);R(o,e,n+=3);R(o,t,n+=4);R(o,r,n+=4);R(o,s,n+=4);o.utf8Write(i.originAddr,n+=4,s);R(o,i.originPort,n+=s);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN (r:${e}, x11)`);k(this,this._packetRW.write.finalize(o))}openssh_authAgent(e,t,r){if(!this._server)throw new Error("Server-only method called in client mode");let i=this._packetRW.write.allocStart;const s=this._packetRW.write.alloc(1+4+22+4+4+4);s[i]=u.CHANNEL_OPEN;R(s,22,++i);s.utf8Write("auth-agent@openssh.com",i+=4,22);R(s,e,i+=22);R(s,t,i+=4);R(s,r,i+=4);this._debug&&this._debug(`Outbound: Sending CHANNEL_OPEN (r:${e}, auth-agent@openssh.com)`);k(this,this._packetRW.write.finalize(s))}openssh_forwardedStreamLocal(e,t,r,i){if(!this._server)throw new Error("Server-only method called in client mode");const s=Buffer.byteLength(i.socketPath);let n=this._packetRW.write.allocStart;const o=this._packetRW.write.alloc(1+4+33+4+4+4+4+s+4);o[n]=u.CHANNEL_OPEN;R(o,33,++n);o.utf8Write("forwarded-streamlocal@openssh.com",n+=4,33);R(o,e,n+=33);R(o,t,n+=4);R(o,r,n+=4);R(o,s,n+=4);o.utf8Write(i.socketPath,n+=4,s);R(o,0,n+=s);if(this._debug){this._debug("Outbound: Sending CHANNEL_OPEN "+`(r:${e}, forwarded-streamlocal@openssh.com)`)}k(this,this._packetRW.write.finalize(o))}exitStatus(e,t){if(!this._server)throw new Error("Server-only method called in client mode");let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+4+11+1+4);i[r]=u.CHANNEL_REQUEST;R(i,e,++r);R(i,11,r+=4);i.utf8Write("exit-status",r+=4,11);i[r+=11]=0;R(i,t,++r);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, exit-status: ${t})`);k(this,this._packetRW.write.finalize(i))}exitSignal(e,t,r,i){if(!this._server)throw new Error("Server-only method called in client mode");const s=t;if(typeof s!=="string"||!s)throw new Error(`Invalid signal: ${s}`);let n=t.toUpperCase();if(n.slice(0,3)==="SIG")n=n.slice(3);if(m[n]!==1)throw new Error(`Invalid signal: ${s}`);const o=Buffer.byteLength(n);const p=i?Buffer.byteLength(i):0;let l=this._packetRW.write.allocStart;const h=this._packetRW.write.alloc(1+4+4+11+1+4+o+1+4+p+4);h[l]=u.CHANNEL_REQUEST;R(h,e,++l);R(h,11,l+=4);h.utf8Write("exit-signal",l+=4,11);h[l+=11]=0;R(h,o,++l);h.utf8Write(n,l+=4,o);h[l+=o]=r?1:0;R(h,p,++l);l+=4;if(p){h.utf8Write(i,l,p);l+=p}R(h,0,l);this._debug&&this._debug(`Outbound: Sending CHANNEL_REQUEST (r:${e}, exit-signal: ${t})`);k(this,this._packetRW.write.finalize(h))}authFailure(e,t){if(!this._server)throw new Error("Server-only method called in client mode");if(this._authsQueue.length===0)throw new Error("No auth in progress");let r;if(typeof e==="boolean"){t=e;e=undefined}if(e){r=[];for(let t=0;t<e.length;++t){if(e[t].toLowerCase()==="none")continue;r.push(e[t])}r=r.join(",")}else{r=""}const i=r.length;let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+i+1);n[s]=u.USERAUTH_FAILURE;R(n,i,++s);n.utf8Write(r,s+=4,i);n[s+=i]=t===true?1:0;this._authsQueue.shift();this._debug&&this._debug("Outbound: Sending USERAUTH_FAILURE");k(this,this._packetRW.write.finalize(n))}authSuccess(){if(!this._server)throw new Error("Server-only method called in client mode");if(this._authsQueue.length===0)throw new Error("No auth in progress");const e=this._packetRW.write.allocStart;const t=this._packetRW.write.alloc(1);t[e]=u.USERAUTH_SUCCESS;this._authsQueue.shift();this._authenticated=true;this._debug&&this._debug("Outbound: Sending USERAUTH_SUCCESS");k(this,this._packetRW.write.finalize(t));if(this._kex.negotiated.cs.compress==="zlib@openssh.com")this._packetRW.read=new O;if(this._kex.negotiated.sc.compress==="zlib@openssh.com")this._packetRW.write=new D(this)}authPKOK(e,t){if(!this._server)throw new Error("Server-only method called in client mode");if(this._authsQueue.length===0||this._authsQueue[0]!=="publickey")throw new Error('"publickey" auth not in progress');const r=Buffer.byteLength(e);const i=t.length;let s=this._packetRW.write.allocStart;const n=this._packetRW.write.alloc(1+4+r+4+i);n[s]=u.USERAUTH_PK_OK;R(n,r,++s);n.utf8Write(e,s+=4,r);R(n,i,s+=r);n.set(t,s+=4);this._authsQueue.shift();this._debug&&this._debug("Outbound: Sending USERAUTH_PK_OK");k(this,this._packetRW.write.finalize(n))}authPasswdChg(e){if(!this._server)throw new Error("Server-only method called in client mode");const t=Buffer.byteLength(e);let r=this._packetRW.write.allocStart;const i=this._packetRW.write.alloc(1+4+t+4);i[r]=u.USERAUTH_PASSWD_CHANGEREQ;R(i,t,++r);i.utf8Write(e,r+=4,t);R(i,0,r+=t);this._debug&&this._debug("Outbound: Sending USERAUTH_PASSWD_CHANGEREQ");k(this,this._packetRW.write.finalize(i))}authInfoReq(e,t,r){if(!this._server)throw new Error("Server-only method called in client mode");let i=0;const s=e?Buffer.byteLength(e):0;const n=t?Buffer.byteLength(t):0;for(let e=0;e<r.length;++e)i+=4+Buffer.byteLength(r[e].prompt)+1;let o=this._packetRW.write.allocStart;const p=this._packetRW.write.alloc(1+4+s+4+n+4+4+i);p[o]=u.USERAUTH_INFO_REQUEST;R(p,s,++o);o+=4;if(e){p.utf8Write(e,o,s);o+=s}R(p,n,o);o+=4;if(t){p.utf8Write(t,o,n);o+=n}R(p,0,o);R(p,r.length,o+=4);o+=4;for(let e=0;e<r.length;++e){const t=r[e];const i=Buffer.byteLength(t.prompt);R(p,i,o);o+=4;if(i){p.utf8Write(t.prompt,o,i);o+=i}p[o++]=t.echo?1:0}this._debug&&this._debug("Outbound: Sending USERAUTH_INFO_REQUEST");k(this,this._packetRW.write.finalize(p))}}const j=/^SSH-(2\.0|1\.99)-([^ ]+)(?: (.*))?$/;function parseHeader(e,t,r){let s;let n;if(this._buffer){s=Buffer.allocUnsafe(this._buffer.length+(r-t));s.set(this._buffer,0);if(t===0){s.set(e,this._buffer.length)}else{s.set(new Uint8Array(e.buffer,e.byteOffset+t,r-t),this._buffer.length)}n=this._buffer.length;t=0}else{s=e;n=0}const p=t;let l=t;let u=t;let m=false;let h=0;let g=0;for(;t<s.length;++t){const e=s[t];if(e===13){m=true;continue}if(e===10){if(u>l&&u-l>4&&s[l]===83&&s[l+1]===83&&s[l+2]===72&&s[l+3]===45){const e=s.latin1Slice(p,u+1);const m=l===p?e:e.slice(l-p);const h=j.exec(m);if(!h)throw new Error("Invalid identification string");const g={greeting:l===p?"":e.slice(0,l-p),identRaw:m,versions:{protocol:h[1],software:h[2]},comments:h[3]};this._remoteIdentRaw=Buffer.from(m);this._debug&&this._debug(`Remote ident: ${i(m)}`);this._compatFlags=getCompatFlags(g);this._buffer=undefined;this._decipher=new o(0,w.bind(this,{firstPacket:true}));this._parse=parsePacket;this._onHeader(g);if(!this._destruct){return r}E(this);return t+1-n}if(this._server)throw new Error("Greetings from clients not permitted");if(++g>V)throw new Error("Max greeting lines exceeded");m=false;l=t+1;h=0}else if(m){throw new Error("Invalid header: expected newline")}else if(++h>=Q){throw new Error("Header line too long")}u=t}if(!this._buffer)this._buffer=I(s,p);return t-n}function parsePacket(e,t,r){return this._decipher.decrypt(e,t,r)}function onPayload(e){this._onPacket();if(e.length===0){this._debug&&this._debug("Inbound: Skipping empty packet payload");return}e=this._packetRW.read.read(e);const t=e[0];if(t===u.USERAUTH_SUCCESS&&!this._server&&!this._authenticated){this._authenticated=true;if(this._kex.negotiated.cs.compress==="zlib@openssh.com")this._packetRW.write=new D(this);if(this._kex.negotiated.sc.compress==="zlib@openssh.com")this._packetRW.read=new O}const r=b[t];if(r===undefined){this._debug&&this._debug(`Inbound: Unsupported message type: ${t}`);return}return r(this,e)}function getCompatFlags(e){const t=e.versions.software;let r=0;for(const e of p){if(typeof e[0]==="string"){if(t===e[0])r|=e[1]}else if(e[0].test(t)){r|=e[1]}}return r}function modesToBytes(e){const t=Object.keys(e);const r=Buffer.allocUnsafe(5*t.length+1);let i=0;for(let s=0;s<t.length;++s){const n=t[s];if(n==="TTY_OP_END")continue;const o=h[n];if(o===undefined)continue;const p=e[n];if(typeof p==="number"&&isFinite(p)){r[i++]=o;r[i++]=p>>>24;r[i++]=p>>>16;r[i++]=p>>>8;r[i++]=p}}r[i++]=h.TTY_OP_END;if(i<r.length)return I(r,0,i);return r}e.exports=Protocol},2026:(e,t,r)=>{"use strict";const i=r(2361);const s=r(7147);const{constants:n}=s;const{Readable:o,Writable:p}=r(2781);const{inherits:l,isDate:u}=r(3837);const m=Buffer[Symbol.species];const{bufferCopy:h,bufferSlice:g,makeBufferParser:_,writeUInt32BE:E}=r(9475);const w={SIZE:1,UIDGID:2,PERMISSIONS:4,ACMODTIME:8,EXTENDED:2147483648};const v=Buffer.alloc(28);const b={OK:0,EOF:1,NO_SUCH_FILE:2,PERMISSION_DENIED:3,FAILURE:4,BAD_MESSAGE:5,NO_CONNECTION:6,CONNECTION_LOST:7,OP_UNSUPPORTED:8};const y=new Map(Object.values(b).map((e=>[e,1])));const T={[b.OK]:"No error",[b.EOF]:"End of file",[b.NO_SUCH_FILE]:"No such file or directory",[b.PERMISSION_DENIED]:"Permission denied",[b.FAILURE]:"Failure",[b.BAD_MESSAGE]:"Bad message",[b.NO_CONNECTION]:"No connection",[b.CONNECTION_LOST]:"Connection lost",[b.OP_UNSUPPORTED]:"Operation unsupported"};const I={INIT:1,OPEN:3,CLOSE:4,READ:5,WRITE:6,LSTAT:7,FSTAT:8,SETSTAT:9,FSETSTAT:10,OPENDIR:11,READDIR:12,REMOVE:13,MKDIR:14,RMDIR:15,REALPATH:16,STAT:17,RENAME:18,READLINK:19,SYMLINK:20,EXTENDED:200};const C={VERSION:2,STATUS:101,HANDLE:102,DATA:103,NAME:104,ATTRS:105,EXTENDED:201};const k={READ:1,WRITE:2,APPEND:4,CREAT:8,TRUNC:16,EXCL:32};const R=2*1024;const B=2**32-1;const P=Buffer.from([0,0,0,5,I.INIT,0,0,0,3]);const O=Buffer.from([0,0,0,5,C.VERSION,0,0,0,3]);const D=/^SSH-2.0-(?:OpenSSH|dropbear)/;const U=256*1024;const L=_();const G={readable:false,writable:false,push:e=>{},once:()=>{},on:()=>{},emit:()=>{},end:()=>{}};function noop(){}class SFTP extends i{constructor(e,t,r){super();if(typeof r!=="object"||!r)r={};const i=e._protocol._remoteIdentRaw;this.server=!!r.server;this._debug=typeof r.debug==="function"?r.debug:undefined;this._isOpenSSH=i&&D.test(i);this._version=-1;this._extensions={};this._biOpt=r.biOpt;this._pktLenBytes=0;this._pktLen=0;this._pktPos=0;this._pktType=0;this._pktData=undefined;this._writeReqid=-1;this._requests={};this._maxInPktLen=U;this._maxOutPktLen=34e3;this._maxReadLen=(this._isOpenSSH?U:34e3)-R;this._maxWriteLen=(this._isOpenSSH?U:34e3)-R;this.maxOpenHandles=undefined;this._client=e;this._protocol=e._protocol;this._callbacks=[];this._hasX11=false;this._exit={code:undefined,signal:undefined,dump:undefined,desc:undefined};this._waitWindow=false;this._chunkcb=undefined;this._buffer=[];this.type=t.type;this.subtype=undefined;this.incoming=t.incoming;this.outgoing=t.outgoing;this.stderr=G;this.readable=true}push(e){if(e===null){cleanupRequests(this);if(!this.readable)return;this.readable=false;this.emit("end");return}let t=0;while(t<e.length){if(this._pktLenBytes<4){let r=Math.min(4-this._pktLenBytes,e.length-t);this._pktLenBytes+=r;while(r--)this._pktLen=(this._pktLen<<8)+e[t++];if(this._pktLenBytes<4)return;if(this._pktLen===0)return doFatalSFTPError(this,"Invalid packet length");if(this._pktLen>this._maxInPktLen){const e=this._maxInPktLen;return doFatalSFTPError(this,`Packet length ${this._pktLen} exceeds max length of ${e}`)}if(t>=e.length)return}if(this._pktPos<this._pktLen){const r=Math.min(this._pktLen-this._pktPos,e.length-t);if(t!==0||r!==e.length){if(r===this._pktLen){this._pkt=new m(e.buffer,e.byteOffset+t,r)}else{if(!this._pkt)this._pkt=Buffer.allocUnsafe(this._pktLen);this._pkt.set(new Uint8Array(e.buffer,e.byteOffset+t,r),this._pktPos)}}else if(r===this._pktLen){this._pkt=e}else{if(!this._pkt)this._pkt=Buffer.allocUnsafe(this._pktLen);this._pkt.set(e,this._pktPos)}t+=r;this._pktPos+=r;if(this._pktPos<this._pktLen)return}const r=this._pkt[0];const i=this._pkt;this._pktLen=0;this._pktLenBytes=0;this._pkt=undefined;this._pktPos=0;const s=this.server?q[r]:V[r];if(!s)return doFatalSFTPError(this,`Unknown packet type ${r}`);if(this._version===-1){if(this.server){if(r!==I.INIT)return doFatalSFTPError(this,`Expected INIT packet, got ${r}`)}else if(r!==C.VERSION){return doFatalSFTPError(this,`Expected VERSION packet, got ${r}`)}}if(s(this,i)===false)return}}end(){this.destroy()}destroy(){if(this.outgoing.state==="open"||this.outgoing.state==="eof"){this.outgoing.state="closing";this._protocol.channelClose(this.outgoing.id)}}_init(){this._init=noop;if(!this.server)sendOrBuffer(this,P)}createReadStream(e,t){if(this.server)throw new Error("Client-only method called in server mode");return new ReadStream(this,e,t)}createWriteStream(e,t){if(this.server)throw new Error("Client-only method called in server mode");return new WriteStream(this,e,t)}open(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");if(typeof r==="function"){i=r;r=undefined}const s=typeof t==="number"?t:stringToFlags(t);if(s===null)throw new Error(`Unknown flags string: ${t}`);let n=0;let o=0;if(typeof r==="string"||typeof r==="number")r={mode:r};if(typeof r==="object"&&r!==null){r=attrsToBytes(r);n=r.flags;o=r.nb}const p=Buffer.byteLength(e);let l=9;const u=Buffer.allocUnsafe(4+1+4+4+p+4+4+o);E(u,u.length-4,0);u[4]=I.OPEN;const m=this._writeReqid=this._writeReqid+1&B;E(u,m,5);E(u,p,l);u.utf8Write(e,l+=4,p);E(u,s,l+=p);E(u,n,l+=4);if(o){l+=4;if(o===v.length)u.set(v,l);else h(v,u,0,o,l);l+=o}this._requests[m]={cb:i};const g=sendOrBuffer(this,u);this._debug&&this._debug(`SFTP: Outbound: ${g?"Buffered":"Sending"} OPEN`)}close(e,t){if(this.server)throw new Error("Client-only method called in server mode");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");const r=e.length;let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.CLOSE;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.set(e,i+=4);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} CLOSE`)}read(e,t,r,i,s,n){if(this.server)throw new Error("Client-only method called in server mode");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");if(!Buffer.isBuffer(t))throw new Error("buffer is not a Buffer");if(r>=t.length)throw new Error("offset is out of bounds");if(r+i>t.length)throw new Error("length extends beyond buffer");if(s===null)throw new Error("null position currently unsupported");read_(this,e,t,r,i,s,n)}readData(e,t,r,i,s,n){this.read(e,t,r,i,s,n)}write(e,t,r,i,s,n){if(this.server)throw new Error("Client-only method called in server mode");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");if(!Buffer.isBuffer(t))throw new Error("buffer is not a Buffer");if(r>t.length)throw new Error("offset is out of bounds");if(r+i>t.length)throw new Error("length extends beyond buffer");if(s===null)throw new Error("null position currently unsupported");if(!i){n&&process.nextTick(n,undefined,0);return}const o=this._maxWriteLen;const p=Math.max(i-o,0);const l=s;if(p)i=o;const u=e.length;let m=9;const g=Buffer.allocUnsafe(4+1+4+4+u+8+4+i);E(g,g.length-4,0);g[4]=I.WRITE;const _=this._writeReqid=this._writeReqid+1&B;E(g,_,5);E(g,u,m);g.set(e,m+=4);m+=u;for(let e=7;e>=0;--e){g[m+e]=s&255;s/=256}E(g,i,m+=8);h(t,g,r,r+i,m+=4);this._requests[_]={cb:s=>{if(s){if(typeof n==="function")n(s)}else if(p){this.write(e,t,r+i,p,l+i,n)}else if(typeof n==="function"){n(undefined,r+i)}}};const w=sendOrBuffer(this,g);if(this._debug){const e=w?"Sent":"Buffered";this._debug(`SFTP: Outbound: ${e} WRITE (id:${_})`)}}writeData(e,t,r,i,s,n){this.write(e,t,r,i,s,n)}fastGet(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");fastXfer(this,s,e,t,r,i)}fastPut(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");fastXfer(s,this,e,t,r,i)}readFile(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");let i;if(typeof r==="function"){i=r}else if(typeof t==="function"){i=t;t=undefined}if(typeof t==="string")t={encoding:t,flag:"r"};else if(!t)t={encoding:null,flag:"r"};else if(typeof t!=="object")throw new TypeError("Bad arguments");const s=t.encoding;if(s&&!Buffer.isEncoding(s))throw new Error(`Unknown encoding: ${s}`);let n;let o;let p;let l=0;let u;let m=0;const h=t.flag||"r";const read=()=>{if(n===0){o=Buffer.allocUnsafe(8192);this.read(u,o,0,8192,m,afterRead)}else{this.read(u,o,l,n-l,m,afterRead)}};const afterRead=(e,t)=>{let r;if(e){r=e.code===b.EOF;if(!r){return this.close(u,(()=>i&&i(e)))}}else{r=false}if(r||n===0&&t===0)return close();m+=t;l+=t;if(n!==0){if(l===n)close();else read()}else{p.push(g(o,0,t));read()}};afterRead._wantEOFError=true;const close=()=>{this.close(u,(e=>{if(n===0){o=Buffer.concat(p,l)}else if(l<n){o=g(o,0,l)}if(s)o=o.toString(s);return i&&i(e,o)}))};this.open(e,h,438,((t,r)=>{if(t)return i&&i(t);u=r;const tryStat=(t,r)=>{if(t){this.stat(e,((e,r)=>{if(e){return this.close(u,(()=>{i&&i(t)}))}tryStat(null,r)}));return}n=r.size||0;if(n===0){p=[];return read()}o=Buffer.allocUnsafe(n);read()};this.fstat(u,tryStat)}))}writeFile(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");let s;if(typeof i==="function"){s=i}else if(typeof r==="function"){s=r;r=undefined}if(typeof r==="string")r={encoding:r,mode:438,flag:"w"};else if(!r)r={encoding:"utf8",mode:438,flag:"w"};else if(typeof r!=="object")throw new TypeError("Bad arguments");if(r.encoding&&!Buffer.isEncoding(r.encoding))throw new Error(`Unknown encoding: ${r.encoding}`);const n=r.flag||"w";this.open(e,n,r.mode,((i,o)=>{if(i){s&&s(i)}else{const i=Buffer.isBuffer(t)?t:Buffer.from(""+t,r.encoding||"utf8");const p=/a/.test(n)?null:0;if(p===null){const tryStat=(t,r)=>{if(t){this.stat(e,((e,r)=>{if(e){return this.close(o,(()=>{s&&s(t)}))}tryStat(null,r)}));return}writeAll(this,o,i,0,i.length,r.size,s)};this.fstat(o,tryStat);return}writeAll(this,o,i,0,i.length,p,s)}}))}appendFile(e,t,r,i){if(this.server)throw new Error("Client-only method called in server mode");let s;if(typeof i==="function"){s=i}else if(typeof r==="function"){s=r;r=undefined}if(typeof r==="string")r={encoding:r,mode:438,flag:"a"};else if(!r)r={encoding:"utf8",mode:438,flag:"a"};else if(typeof r!=="object")throw new TypeError("Bad arguments");if(!r.flag)r=Object.assign({flag:"a"},r);this.writeFile(e,t,r,s)}exists(e,t){if(this.server)throw new Error("Client-only method called in server mode");this.stat(e,(e=>{t&&t(e?false:true)}))}unlink(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.REMOVE;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} REMOVE`)}rename(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(e);const s=Buffer.byteLength(t);let n=9;const o=Buffer.allocUnsafe(4+1+4+4+i+4+s);E(o,o.length-4,0);o[4]=I.RENAME;const p=this._writeReqid=this._writeReqid+1&B;E(o,p,5);E(o,i,n);o.utf8Write(e,n+=4,i);E(o,s,n+=i);o.utf8Write(t,n+=4,s);this._requests[p]={cb:r};const l=sendOrBuffer(this,o);this._debug&&this._debug(`SFTP: Outbound: ${l?"Buffered":"Sending"} RENAME`)}mkdir(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");let i=0;let s=0;if(typeof t==="function"){r=t;t=undefined}if(typeof t==="object"&&t!==null){t=attrsToBytes(t);i=t.flags;s=t.nb}const n=Buffer.byteLength(e);let o=9;const p=Buffer.allocUnsafe(4+1+4+4+n+4+s);E(p,p.length-4,0);p[4]=I.MKDIR;const l=this._writeReqid=this._writeReqid+1&B;E(p,l,5);E(p,n,o);p.utf8Write(e,o+=4,n);E(p,i,o+=n);if(s){o+=4;if(s===v.length)p.set(v,o);else h(v,p,0,s,o);o+=s}this._requests[l]={cb:r};const u=sendOrBuffer(this,p);this._debug&&this._debug(`SFTP: Outbound: ${u?"Buffered":"Sending"} MKDIR`)}rmdir(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.RMDIR;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} RMDIR`)}readdir(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");if(typeof t==="function"){r=t;t={}}if(typeof t!=="object"||t===null)t={};const i=t&&t.full?false:true;if(!Buffer.isBuffer(e)&&typeof e!=="string")throw new Error("missing directory handle or path");if(typeof e==="string"){const i=[];let s=0;const reread=(e,n)=>{if(e)return r(e);this.readdir(n,t,((e,t)=>{const o=e&&e.code===b.EOF;if(e&&!o)return this.close(n,(()=>r(e)));if(o){return this.close(n,(e=>{if(e)return r(e);r(undefined,i)}))}for(let e=0;e<t.length;++e,++s)i[s]=t[e];reread(undefined,n)}))};return this.opendir(e,reread)}const s=e.length;let n=9;const o=Buffer.allocUnsafe(4+1+4+4+s);E(o,o.length-4,0);o[4]=I.READDIR;const p=this._writeReqid=this._writeReqid+1&B;E(o,p,5);E(o,s,n);o.set(e,n+=4);this._requests[p]={cb:i?(e,t)=>{if(typeof r!=="function")return;if(e)return r(e);for(let e=t.length-1;e>=0;--e){if(t[e].filename==="."||t[e].filename==="..")t.splice(e,1)}r(undefined,t)}:r};const l=sendOrBuffer(this,o);this._debug&&this._debug(`SFTP: Outbound: ${l?"Buffered":"Sending"} READDIR`)}fstat(e,t){if(this.server)throw new Error("Client-only method called in server mode");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");const r=e.length;let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.FSTAT;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.set(e,i+=4);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} FSTAT`)}stat(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.STAT;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} STAT`)}lstat(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.LSTAT;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} LSTAT`)}opendir(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.OPENDIR;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:t};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} OPENDIR`)}setstat(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");let i=0;let s=0;if(typeof t==="object"&&t!==null){t=attrsToBytes(t);i=t.flags;s=t.nb}else if(typeof t==="function"){r=t}const n=Buffer.byteLength(e);let o=9;const p=Buffer.allocUnsafe(4+1+4+4+n+4+s);E(p,p.length-4,0);p[4]=I.SETSTAT;const l=this._writeReqid=this._writeReqid+1&B;E(p,l,5);E(p,n,o);p.utf8Write(e,o+=4,n);E(p,i,o+=n);if(s){o+=4;if(s===v.length)p.set(v,o);else h(v,p,0,s,o);o+=s}this._requests[l]={cb:r};const u=sendOrBuffer(this,p);this._debug&&this._debug(`SFTP: Outbound: ${u?"Buffered":"Sending"} SETSTAT`)}fsetstat(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");let i=0;let s=0;if(typeof t==="object"&&t!==null){t=attrsToBytes(t);i=t.flags;s=t.nb}else if(typeof t==="function"){r=t}const n=e.length;let o=9;const p=Buffer.allocUnsafe(4+1+4+4+n+4+s);E(p,p.length-4,0);p[4]=I.FSETSTAT;const l=this._writeReqid=this._writeReqid+1&B;E(p,l,5);E(p,n,o);p.set(e,o+=4);E(p,i,o+=n);if(s){o+=4;if(s===v.length)p.set(v,o);else h(v,p,0,s,o);o+=s}this._requests[l]={cb:r};const u=sendOrBuffer(this,p);this._debug&&this._debug(`SFTP: Outbound: ${u?"Buffered":"Sending"} FSETSTAT`)}futimes(e,t,r,i){return this.fsetstat(e,{atime:toUnixTimestamp(t),mtime:toUnixTimestamp(r)},i)}utimes(e,t,r,i){return this.setstat(e,{atime:toUnixTimestamp(t),mtime:toUnixTimestamp(r)},i)}fchown(e,t,r,i){return this.fsetstat(e,{uid:t,gid:r},i)}chown(e,t,r,i){return this.setstat(e,{uid:t,gid:r},i)}fchmod(e,t,r){return this.fsetstat(e,{mode:t},r)}chmod(e,t,r){return this.setstat(e,{mode:t},r)}readlink(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.READLINK;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:(e,r)=>{if(typeof t!=="function")return;if(e)return t(e);if(!r||!r.length)return t(new Error("Response missing link info"));t(undefined,r[0].filename)}};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} READLINK`)}symlink(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");const i=Buffer.byteLength(t);const s=Buffer.byteLength(e);let n=9;const o=Buffer.allocUnsafe(4+1+4+4+i+4+s);E(o,o.length-4,0);o[4]=I.SYMLINK;const p=this._writeReqid=this._writeReqid+1&B;E(o,p,5);if(this._isOpenSSH){E(o,s,n);o.utf8Write(e,n+=4,s);E(o,i,n+=s);o.utf8Write(t,n+=4,i)}else{E(o,i,n);o.utf8Write(t,n+=4,i);E(o,s,n+=i);o.utf8Write(e,n+=4,s)}this._requests[p]={cb:r};const l=sendOrBuffer(this,o);this._debug&&this._debug(`SFTP: Outbound: ${l?"Buffered":"Sending"} SYMLINK`)}realpath(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=Buffer.byteLength(e);let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=I.REALPATH;const n=this._writeReqid=this._writeReqid+1&B;E(s,n,5);E(s,r,i);s.utf8Write(e,i+=4,r);this._requests[n]={cb:(e,r)=>{if(typeof t!=="function")return;if(e)return t(e);if(!r||!r.length)return t(new Error("Response missing path info"));t(undefined,r[0].filename)}};const o=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} REALPATH`)}ext_openssh_rename(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");const i=this._extensions["posix-rename@openssh.com"];if(!i||i!=="1")throw new Error("Server does not support this extended request");const s=Buffer.byteLength(e);const n=Buffer.byteLength(t);let o=9;const p=Buffer.allocUnsafe(4+1+4+4+24+4+s+4+n);E(p,p.length-4,0);p[4]=I.EXTENDED;const l=this._writeReqid=this._writeReqid+1&B;E(p,l,5);E(p,24,o);p.utf8Write("posix-rename@openssh.com",o+=4,24);E(p,s,o+=24);p.utf8Write(e,o+=4,s);E(p,n,o+=s);p.utf8Write(t,o+=4,n);this._requests[l]={cb:r};const u=sendOrBuffer(this,p);if(this._debug){const e=u?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} posix-rename@openssh.com`)}}ext_openssh_statvfs(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=this._extensions["statvfs@openssh.com"];if(!r||r!=="2")throw new Error("Server does not support this extended request");const i=Buffer.byteLength(e);let s=9;const n=Buffer.allocUnsafe(4+1+4+4+19+4+i);E(n,n.length-4,0);n[4]=I.EXTENDED;const o=this._writeReqid=this._writeReqid+1&B;E(n,o,5);E(n,19,s);n.utf8Write("statvfs@openssh.com",s+=4,19);E(n,i,s+=19);n.utf8Write(e,s+=4,i);this._requests[o]={extended:"statvfs@openssh.com",cb:t};const p=sendOrBuffer(this,n);if(this._debug){const e=p?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} statvfs@openssh.com`)}}ext_openssh_fstatvfs(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=this._extensions["fstatvfs@openssh.com"];if(!r||r!=="2")throw new Error("Server does not support this extended request");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");const i=e.length;let s=9;const n=Buffer.allocUnsafe(4+1+4+4+20+4+i);E(n,n.length-4,0);n[4]=I.EXTENDED;const o=this._writeReqid=this._writeReqid+1&B;E(n,o,5);E(n,20,s);n.utf8Write("fstatvfs@openssh.com",s+=4,20);E(n,i,s+=20);n.set(e,s+=4);this._requests[o]={extended:"fstatvfs@openssh.com",cb:t};const p=sendOrBuffer(this,n);if(this._debug){const e=p?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} fstatvfs@openssh.com`)}}ext_openssh_hardlink(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");const i=this._extensions["hardlink@openssh.com"];if(i!=="1")throw new Error("Server does not support this extended request");const s=Buffer.byteLength(e);const n=Buffer.byteLength(t);let o=9;const p=Buffer.allocUnsafe(4+1+4+4+20+4+s+4+n);E(p,p.length-4,0);p[4]=I.EXTENDED;const l=this._writeReqid=this._writeReqid+1&B;E(p,l,5);E(p,20,o);p.utf8Write("hardlink@openssh.com",o+=4,20);E(p,s,o+=20);p.utf8Write(e,o+=4,s);E(p,n,o+=s);p.utf8Write(t,o+=4,n);this._requests[l]={cb:r};const u=sendOrBuffer(this,p);if(this._debug){const e=u?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} hardlink@openssh.com`)}}ext_openssh_fsync(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=this._extensions["fsync@openssh.com"];if(r!=="1")throw new Error("Server does not support this extended request");if(!Buffer.isBuffer(e))throw new Error("handle is not a Buffer");const i=e.length;let s=9;const n=Buffer.allocUnsafe(4+1+4+4+17+4+i);E(n,n.length-4,0);n[4]=I.EXTENDED;const o=this._writeReqid=this._writeReqid+1&B;E(n,o,5);E(n,17,s);n.utf8Write("fsync@openssh.com",s+=4,17);E(n,i,s+=17);n.set(e,s+=4);this._requests[o]={cb:t};const p=sendOrBuffer(this,n);this._debug&&this._debug(`SFTP: Outbound: ${p?"Buffered":"Sending"} fsync@openssh.com`)}ext_openssh_lsetstat(e,t,r){if(this.server)throw new Error("Client-only method called in server mode");const i=this._extensions["lsetstat@openssh.com"];if(i!=="1")throw new Error("Server does not support this extended request");let s=0;let n=0;if(typeof t==="object"&&t!==null){t=attrsToBytes(t);s=t.flags;n=t.nb}else if(typeof t==="function"){r=t}const o=Buffer.byteLength(e);let p=9;const l=Buffer.allocUnsafe(4+1+4+4+20+4+o+4+n);E(l,l.length-4,0);l[4]=I.EXTENDED;const u=this._writeReqid=this._writeReqid+1&B;E(l,u,5);E(l,20,p);l.utf8Write("lsetstat@openssh.com",p+=4,20);E(l,o,p+=20);l.utf8Write(e,p+=4,o);E(l,s,p+=o);if(n){p+=4;if(n===v.length)l.set(v,p);else h(v,l,0,n,p);p+=n}this._requests[u]={cb:r};const m=sendOrBuffer(this,l);if(this._debug){const e=m?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} lsetstat@openssh.com`)}}ext_openssh_expandPath(e,t){if(this.server)throw new Error("Client-only method called in server mode");const r=this._extensions["expand-path@openssh.com"];if(r!=="1")throw new Error("Server does not support this extended request");const i=Buffer.byteLength(e);let s=9;const n=Buffer.allocUnsafe(4+1+4+4+23+4+i);E(n,n.length-4,0);n[4]=I.EXTENDED;const o=this._writeReqid=this._writeReqid+1&B;E(n,o,5);E(n,23,s);n.utf8Write("expand-path@openssh.com",s+=4,23);E(n,i,s+=20);n.utf8Write(e,s+=4,i);this._requests[o]={cb:t};const p=sendOrBuffer(this,n);if(this._debug){const e=p?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} expand-path@openssh.com`)}}ext_copy_data(e,t,r,i,s,n){if(this.server)throw new Error("Client-only method called in server mode");const o=this._extensions["copy-data"];if(o!=="1")throw new Error("Server does not support this extended request");if(!Buffer.isBuffer(e))throw new Error("Source handle is not a Buffer");if(!Buffer.isBuffer(i))throw new Error("Destination handle is not a Buffer");let p=0;const l=Buffer.allocUnsafe(4+1+4+4+9+4+e.length+8+8+4+i.length+8);E(l,l.length-4,p);p+=4;l[p]=I.EXTENDED;++p;const u=this._writeReqid=this._writeReqid+1&B;E(l,u,p);p+=4;E(l,9,p);p+=4;l.utf8Write("copy-data",p,9);p+=9;E(l,e.length,p);p+=4;l.set(e,p);p+=e.length;for(let e=7;e>=0;--e){l[p+e]=t&255;t/=256}p+=8;for(let e=7;e>=0;--e){l[p+e]=r&255;r/=256}p+=8;E(l,i.length,p);p+=4;l.set(i,p);p+=i.length;for(let e=7;e>=0;--e){l[p+e]=s&255;s/=256}this._requests[u]={cb:n};const m=sendOrBuffer(this,l);if(this._debug){const e=m?"Buffered":"Sending";this._debug(`SFTP: Outbound: ${e} copy-data`)}}handle(e,t){if(!this.server)throw new Error("Server-only method called in client mode");if(!Buffer.isBuffer(t))throw new Error("handle is not a Buffer");const r=t.length;if(r>256)throw new Error("handle too large (> 256 bytes)");let i=9;const s=Buffer.allocUnsafe(4+1+4+4+r);E(s,s.length-4,0);s[4]=C.HANDLE;E(s,e,5);E(s,r,i);if(r)s.set(t,i+=4);const n=sendOrBuffer(this,s);this._debug&&this._debug(`SFTP: Outbound: ${n?"Buffered":"Sending"} HANDLE`)}status(e,t,r){if(!this.server)throw new Error("Server-only method called in client mode");if(!y.has(t))throw new Error(`Bad status code: ${t}`);r||(r="");const i=Buffer.byteLength(r);let s=9;const n=Buffer.allocUnsafe(4+1+4+4+4+i+4);E(n,n.length-4,0);n[4]=C.STATUS;E(n,e,5);E(n,t,s);E(n,i,s+=4);s+=4;if(i){n.utf8Write(r,s,i);s+=i}E(n,0,s);const o=sendOrBuffer(this,n);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} STATUS`)}data(e,t,r){if(!this.server)throw new Error("Server-only method called in client mode");const i=Buffer.isBuffer(t);if(!i&&typeof t!=="string")throw new Error("data is not a Buffer or string");let s;if(!i&&!r){r=undefined;s=true}const n=i?t.length:Buffer.byteLength(t,r);let o=9;const p=Buffer.allocUnsafe(4+1+4+4+n);E(p,p.length-4,0);p[4]=C.DATA;E(p,e,5);E(p,n,o);if(n){if(i)p.set(t,o+=4);else if(s)p.utf8Write(t,o+=4,n);else p.write(t,o+=4,n,r)}const l=sendOrBuffer(this,p);this._debug&&this._debug(`SFTP: Outbound: ${l?"Buffered":"Sending"} DATA`)}name(e,t){if(!this.server)throw new Error("Server-only method called in client mode");if(!Array.isArray(t)){if(typeof t!=="object"||t===null)throw new Error("names is not an object or array");t=[t]}const r=t.length;let i=0;let s;const n=[];for(let e=0;e<r;++e){const r=t[e];const o=!r||!r.filename||typeof r.filename!=="string"?"":r.filename;i+=4+Buffer.byteLength(o);const p=!r||!r.longname||typeof r.longname!=="string"?"":r.longname;i+=4+Buffer.byteLength(p);if(typeof r.attrs==="object"&&r.attrs!==null){s=attrsToBytes(r.attrs);i+=4+s.nb;if(s.nb){let e;if(s.nb===v.length){e=new Uint8Array(v)}else{e=new Uint8Array(s.nb);h(v,e,0,s.nb,0)}s.bytes=e}n.push(s)}else{i+=4;n.push(null)}}let o=9;const p=Buffer.allocUnsafe(4+1+4+4+i);E(p,p.length-4,0);p[4]=C.NAME;E(p,e,5);E(p,r,o);o+=4;for(let e=0;e<r;++e){const r=t[e];{const e=!r||!r.filename||typeof r.filename!=="string"?"":r.filename;const t=Buffer.byteLength(e);E(p,t,o);o+=4;if(t){p.utf8Write(e,o,t);o+=t}}{const e=!r||!r.longname||typeof r.longname!=="string"?"":r.longname;const t=Buffer.byteLength(e);E(p,t,o);o+=4;if(t){p.utf8Write(e,o,t);o+=t}}const i=n[e];if(i){E(p,i.flags,o);o+=4;if(i.flags&&i.bytes){p.set(i.bytes,o);o+=i.nb}}else{E(p,0,o);o+=4}}const l=sendOrBuffer(this,p);this._debug&&this._debug(`SFTP: Outbound: ${l?"Buffered":"Sending"} NAME`)}attrs(e,t){if(!this.server)throw new Error("Server-only method called in client mode");if(typeof t!=="object"||t===null)throw new Error("attrs is not an object");t=attrsToBytes(t);const r=t.flags;const i=t.nb;let s=9;const n=Buffer.allocUnsafe(4+1+4+4+i);E(n,n.length-4,0);n[4]=C.ATTRS;E(n,e,5);E(n,r,s);if(i){s+=4;if(i===v.length)n.set(v,s);else h(v,n,0,i,s);s+=i}const o=sendOrBuffer(this,n);this._debug&&this._debug(`SFTP: Outbound: ${o?"Buffered":"Sending"} ATTRS`)}}function tryCreateBuffer(e){try{return Buffer.allocUnsafe(e)}catch(e){return e}}function read_(e,t,r,i,s,n,o,p){const l=e._maxReadLen;const u=Math.max(s-l,0);if(u)s=l;const m=t.length;let h=9;let _=n;const w=Buffer.allocUnsafe(4+1+4+4+m+8+4);E(w,w.length-4,0);w[4]=I.READ;const v=e._writeReqid=e._writeReqid+1&B;E(w,v,5);E(w,m,h);w.set(t,h+=4);h+=m;for(let e=7;e>=0;--e){w[h+e]=_&255;_/=256}E(w,s,h+=8);if(typeof o!=="function")o=noop;const y=p||{nb:0,position:n,off:i,origOff:i,len:undefined,overflow:undefined,cb:(i,s,n)=>{const p=y.len;const l=y.overflow;if(i){if(o._wantEOFError||i.code!==b.EOF)return o(i)}else if(n>p){return o(new Error("Received more data than requested"))}else if(n===p&&l){y.nb+=n;y.position+=n;y.off+=n;read_(e,t,r,y.off,l,y.position,o,y);return}n=n||0;if(y.origOff===0&&r.length===y.nb)s=r;else s=g(r,y.origOff,y.origOff+y.nb+n);o(undefined,y.nb+n,s,y.position)},buffer:undefined};y.len=s;y.overflow=u;y.buffer=g(r,i,i+s);e._requests[v]=y;const T=sendOrBuffer(e,w);e._debug&&e._debug(`SFTP: Outbound: ${T?"Buffered":"Sending"} READ`)}function fastXfer(e,t,r,i,n,o){let p=64;let l=32768;let u;let m;let h;if(typeof n==="function"){o=n}else if(typeof n==="object"&&n!==null){if(typeof n.concurrency==="number"&&n.concurrency>0&&!isNaN(n.concurrency)){p=n.concurrency}if(typeof n.chunkSize==="number"&&n.chunkSize>0&&!isNaN(n.chunkSize)){l=n.chunkSize}if(typeof n.fileSize==="number"&&n.fileSize>0&&!isNaN(n.fileSize)){h=n.fileSize}if(typeof n.step==="function")u=n.step;if(typeof n.mode==="string"||typeof n.mode==="number")m=modeNum(n.mode)}let g;let _=0;let E=0;let w=false;let v;let b;let y;let T=l*p;function onerror(r){if(w)return;w=true;let i=0;let n;if(v||b){n=()=>{if(--i===0)o(r)};if(v&&(e===s||e.outgoing.state==="open"))++i;if(b&&(t===s||t.outgoing.state==="open"))++i;if(v&&(e===s||e.outgoing.state==="open"))e.close(v,n);if(b&&(t===s||t.outgoing.state==="open"))t.close(b,n)}else{o(r)}}e.open(r,"r",((n,w)=>{if(n)return onerror(n);v=w;if(h===undefined)e.fstat(v,tryStat);else tryStat(null,{size:h});function tryStat(n,h){if(n){if(e!==s){e.stat(r,((e,t)=>{if(e)return onerror(n);tryStat(null,t)}));return}return onerror(n)}g=h.size;t.open(i,"w",((r,s)=>{if(r)return onerror(r);b=s;if(g<=0)return onerror();while(T>g){if(p===1){T=g;break}T-=l;--p}y=tryCreateBuffer(T);if(y instanceof Error)return onerror(y);if(m!==undefined){t.fchmod(b,m,(function tryAgain(e){if(e){t.chmod(i,m,(e=>tryAgain()));return}startReads()}))}else{startReads()}function onread(r,i,s,n,p,m){if(r)return onerror(r);p=p||0;t.write(b,y,p,i,n,writeCb);function writeCb(r){if(r)return onerror(r);E+=i;u&&u(E,i,g);if(i<m)return singleRead(p,n+i,m-i);if(E===g){t.close(b,(t=>{b=undefined;if(t)return onerror(t);e.close(v,(e=>{v=undefined;if(e)return onerror(e);o()}))}));return}if(_>=g)return;const s=_+l>g?g-_:l;singleRead(p,_,s);_+=s}}function makeCb(e,t,r){return(i,s,n)=>{onread(i,s,n,t,e,r)}}function singleRead(t,r,i){e.read(v,y,t,i,r,makeCb(t,r,i))}function startReads(){let e=0;let t=0;while(_<g&&e<p){const r=_+l>g?g-_:l;singleRead(t,_,r);t+=r;_+=r;++e}}}))}}))}function writeAll(e,t,r,i,s,n,o){const p=typeof o==="function"?o:undefined;e.write(t,r,i,s,n,((o,l)=>{if(o){return e.close(t,(()=>{p&&p(o)}))}if(l===s){e.close(t,p)}else{i+=l;s-=l;n+=l;writeAll(e,t,r,i,s,n,p)}}))}class Stats{constructor(e){this.mode=e&&e.mode;this.uid=e&&e.uid;this.gid=e&&e.gid;this.size=e&&e.size;this.atime=e&&e.atime;this.mtime=e&&e.mtime;this.extended=e&&e.extended}isDirectory(){return(this.mode&n.S_IFMT)===n.S_IFDIR}isFile(){return(this.mode&n.S_IFMT)===n.S_IFREG}isBlockDevice(){return(this.mode&n.S_IFMT)===n.S_IFBLK}isCharacterDevice(){return(this.mode&n.S_IFMT)===n.S_IFCHR}isSymbolicLink(){return(this.mode&n.S_IFMT)===n.S_IFLNK}isFIFO(){return(this.mode&n.S_IFMT)===n.S_IFIFO}isSocket(){return(this.mode&n.S_IFMT)===n.S_IFSOCK}}function attrsToBytes(e){let t=0;let r=0;if(typeof e==="object"&&e!==null){if(typeof e.size==="number"){t|=w.SIZE;const i=e.size;v[r++]=i/72057594037927940;v[r++]=i/281474976710656;v[r++]=i/1099511627776;v[r++]=i/4294967296;v[r++]=i/16777216;v[r++]=i/65536;v[r++]=i/256;v[r++]=i}if(typeof e.uid==="number"&&typeof e.gid==="number"){t|=w.UIDGID;const i=e.uid;const s=e.gid;v[r++]=i>>>24;v[r++]=i>>>16;v[r++]=i>>>8;v[r++]=i;v[r++]=s>>>24;v[r++]=s>>>16;v[r++]=s>>>8;v[r++]=s}if(typeof e.mode==="number"||typeof e.mode==="string"){const i=modeNum(e.mode);t|=w.PERMISSIONS;v[r++]=i>>>24;v[r++]=i>>>16;v[r++]=i>>>8;v[r++]=i}if((typeof e.atime==="number"||u(e.atime))&&(typeof e.mtime==="number"||u(e.mtime))){const i=toUnixTimestamp(e.atime);const s=toUnixTimestamp(e.mtime);t|=w.ACMODTIME;v[r++]=i>>>24;v[r++]=i>>>16;v[r++]=i>>>8;v[r++]=i;v[r++]=s>>>24;v[r++]=s>>>16;v[r++]=s>>>8;v[r++]=s}}return{flags:t,nb:r}}function toUnixTimestamp(e){if(typeof e==="number"&&e===e)return e;if(u(e))return parseInt(e.getTime()/1e3,10);throw new Error(`Cannot parse time: ${e}`)}function modeNum(e){if(typeof e==="number"&&e===e)return e;if(typeof e==="string")return modeNum(parseInt(e,8));throw new Error(`Cannot parse mode: ${e}`)}const x={r:k.READ,"r+":k.READ|k.WRITE,w:k.TRUNC|k.CREAT|k.WRITE,wx:k.TRUNC|k.CREAT|k.WRITE|k.EXCL,xw:k.TRUNC|k.CREAT|k.WRITE|k.EXCL,"w+":k.TRUNC|k.CREAT|k.READ|k.WRITE,"wx+":k.TRUNC|k.CREAT|k.READ|k.WRITE|k.EXCL,"xw+":k.TRUNC|k.CREAT|k.READ|k.WRITE|k.EXCL,a:k.APPEND|k.CREAT|k.WRITE,ax:k.APPEND|k.CREAT|k.WRITE|k.EXCL,xa:k.APPEND|k.CREAT|k.WRITE|k.EXCL,"a+":k.APPEND|k.CREAT|k.READ|k.WRITE,"ax+":k.APPEND|k.CREAT|k.READ|k.WRITE|k.EXCL,"xa+":k.APPEND|k.CREAT|k.READ|k.WRITE|k.EXCL};function stringToFlags(e){const t=x[e];return t!==undefined?t:null}const Q=(()=>{const e=Object.keys(x);return t=>{for(let r=0;r<e.length;++r){const i=e[r];if(x[i]===t)return i}return null}})();function readAttrs(e){const t=L.readUInt32BE();if(t===undefined)return;const r=new Stats;if(t&w.SIZE){const t=L.readUInt64BE(e);if(t===undefined)return;r.size=t}if(t&w.UIDGID){const e=L.readUInt32BE();const t=L.readUInt32BE();if(t===undefined)return;r.uid=e;r.gid=t}if(t&w.PERMISSIONS){const e=L.readUInt32BE();if(e===undefined)return;r.mode=e}if(t&w.ACMODTIME){const e=L.readUInt32BE();const t=L.readUInt32BE();if(t===undefined)return;r.atime=e;r.mtime=t}if(t&w.EXTENDED){const e=L.readUInt32BE();if(e===undefined)return;const t={};for(let r=0;r<e;++r){const e=L.readString(true);const r=L.readString();if(r===undefined)return;t[e]=r}r.extended=t}return r}function sendOrBuffer(e,t){const r=tryWritePayload(e,t);if(r!==undefined){e._buffer.push(r);return false}return true}function tryWritePayload(e,t){const r=e.outgoing;if(r.state!=="open")return;if(r.window===0){e._waitWindow=true;e._chunkcb=drainBuffer;return t}let i;const s=t.length;let n=0;while(s-n>0&&r.window>0){const i=Math.min(s-n,r.window,r.packetSize);r.window-=i;if(r.window===0){e._waitWindow=true;e._chunkcb=drainBuffer}if(n===0&&i===s){e._protocol.channelData(e.outgoing.id,t)}else{e._protocol.channelData(e.outgoing.id,g(t,n,n+i))}n+=i}if(s-n>0){if(n>0)i=g(t,n,s);else i=t}return i}function drainBuffer(){this._chunkcb=undefined;const e=this._buffer;let t=0;while(t<e.length){const r=e[t];const i=tryWritePayload(this,r);if(i!==undefined){if(i!==r)e[t]=i;if(t>0)this._buffer=e.slice(t);return}++t}if(t>0)this._buffer=[]}function doFatalSFTPError(e,t,r){const i=new Error(t);i.level="sftp-protocol";if(!r&&e._debug)e._debug(`SFTP: Inbound: ${t}`);e.emit("error",i);e.destroy();cleanupRequests(e);return false}function cleanupRequests(e){const t=Object.keys(e._requests);if(t.length===0)return;const r=e._requests;e._requests={};const i=new Error("No response from server");for(let e=0;e<t.length;++e){const s=r[t[e]];if(typeof s.cb==="function")s.cb(i)}}function requestLimits(e,t){let r=9;const i=Buffer.allocUnsafe(4+1+4+4+18);E(i,i.length-4,0);i[4]=I.EXTENDED;const s=e._writeReqid=e._writeReqid+1&B;E(i,s,5);E(i,18,r);i.utf8Write("limits@openssh.com",r+=4,18);e._requests[s]={extended:"limits@openssh.com",cb:t};const n=sendOrBuffer(e,i);if(e._debug){const t=n?"Buffered":"Sending";e._debug(`SFTP: Outbound: ${t} limits@openssh.com`)}}const V={[C.VERSION]:(e,t)=>{if(e._version!==-1)return doFatalSFTPError(e,"Duplicate VERSION packet");const r={};L.init(t,1);let i=L.readUInt32BE();while(L.avail()){const e=L.readString(true);const t=L.readString(true);if(t===undefined){i=undefined;break}r[e]=t}L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed VERSION packet");if(e._debug){const t=Object.keys(r);if(t.length){e._debug(`SFTP: Inbound: Received VERSION (v${i}, exts:${t})`)}else{e._debug(`SFTP: Inbound: Received VERSION (v${i})`)}}e._version=i;e._extensions=r;if(r["limits@openssh.com"]==="1"){return requestLimits(e,((t,r)=>{if(!t){if(r.maxPktLen>0)e._maxOutPktLen=r.maxPktLen;if(r.maxReadLen>0)e._maxReadLen=r.maxReadLen;if(r.maxWriteLen>0)e._maxWriteLen=r.maxWriteLen;e.maxOpenHandles=r.maxOpenHandles>0?r.maxOpenHandles:Infinity}e.emit("ready")}))}e.emit("ready")},[C.STATUS]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readUInt32BE();const s=L.readString(true);L.clear();if(e._debug){const t=JSON.stringify(s);e._debug(`SFTP: Inbound: Received STATUS (id:${r}, ${i}, ${t})`)}const n=e._requests[r];delete e._requests[r];if(n&&typeof n.cb==="function"){if(i===b.OK){n.cb();return}const e=new Error(s||T[i]||"Unknown status");e.code=i;n.cb(e)}},[C.HANDLE]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();L.clear();if(i===undefined){if(r!==undefined)delete e._requests[r];return doFatalSFTPError(e,"Malformed HANDLE packet")}e._debug&&e._debug(`SFTP: Inbound: Received HANDLE (id:${r})`);const s=e._requests[r];delete e._requests[r];if(s&&typeof s.cb==="function")s.cb(undefined,i)},[C.DATA]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();let i;if(r!==undefined){i=e._requests[r];delete e._requests[r]}if(i&&typeof i.cb==="function"){if(i.buffer){const t=L.readString(i.buffer);L.clear();if(t!==undefined){e._debug&&e._debug(`SFTP: Inbound: Received DATA (id:${r}, ${t})`);i.cb(undefined,i.buffer,t);return}}else{const t=L.readString();L.clear();if(t!==undefined){e._debug&&e._debug(`SFTP: Inbound: Received DATA (id:${r}, ${t.length})`);i.cb(undefined,t);return}}}else{const t=L.skipString();L.clear();if(t!==undefined){e._debug&&e._debug(`SFTP: Inbound: Received DATA (id:${r}, ${t})`);return}}return doFatalSFTPError(e,"Malformed DATA packet")},[C.NAME]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();let i;if(r!==undefined){i=e._requests[r];delete e._requests[r]}const s=L.readUInt32BE();if(s!==undefined){let t=[];for(let r=0;r<s;++r){const r=L.readString(true);const i=L.readString(true);const s=readAttrs(e._biOpt);if(s===undefined){t=undefined;break}t.push({filename:r,longname:i,attrs:s})}if(t!==undefined){e._debug&&e._debug(`SFTP: Inbound: Received NAME (id:${r}, ${t.length})`);L.clear();if(i&&typeof i.cb==="function")i.cb(undefined,t);return}}L.clear();return doFatalSFTPError(e,"Malformed NAME packet")},[C.ATTRS]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();let i;if(r!==undefined){i=e._requests[r];delete e._requests[r]}const s=readAttrs(e._biOpt);L.clear();if(s!==undefined){e._debug&&e._debug(`SFTP: Inbound: Received ATTRS (id:${r})`);if(i&&typeof i.cb==="function")i.cb(undefined,s);return}return doFatalSFTPError(e,"Malformed ATTRS packet")},[C.EXTENDED]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();if(r!==undefined){const t=e._requests[r];if(t){delete e._requests[r];switch(t.extended){case"statvfs@openssh.com":case"fstatvfs@openssh.com":{const i=e._biOpt;const s={f_bsize:L.readUInt64BE(i),f_frsize:L.readUInt64BE(i),f_blocks:L.readUInt64BE(i),f_bfree:L.readUInt64BE(i),f_bavail:L.readUInt64BE(i),f_files:L.readUInt64BE(i),f_ffree:L.readUInt64BE(i),f_favail:L.readUInt64BE(i),f_sid:L.readUInt64BE(i),f_flag:L.readUInt64BE(i),f_namemax:L.readUInt64BE(i)};if(s.f_namemax===undefined)break;if(e._debug){e._debug("SFTP: Inbound: Received EXTENDED_REPLY "+`(id:${r}, ${t.extended})`)}L.clear();if(typeof t.cb==="function")t.cb(undefined,s);return}case"limits@openssh.com":{const i={maxPktLen:L.readUInt64BE(),maxReadLen:L.readUInt64BE(),maxWriteLen:L.readUInt64BE(),maxOpenHandles:L.readUInt64BE()};if(i.maxOpenHandles===undefined)break;if(e._debug){e._debug("SFTP: Inbound: Received EXTENDED_REPLY "+`(id:${r}, ${t.extended})`)}L.clear();if(typeof t.cb==="function")t.cb(undefined,i);return}default:e._debug&&e._debug(`SFTP: Inbound: Received EXTENDED_REPLY (id:${r}, ???)`);L.clear();if(typeof t.cb==="function")t.cb();return}}else{e._debug&&e._debug(`SFTP: Inbound: Received EXTENDED_REPLY (id:${r}, ???)`);L.clear();return}}L.clear();return doFatalSFTPError(e,"Malformed EXTENDED_REPLY packet")}};const q={[I.INIT]:(e,t)=>{if(e._version!==-1)return doFatalSFTPError(e,"Duplicate INIT packet");const r={};L.init(t,1);let i=L.readUInt32BE();while(L.avail()){const e=L.readString(true);const t=L.readString(true);if(t===undefined){i=undefined;break}r[e]=t}L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed INIT packet");if(e._debug){const t=Object.keys(r);if(t.length){e._debug(`SFTP: Inbound: Received INIT (v${i}, exts:${t})`)}else{e._debug(`SFTP: Inbound: Received INIT (v${i})`)}}sendOrBuffer(e,O);e._version=i;e._extensions=r;e.emit("ready")},[I.OPEN]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);const s=L.readUInt32BE();const n=readAttrs(e._biOpt);L.clear();if(n===undefined)return doFatalSFTPError(e,"Malformed OPEN packet");e._debug&&e._debug(`SFTP: Inbound: Received OPEN (id:${r})`);if(!e.emit("OPEN",r,i,s,n)){e.status(r,b.OP_UNSUPPORTED)}},[I.CLOSE]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();L.clear();if(i===undefined||i.length>256)return doFatalSFTPError(e,"Malformed CLOSE packet");e._debug&&e._debug(`SFTP: Inbound: Received CLOSE (id:${r})`);if(!e.emit("CLOSE",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.READ]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();const s=L.readUInt64BE(e._biOpt);const n=L.readUInt32BE();L.clear();if(n===undefined||i.length>256)return doFatalSFTPError(e,"Malformed READ packet");e._debug&&e._debug(`SFTP: Inbound: Received READ (id:${r})`);if(!e.emit("READ",r,i,s,n)){e.status(r,b.OP_UNSUPPORTED)}},[I.WRITE]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();const s=L.readUInt64BE(e._biOpt);const n=L.readString();L.clear();if(n===undefined||i.length>256)return doFatalSFTPError(e,"Malformed WRITE packet");e._debug&&e._debug(`SFTP: Inbound: Received WRITE (id:${r})`);if(!e.emit("WRITE",r,i,s,n)){e.status(r,b.OP_UNSUPPORTED)}},[I.LSTAT]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed LSTAT packet");e._debug&&e._debug(`SFTP: Inbound: Received LSTAT (id:${r})`);if(!e.emit("LSTAT",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.FSTAT]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();L.clear();if(i===undefined||i.length>256)return doFatalSFTPError(e,"Malformed FSTAT packet");e._debug&&e._debug(`SFTP: Inbound: Received FSTAT (id:${r})`);if(!e.emit("FSTAT",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.SETSTAT]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);const s=readAttrs(e._biOpt);L.clear();if(s===undefined)return doFatalSFTPError(e,"Malformed SETSTAT packet");e._debug&&e._debug(`SFTP: Inbound: Received SETSTAT (id:${r})`);if(!e.emit("SETSTAT",r,i,s)){e.status(r,b.OP_UNSUPPORTED)}},[I.FSETSTAT]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();const s=readAttrs(e._biOpt);L.clear();if(s===undefined||i.length>256)return doFatalSFTPError(e,"Malformed FSETSTAT packet");e._debug&&e._debug(`SFTP: Inbound: Received FSETSTAT (id:${r})`);if(!e.emit("FSETSTAT",r,i,s)){e.status(r,b.OP_UNSUPPORTED)}},[I.OPENDIR]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed OPENDIR packet");e._debug&&e._debug(`SFTP: Inbound: Received OPENDIR (id:${r})`);if(!e.emit("OPENDIR",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.READDIR]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString();L.clear();if(i===undefined||i.length>256)return doFatalSFTPError(e,"Malformed READDIR packet");e._debug&&e._debug(`SFTP: Inbound: Received READDIR (id:${r})`);if(!e.emit("READDIR",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.REMOVE]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed REMOVE packet");e._debug&&e._debug(`SFTP: Inbound: Received REMOVE (id:${r})`);if(!e.emit("REMOVE",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.MKDIR]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);const s=readAttrs(e._biOpt);L.clear();if(s===undefined)return doFatalSFTPError(e,"Malformed MKDIR packet");e._debug&&e._debug(`SFTP: Inbound: Received MKDIR (id:${r})`);if(!e.emit("MKDIR",r,i,s)){e.status(r,b.OP_UNSUPPORTED)}},[I.RMDIR]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed RMDIR packet");e._debug&&e._debug(`SFTP: Inbound: Received RMDIR (id:${r})`);if(!e.emit("RMDIR",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.REALPATH]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed REALPATH packet");e._debug&&e._debug(`SFTP: Inbound: Received REALPATH (id:${r})`);if(!e.emit("REALPATH",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.STAT]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed STAT packet");e._debug&&e._debug(`SFTP: Inbound: Received STAT (id:${r})`);if(!e.emit("STAT",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.RENAME]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);const s=L.readString(true);L.clear();if(s===undefined)return doFatalSFTPError(e,"Malformed RENAME packet");e._debug&&e._debug(`SFTP: Inbound: Received RENAME (id:${r})`);if(!e.emit("RENAME",r,i,s)){e.status(r,b.OP_UNSUPPORTED)}},[I.READLINK]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);L.clear();if(i===undefined)return doFatalSFTPError(e,"Malformed READLINK packet");e._debug&&e._debug(`SFTP: Inbound: Received READLINK (id:${r})`);if(!e.emit("READLINK",r,i)){e.status(r,b.OP_UNSUPPORTED)}},[I.SYMLINK]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);const s=L.readString(true);L.clear();if(s===undefined)return doFatalSFTPError(e,"Malformed SYMLINK packet");e._debug&&e._debug(`SFTP: Inbound: Received SYMLINK (id:${r})`);let n;if(e._isOpenSSH){n=e.emit("SYMLINK",r,s,i)}else{n=e.emit("SYMLINK",r,i,s)}if(!n){e.status(r,b.OP_UNSUPPORTED)}},[I.EXTENDED]:(e,t)=>{L.init(t,1);const r=L.readUInt32BE();const i=L.readString(true);if(i===undefined){L.clear();return doFatalSFTPError(e,"Malformed EXTENDED packet")}let s;if(L.avail())s=L.readRaw();L.clear();e._debug&&e._debug(`SFTP: Inbound: Received EXTENDED (id:${r})`);if(!e.emit("EXTENDED",r,i,s)){e.status(r,b.OP_UNSUPPORTED)}}};const{ERR_INVALID_ARG_TYPE:W,ERR_OUT_OF_RANGE:j,validateNumber:$}=r(7609);const Y=128;let z;const J=[];function allocNewPool(e){if(J.length>0)z=J.pop();else z=Buffer.allocUnsafe(e);z.used=0}function checkPosition(e,t){if(!Number.isSafeInteger(e)){$(e,t);if(!Number.isInteger(e))throw new j(t,"an integer",e);throw new j(t,">= 0 and <= 2 ** 53 - 1",e)}if(e<0)throw new j(t,">= 0 and <= 2 ** 53 - 1",e)}function roundUpToMultipleOf8(e){return e+7&~7}function ReadStream(e,t,r){if(r===undefined)r={};else if(typeof r==="string")r={encoding:r};else if(r===null||typeof r!=="object")throw new TypeError('"options" argument must be a string or an object');else r=Object.create(r);if(r.highWaterMark===undefined)r.highWaterMark=64*1024;r.emitClose=false;r.autoDestroy=false;o.call(this,r);this.path=t;this.flags=r.flags===undefined?"r":r.flags;this.mode=r.mode===undefined?438:r.mode;this.start=r.start;this.end=r.end;this.autoClose=r.autoClose===undefined?true:r.autoClose;this.pos=0;this.bytesRead=0;this.isClosed=false;this.handle=r.handle===undefined?null:r.handle;this.sftp=e;this._opening=false;if(this.start!==undefined){checkPosition(this.start,"start");this.pos=this.start}if(this.end===undefined){this.end=Infinity}else if(this.end!==Infinity){checkPosition(this.end,"end");if(this.start!==undefined&&this.start>this.end){throw new j("start",`<= "end" (here: ${this.end})`,this.start)}}this.on("end",(function(){if(this.autoClose)this.destroy()}));if(!Buffer.isBuffer(this.handle))this.open()}l(ReadStream,o);ReadStream.prototype.open=function(){if(this._opening)return;this._opening=true;this.sftp.open(this.path,this.flags,this.mode,((e,t)=>{this._opening=false;if(e){this.emit("error",e);if(this.autoClose)this.destroy();return}this.handle=t;this.emit("open",t);this.emit("ready");this.read()}))};ReadStream.prototype._read=function(e){if(!Buffer.isBuffer(this.handle))return this.once("open",(()=>this._read(e)));if(this.destroyed)return;if(!z||z.length-z.used<Y){allocNewPool(this.readableHighWaterMark||this._readableState.highWaterMark)}const t=z;let r=Math.min(z.length-z.used,e);const i=z.used;if(this.end!==undefined)r=Math.min(this.end-this.pos+1,r);if(r<=0)return this.push(null);this.sftp.read(this.handle,z,z.used,r,this.pos,((e,s)=>{if(e){this.emit("error",e);if(this.autoClose)this.destroy();return}let n=null;if(i+r===t.used&&t===z){t.used=roundUpToMultipleOf8(t.used+s-r)}else{const e=i+r&~7;const n=roundUpToMultipleOf8(i+s);if(e-n>=Y)J.push(t.slice(n,e))}if(s>0){this.bytesRead+=s;n=t.slice(i,i+s)}this.pos+=s;this.push(n)}));z.used=roundUpToMultipleOf8(z.used+r)};ReadStream.prototype._destroy=function(e,t){if(this._opening&&!Buffer.isBuffer(this.handle)){this.once("open",closeStream.bind(null,this,t,e));return}closeStream(this,t,e);this.handle=null;this._opening=false};function closeStream(e,t,r){if(!e.handle)return onclose();e.sftp.close(e.handle,onclose);function onclose(i){i=i||r;t(i);e.isClosed=true;if(!i)e.emit("close")}}ReadStream.prototype.close=function(e){this.destroy(null,e)};Object.defineProperty(ReadStream.prototype,"pending",{get(){return this.handle===null},configurable:true});function WriteStream(e,t,r){if(r===undefined)r={};else if(typeof r==="string")r={encoding:r};else if(r===null||typeof r!=="object")throw new TypeError('"options" argument must be a string or an object');else r=Object.create(r);r.emitClose=false;r.autoDestroy=false;p.call(this,r);this.path=t;this.flags=r.flags===undefined?"w":r.flags;this.mode=r.mode===undefined?438:r.mode;this.start=r.start;this.autoClose=r.autoClose===undefined?true:r.autoClose;this.pos=0;this.bytesWritten=0;this.isClosed=false;this.handle=r.handle===undefined?null:r.handle;this.sftp=e;this._opening=false;if(this.start!==undefined){checkPosition(this.start,"start");this.pos=this.start}if(r.encoding)this.setDefaultEncoding(r.encoding);this.on("finish",(function(){if(this._writableState.finalCalled)return;if(this.autoClose)this.destroy()}));if(!Buffer.isBuffer(this.handle))this.open()}l(WriteStream,p);WriteStream.prototype._final=function(e){if(this.autoClose)this.destroy();e()};WriteStream.prototype.open=function(){if(this._opening)return;this._opening=true;this.sftp.open(this.path,this.flags,this.mode,((e,t)=>{this._opening=false;if(e){this.emit("error",e);if(this.autoClose)this.destroy();return}this.handle=t;const tryAgain=e=>{if(e){this.sftp.chmod(this.path,this.mode,(e=>tryAgain()));return}if(this.flags[0]==="a"){const tryStat=(e,r)=>{if(e){this.sftp.stat(this.path,((t,r)=>{if(t){this.destroy();this.emit("error",e);return}tryStat(null,r)}));return}this.pos=r.size;this.emit("open",t);this.emit("ready")};this.sftp.fstat(t,tryStat);return}this.emit("open",t);this.emit("ready")};this.sftp.fchmod(t,this.mode,tryAgain)}))};WriteStream.prototype._write=function(e,t,r){if(!Buffer.isBuffer(e)){const t=new W("data","Buffer",e);return this.emit("error",t)}if(!Buffer.isBuffer(this.handle)){return this.once("open",(function(){this._write(e,t,r)}))}this.sftp.write(this.handle,e,0,e.length,this.pos,((e,t)=>{if(e){if(this.autoClose)this.destroy();return r(e)}this.bytesWritten+=t;r()}));this.pos+=e.length};WriteStream.prototype._writev=function(e,t){if(!Buffer.isBuffer(this.handle)){return this.once("open",(function(){this._writev(e,t)}))}const r=this.sftp;const i=this.handle;let s=e.length;const onwrite=(e,r)=>{if(e){this.destroy();return t(e)}this.bytesWritten+=r;if(--s===0)t()};for(let t=0;t<e.length;++t){const s=e[t].chunk;r.write(i,s,0,s.length,this.pos,onwrite);this.pos+=s.length}};if(typeof p.prototype.destroy!=="function")WriteStream.prototype.destroy=ReadStream.prototype.destroy;WriteStream.prototype._destroy=ReadStream.prototype._destroy;WriteStream.prototype.close=function(e){if(e){if(this.isClosed){process.nextTick(e);return}this.on("close",e)}if(!this.autoClose)this.on("finish",this.destroy.bind(this));this.end()};WriteStream.prototype.destroySoon=WriteStream.prototype.end;Object.defineProperty(WriteStream.prototype,"pending",{get(){return this.handle===null},configurable:true});e.exports={flagsToString:Q,OPEN_MODE:k,SFTP:SFTP,Stats:Stats,STATUS_CODE:b,stringToFlags:stringToFlags}},6832:(e,t,r)=>{"use strict";const i=r(6113);let s;try{s=r(4137)()}catch{}const{bindingAvailable:n,CIPHER_INFO:o,MAC_INFO:p}=r(5708);const l=(()=>{if(typeof i.sign==="function"&&typeof i.verify==="function"){const e="-----BEGIN PRIVATE KEY-----\r\nMC4CAQAwBQYDK2VwBCIEIHKj+sVa9WcD"+"/q2DJUJaf43Kptc8xYuUQA4bOFj9vC8T\r\n-----END PRIVATE KEY-----";const t=Buffer.from("a");let r;let s;try{r=i.sign(null,t,e);s=i.verify(null,t,e,r)}catch{}return Buffer.isBuffer(r)&&r.length===64&&s===true}return false})();const u=typeof i.diffieHellman==="function"&&typeof i.generateKeyPairSync==="function"&&typeof i.createPublicKey==="function";const m=["ecdh-sha2-nistp256","ecdh-sha2-nistp384","ecdh-sha2-nistp521","diffie-hellman-group-exchange-sha256","diffie-hellman-group14-sha256","diffie-hellman-group15-sha512","diffie-hellman-group16-sha512","diffie-hellman-group17-sha512","diffie-hellman-group18-sha512"];if(u){m.unshift("curve25519-sha256");m.unshift("curve25519-sha256@libssh.org")}const h=m.concat(["diffie-hellman-group-exchange-sha1","diffie-hellman-group14-sha1","diffie-hellman-group1-sha1"]);const g=["ecdsa-sha2-nistp256","ecdsa-sha2-nistp384","ecdsa-sha2-nistp521","rsa-sha2-512","rsa-sha2-256","ssh-rsa"];if(l)g.unshift("ssh-ed25519");const _=g.concat(["ssh-dss"]);const E=(()=>{const e=i.getCiphers();return t=>e.includes(o[t].sslName)})();let w=["aes128-gcm@openssh.com","aes256-gcm@openssh.com","aes128-ctr","aes192-ctr","aes256-ctr"];if(s&&s.flags&&!s.flags.aes){if(n)w.unshift("chacha20-poly1305@openssh.com");else w.push("chacha20-poly1305@openssh.com")}else if(n&&s&&s.arch==="x86"){w.splice(4,0,"chacha20-poly1305@openssh.com")}else{w.push("chacha20-poly1305@openssh.com")}w=w.filter(E);const v=w.concat(["aes256-cbc","aes192-cbc","aes128-cbc","blowfish-cbc","3des-cbc","aes128-gcm","aes256-gcm","arcfour256","arcfour128","cast128-cbc","arcfour"].filter(E));const b=(()=>{const e=i.getHashes();return t=>e.includes(p[t].sslName)})();const y=["hmac-sha2-256-etm@openssh.com","hmac-sha2-512-etm@openssh.com","hmac-sha1-etm@openssh.com","hmac-sha2-256","hmac-sha2-512","hmac-sha1"].filter(b);const T=y.concat(["hmac-md5","hmac-sha2-256-96","hmac-sha2-512-96","hmac-ripemd160","hmac-sha1-96","hmac-md5-96"].filter(b));const I=["none","zlib@openssh.com","zlib"];const C=I.concat([]);const k={BAD_DHGEX:1<<0,OLD_EXIT:1<<1,DYN_RPORT_BUG:1<<2,BUG_DHGEX_LARGE:1<<3};e.exports={MESSAGE:{DISCONNECT:1,IGNORE:2,UNIMPLEMENTED:3,DEBUG:4,SERVICE_REQUEST:5,SERVICE_ACCEPT:6,KEXINIT:20,NEWKEYS:21,KEXDH_INIT:30,KEXDH_REPLY:31,KEXDH_GEX_GROUP:31,KEXDH_GEX_INIT:32,KEXDH_GEX_REPLY:33,KEXDH_GEX_REQUEST:34,KEXECDH_INIT:30,KEXECDH_REPLY:31,USERAUTH_REQUEST:50,USERAUTH_FAILURE:51,USERAUTH_SUCCESS:52,USERAUTH_BANNER:53,USERAUTH_PASSWD_CHANGEREQ:60,USERAUTH_PK_OK:60,USERAUTH_INFO_REQUEST:60,USERAUTH_INFO_RESPONSE:61,GLOBAL_REQUEST:80,REQUEST_SUCCESS:81,REQUEST_FAILURE:82,CHANNEL_OPEN:90,CHANNEL_OPEN_CONFIRMATION:91,CHANNEL_OPEN_FAILURE:92,CHANNEL_WINDOW_ADJUST:93,CHANNEL_DATA:94,CHANNEL_EXTENDED_DATA:95,CHANNEL_EOF:96,CHANNEL_CLOSE:97,CHANNEL_REQUEST:98,CHANNEL_SUCCESS:99,CHANNEL_FAILURE:100},DISCONNECT_REASON:{HOST_NOT_ALLOWED_TO_CONNECT:1,PROTOCOL_ERROR:2,KEY_EXCHANGE_FAILED:3,RESERVED:4,MAC_ERROR:5,COMPRESSION_ERROR:6,SERVICE_NOT_AVAILABLE:7,PROTOCOL_VERSION_NOT_SUPPORTED:8,HOST_KEY_NOT_VERIFIABLE:9,CONNECTION_LOST:10,BY_APPLICATION:11,TOO_MANY_CONNECTIONS:12,AUTH_CANCELED_BY_USER:13,NO_MORE_AUTH_METHODS_AVAILABLE:14,ILLEGAL_USER_NAME:15},DISCONNECT_REASON_STR:undefined,CHANNEL_OPEN_FAILURE:{ADMINISTRATIVELY_PROHIBITED:1,CONNECT_FAILED:2,UNKNOWN_CHANNEL_TYPE:3,RESOURCE_SHORTAGE:4},TERMINAL_MODE:{TTY_OP_END:0,VINTR:1,VQUIT:2,VERASE:3,VKILL:4,VEOF:5,VEOL:6,VEOL2:7,VSTART:8,VSTOP:9,VSUSP:10,VDSUSP:11,VREPRINT:12,VWERASE:13,VLNEXT:14,VFLUSH:15,VSWTCH:16,VSTATUS:17,VDISCARD:18,IGNPAR:30,PARMRK:31,INPCK:32,ISTRIP:33,INLCR:34,IGNCR:35,ICRNL:36,IUCLC:37,IXON:38,IXANY:39,IXOFF:40,IMAXBEL:41,ISIG:50,ICANON:51,XCASE:52,ECHO:53,ECHOE:54,ECHOK:55,ECHONL:56,NOFLSH:57,TOSTOP:58,IEXTEN:59,ECHOCTL:60,ECHOKE:61,PENDIN:62,OPOST:70,OLCUC:71,ONLCR:72,OCRNL:73,ONOCR:74,ONLRET:75,CS7:90,CS8:91,PARENB:92,PARODD:93,TTY_OP_ISPEED:128,TTY_OP_OSPEED:129},CHANNEL_EXTENDED_DATATYPE:{STDERR:1},SIGNALS:["ABRT","ALRM","FPE","HUP","ILL","INT","QUIT","SEGV","TERM","USR1","USR2","KILL","PIPE"].reduce(((e,t)=>({...e,[t]:1})),{}),COMPAT:k,COMPAT_CHECKS:[["Cisco-1.25",k.BAD_DHGEX],[/^Cisco-1\./,k.BUG_DHGEX_LARGE],[/^[0-9.]+$/,k.OLD_EXIT],[/^OpenSSH_5\.\d+/,k.DYN_RPORT_BUG]],DEFAULT_KEX:m,SUPPORTED_KEX:h,DEFAULT_SERVER_HOST_KEY:g,SUPPORTED_SERVER_HOST_KEY:_,DEFAULT_CIPHER:w,SUPPORTED_CIPHER:v,DEFAULT_MAC:y,SUPPORTED_MAC:T,DEFAULT_COMPRESSION:I,SUPPORTED_COMPRESSION:C,curve25519Supported:u,eddsaSupported:l};e.exports.DISCONNECT_REASON_BY_VALUE=Array.from(Object.entries(e.exports.DISCONNECT_REASON)).reduce(((e,[t,r])=>({...e,[r]:t})),{})},5708:(e,t,r)=>{"use strict";const{createCipheriv:i,createDecipheriv:s,createHmac:n,randomFillSync:o,timingSafeEqual:p}=r(6113);const{readUInt32BE:l,writeUInt32BE:u}=r(9475);const m=Buffer[Symbol.species];const h=2**32-1;const g=Buffer.alloc(0);const _=Buffer.alloc(4);const E=new Map;const w=35e3;let v;let b;let y;let T;let I;let C;let k;try{v=r(9041);({AESGCMCipher:b,ChaChaPolyCipher:y,GenericCipher:T,AESGCMDecipher:I,ChaChaPolyDecipher:C,GenericDecipher:k}=v)}catch{}const R=1<<0;const B=(()=>{function info(e,t,r,i,s,n,o){return{sslName:e,blockLen:t,keyLen:r,ivLen:i!==0||o&R?i:t,authLen:s,discardLen:n,stream:!!(o&R)}}return{"chacha20-poly1305@openssh.com":info("chacha20",8,64,0,16,0,R),"aes128-gcm":info("aes-128-gcm",16,16,12,16,0,R),"aes256-gcm":info("aes-256-gcm",16,32,12,16,0,R),"aes128-gcm@openssh.com":info("aes-128-gcm",16,16,12,16,0,R),"aes256-gcm@openssh.com":info("aes-256-gcm",16,32,12,16,0,R),"aes128-cbc":info("aes-128-cbc",16,16,0,0,0,0),"aes192-cbc":info("aes-192-cbc",16,24,0,0,0,0),"aes256-cbc":info("aes-256-cbc",16,32,0,0,0,0),"rijndael-cbc@lysator.liu.se":info("aes-256-cbc",16,32,0,0,0,0),"3des-cbc":info("des-ede3-cbc",8,24,0,0,0,0),"blowfish-cbc":info("bf-cbc",8,16,0,0,0,0),"idea-cbc":info("idea-cbc",8,16,0,0,0,0),"cast128-cbc":info("cast-cbc",8,16,0,0,0,0),"aes128-ctr":info("aes-128-ctr",16,16,16,0,0,R),"aes192-ctr":info("aes-192-ctr",16,24,16,0,0,R),"aes256-ctr":info("aes-256-ctr",16,32,16,0,0,R),"3des-ctr":info("des-ede3",8,24,8,0,0,R),"blowfish-ctr":info("bf-ecb",8,16,8,0,0,R),"cast128-ctr":info("cast5-ecb",8,16,8,0,0,R),arcfour:info("rc4",8,16,0,0,1536,R),arcfour128:info("rc4",8,16,0,0,1536,R),arcfour256:info("rc4",8,32,0,0,1536,R),arcfour512:info("rc4",8,64,0,0,1536,R)}})();const P=(()=>{function info(e,t,r,i){return{sslName:e,len:t,actualLen:r,isETM:i}}return{"hmac-md5":info("md5",16,16,false),"hmac-md5-96":info("md5",16,12,false),"hmac-ripemd160":info("ripemd160",20,20,false),"hmac-sha1":info("sha1",20,20,false),"hmac-sha1-etm@openssh.com":info("sha1",20,20,true),"hmac-sha1-96":info("sha1",20,12,false),"hmac-sha2-256":info("sha256",32,32,false),"hmac-sha2-256-etm@openssh.com":info("sha256",32,32,true),"hmac-sha2-256-96":info("sha256",32,12,false),"hmac-sha2-512":info("sha512",64,64,false),"hmac-sha2-512-etm@openssh.com":info("sha512",64,64,true),"hmac-sha2-512-96":info("sha512",64,12,false)}})();class NullCipher{constructor(e,t){this.outSeqno=e;this._onWrite=t;this._dead=false}free(){this._dead=true}allocPacket(e){let t=4+1+e;let r=8-(t&8-1);if(r<4)r+=8;t+=r;const i=Buffer.allocUnsafe(t);u(i,t-4,0);i[4]=r;o(i,5+e,r);return i}encrypt(e){if(this._dead)return;this._onWrite(e);this.outSeqno=this.outSeqno+1>>>0}}const O=Buffer.alloc(32);const D=Buffer.alloc(16);let U;let L;let G;class ChaChaPolyCipherNative{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._encKeyMain=t.cipherKey.slice(0,32);this._encKeyPktLen=t.cipherKey.slice(32);this._dead=false}free(){this._dead=true}allocPacket(e){let t=4+1+e;let r=8-(t-4&8-1);if(r<4)r+=8;t+=r;const i=Buffer.allocUnsafe(t);u(i,t-4,0);i[4]=r;o(i,5+e,r);return i}encrypt(e){if(this._dead)return;D[0]=0;u(D,this.outSeqno,12);const t=i("chacha20",this._encKeyMain,D).update(O);const r=i("chacha20",this._encKeyPktLen,D).update(e.slice(0,4));this._onWrite(r);D[0]=1;const s=i("chacha20",this._encKeyMain,D).update(e.slice(4));this._onWrite(s);G(L,r,r.length,s,s.length,t);const n=Buffer.allocUnsafe(16);n.set(new Uint8Array(U.HEAPU8.buffer,L,16),0);this._onWrite(n);this.outSeqno=this.outSeqno+1>>>0}}class ChaChaPolyCipherBinding{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._instance=new y(t.cipherKey);this._dead=false}free(){this._dead=true;this._instance.free()}allocPacket(e){let t=4+1+e;let r=8-(t-4&8-1);if(r<4)r+=8;t+=r;const i=Buffer.allocUnsafe(t+16);u(i,t-4,0);i[4]=r;o(i,5+e,r);return i}encrypt(e){if(this._dead)return;this._instance.encrypt(e,this.outSeqno);this._onWrite(e);this.outSeqno=this.outSeqno+1>>>0}}class AESGCMCipherNative{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._encSSLName=t.cipherInfo.sslName;this._encKey=t.cipherKey;this._encIV=t.cipherIV;this._dead=false}free(){this._dead=true}allocPacket(e){let t=4+1+e;let r=16-(t-4&16-1);if(r<4)r+=16;t+=r;const i=Buffer.allocUnsafe(t);u(i,t-4,0);i[4]=r;o(i,5+e,r);return i}encrypt(e){if(this._dead)return;const t=i(this._encSSLName,this._encKey,this._encIV);t.setAutoPadding(false);const r=e.slice(0,4);t.setAAD(r);this._onWrite(r);const s=t.update(e.slice(4));this._onWrite(s);const n=t.final();if(n.length)this._onWrite(n);const o=t.getAuthTag();this._onWrite(o);ivIncrement(this._encIV);this.outSeqno=this.outSeqno+1>>>0}}class AESGCMCipherBinding{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._instance=new b(t.cipherInfo.sslName,t.cipherKey,t.cipherIV);this._dead=false}free(){this._dead=true;this._instance.free()}allocPacket(e){let t=4+1+e;let r=16-(t-4&16-1);if(r<4)r+=16;t+=r;const i=Buffer.allocUnsafe(t+16);u(i,t-4,0);i[4]=r;o(i,5+e,r);return i}encrypt(e){if(this._dead)return;this._instance.encrypt(e);this._onWrite(e);this.outSeqno=this.outSeqno+1>>>0}}class GenericCipherNative{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._encBlockLen=t.cipherInfo.blockLen;this._cipherInstance=i(t.cipherInfo.sslName,t.cipherKey,t.cipherIV);this._macSSLName=t.macInfo.sslName;this._macKey=t.macKey;this._macActualLen=t.macInfo.actualLen;this._macETM=t.macInfo.isETM;this._aadLen=this._macETM?4:0;this._dead=false;const r=t.cipherInfo.discardLen;if(r){let e=E.get(r);if(e===undefined){e=Buffer.alloc(r);E.set(r,e)}this._cipherInstance.update(e)}}free(){this._dead=true}allocPacket(e){const t=this._encBlockLen;let r=4+1+e;let i=t-(r-this._aadLen&t-1);if(i<4)i+=t;r+=i;const s=Buffer.allocUnsafe(r);u(s,r-4,0);s[4]=i;o(s,5+e,i);return s}encrypt(e){if(this._dead)return;let t;if(this._macETM){const r=new Uint8Array(e.buffer,e.byteOffset,4);const i=this._cipherInstance.update(new Uint8Array(e.buffer,e.byteOffset+4,e.length-4));this._onWrite(r);this._onWrite(i);t=n(this._macSSLName,this._macKey);u(_,this.outSeqno,0);t.update(_);t.update(r);t.update(i)}else{const r=this._cipherInstance.update(e);this._onWrite(r);t=n(this._macSSLName,this._macKey);u(_,this.outSeqno,0);t.update(_);t.update(e)}let r=t.digest();if(r.length>this._macActualLen)r=r.slice(0,this._macActualLen);this._onWrite(r);this.outSeqno=this.outSeqno+1>>>0}}class GenericCipherBinding{constructor(e){const t=e.outbound;this.outSeqno=t.seqno;this._onWrite=t.onWrite;this._encBlockLen=t.cipherInfo.blockLen;this._macLen=t.macInfo.len;this._macActualLen=t.macInfo.actualLen;this._aadLen=t.macInfo.isETM?4:0;this._instance=new T(t.cipherInfo.sslName,t.cipherKey,t.cipherIV,t.macInfo.sslName,t.macKey,t.macInfo.isETM);this._dead=false}free(){this._dead=true;this._instance.free()}allocPacket(e){const t=this._encBlockLen;let r=4+1+e;let i=t-(r-this._aadLen&t-1);if(i<4)i+=t;r+=i;const s=Buffer.allocUnsafe(r+this._macLen);u(s,r-4,0);s[4]=i;o(s,5+e,i);return s}encrypt(e){if(this._dead)return;this._instance.encrypt(e,this.outSeqno);if(this._macActualLen<this._macLen){e=new m(e.buffer,e.byteOffset,e.length-(this._macLen-this._macActualLen))}this._onWrite(e);this.outSeqno=this.outSeqno+1>>>0}}class NullDecipher{constructor(e,t){this.inSeqno=e;this._onPayload=t;this._len=0;this._lenBytes=0;this._packet=null;this._packetPos=0}free(){}decrypt(e,t,r){while(t<r){if(this._lenBytes<4){let i=Math.min(4-this._lenBytes,r-t);this._lenBytes+=i;while(i--)this._len=(this._len<<8)+e[t++];if(this._lenBytes<4)return;if(this._len>w||this._len<8||(4+this._len&7)!==0){throw new Error("Bad packet length")}if(t>=r)return}if(this._packetPos<this._len){const i=Math.min(this._len-this._packetPos,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._packetPos)}t+=i;this._packetPos+=i;if(this._packetPos<this._len)return}const i=!this._packet?g:new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._len=0;this._lenBytes=0;this._packet=null;this._packetPos=0;{const e=this._onPayload(i);if(e!==undefined)return e===false?t:e}}}}class ChaChaPolyDecipherNative{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._decKeyMain=t.decipherKey.slice(0,32);this._decKeyPktLen=t.decipherKey.slice(32);this._len=0;this._lenBuf=Buffer.alloc(4);this._lenPos=0;this._packet=null;this._pktLen=0;this._mac=Buffer.allocUnsafe(16);this._calcMac=Buffer.allocUnsafe(16);this._macPos=0}free(){}decrypt(e,t,r){while(t<r){if(this._lenPos<4){let i=Math.min(4-this._lenPos,r-t);while(i--)this._lenBuf[this._lenPos++]=e[t++];if(this._lenPos<4)return;D[0]=0;u(D,this.inSeqno,12);const n=s("chacha20",this._decKeyPktLen,D).update(this._lenBuf);this._len=l(n,0);if(this._len>w||this._len<8||(this._len&7)!==0){throw new Error("Bad packet length")}}if(this._pktLen<this._len){if(t>=r)return;const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._pktLen)}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(16-this._macPos,r-t);if(t!==0||i!==r){this._mac.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._macPos)}else{this._mac.set(e,this._macPos)}t+=i;this._macPos+=i;if(this._macPos<16)return}D[0]=0;u(D,this.inSeqno,12);const n=i("chacha20",this._decKeyMain,D).update(O);G(L,this._lenBuf,4,this._packet,this._packet.length,n);this._calcMac.set(new Uint8Array(U.HEAPU8.buffer,L,16),0);if(!p(this._calcMac,this._mac))throw new Error("Invalid MAC");D[0]=1;const o=s("chacha20",this._decKeyMain,D).update(this._packet);const h=new m(o.buffer,o.byteOffset+1,o.length-o[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._len=0;this._lenPos=0;this._packet=null;this._pktLen=0;this._macPos=0;{const e=this._onPayload(h);if(e!==undefined)return e===false?t:e}}}}class ChaChaPolyDecipherBinding{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._instance=new C(t.decipherKey);this._len=0;this._lenBuf=Buffer.alloc(4);this._lenPos=0;this._packet=null;this._pktLen=0;this._mac=Buffer.allocUnsafe(16);this._macPos=0}free(){this._instance.free()}decrypt(e,t,r){while(t<r){if(this._lenPos<4){let i=Math.min(4-this._lenPos,r-t);while(i--)this._lenBuf[this._lenPos++]=e[t++];if(this._lenPos<4)return;this._len=this._instance.decryptLen(this._lenBuf,this.inSeqno);if(this._len>w||this._len<8||(this._len&7)!==0){throw new Error("Bad packet length")}if(t>=r)return}if(this._pktLen<this._len){const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._pktLen)}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(16-this._macPos,r-t);if(t!==0||i!==r){this._mac.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._macPos)}else{this._mac.set(e,this._macPos)}t+=i;this._macPos+=i;if(this._macPos<16)return}this._instance.decrypt(this._packet,this._mac,this.inSeqno);const i=new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._len=0;this._lenPos=0;this._packet=null;this._pktLen=0;this._macPos=0;{const e=this._onPayload(i);if(e!==undefined)return e===false?t:e}}}}class AESGCMDecipherNative{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._decipherInstance=null;this._decipherSSLName=t.decipherInfo.sslName;this._decipherKey=t.decipherKey;this._decipherIV=t.decipherIV;this._len=0;this._lenBytes=0;this._packet=null;this._packetPos=0;this._pktLen=0;this._tag=Buffer.allocUnsafe(16);this._tagPos=0}free(){}decrypt(e,t,r){while(t<r){if(this._lenBytes<4){let i=Math.min(4-this._lenBytes,r-t);this._lenBytes+=i;while(i--)this._len=(this._len<<8)+e[t++];if(this._lenBytes<4)return;if(this._len+20>w||this._len<16||(this._len&15)!==0){throw new Error("Bad packet length")}this._decipherInstance=s(this._decipherSSLName,this._decipherKey,this._decipherIV);this._decipherInstance.setAutoPadding(false);this._decipherInstance.setAAD(x(this._len))}if(this._pktLen<this._len){if(t>=r)return;const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r){s=this._decipherInstance.update(new Uint8Array(e.buffer,e.byteOffset+t,i))}else{s=this._decipherInstance.update(e)}if(s.length){if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._packetPos)}this._packetPos+=s.length}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(16-this._tagPos,r-t);if(t!==0||i!==r){this._tag.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._tagPos)}else{this._tag.set(e,this._tagPos)}t+=i;this._tagPos+=i;if(this._tagPos<16)return}{this._decipherInstance.setAuthTag(this._tag);const e=this._decipherInstance.final();if(e.length){if(this._packet)this._packet.set(e,this._packetPos);else this._packet=e}}const i=!this._packet?g:new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;ivIncrement(this._decipherIV);this._len=0;this._lenBytes=0;this._packet=null;this._packetPos=0;this._pktLen=0;this._tagPos=0;{const e=this._onPayload(i);if(e!==undefined)return e===false?t:e}}}}class AESGCMDecipherBinding{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._instance=new I(t.decipherInfo.sslName,t.decipherKey,t.decipherIV);this._len=0;this._lenBytes=0;this._packet=null;this._pktLen=0;this._tag=Buffer.allocUnsafe(16);this._tagPos=0}free(){}decrypt(e,t,r){while(t<r){if(this._lenBytes<4){let i=Math.min(4-this._lenBytes,r-t);this._lenBytes+=i;while(i--)this._len=(this._len<<8)+e[t++];if(this._lenBytes<4)return;if(this._len+20>w||this._len<16||(this._len&15)!==0){throw new Error(`Bad packet length: ${this._len}`)}}if(this._pktLen<this._len){if(t>=r)return;const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._pktLen)}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(16-this._tagPos,r-t);if(t!==0||i!==r){this._tag.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._tagPos)}else{this._tag.set(e,this._tagPos)}t+=i;this._tagPos+=i;if(this._tagPos<16)return}this._instance.decrypt(this._packet,this._len,this._tag);const i=new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._len=0;this._lenBytes=0;this._packet=null;this._pktLen=0;this._tagPos=0;{const e=this._onPayload(i);if(e!==undefined)return e===false?t:e}}}}class GenericDecipherNative{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._decipherInstance=s(t.decipherInfo.sslName,t.decipherKey,t.decipherIV);this._decipherInstance.setAutoPadding(false);this._block=Buffer.allocUnsafe(t.macInfo.isETM?4:t.decipherInfo.blockLen);this._blockSize=t.decipherInfo.blockLen;this._blockPos=0;this._len=0;this._packet=null;this._packetPos=0;this._pktLen=0;this._mac=Buffer.allocUnsafe(t.macInfo.actualLen);this._macPos=0;this._macSSLName=t.macInfo.sslName;this._macKey=t.macKey;this._macActualLen=t.macInfo.actualLen;this._macETM=t.macInfo.isETM;this._macInstance=null;const r=t.decipherInfo.discardLen;if(r){let e=E.get(r);if(e===undefined){e=Buffer.alloc(r);E.set(r,e)}this._decipherInstance.update(e)}}free(){}decrypt(e,t,r){while(t<r){if(this._blockPos<this._block.length){const i=Math.min(this._block.length-this._blockPos,r-t);if(t!==0||i!==r||i<e.length){this._block.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._blockPos)}else{this._block.set(e,this._blockPos)}t+=i;this._blockPos+=i;if(this._blockPos<this._block.length)return;let s;let o;if(this._macETM){this._len=o=l(this._block,0)}else{s=this._decipherInstance.update(this._block);this._len=l(s,0);o=4+this._len-this._blockSize}if(this._len>w||this._len<5||(o&this._blockSize-1)!==0){throw new Error("Bad packet length")}this._macInstance=n(this._macSSLName,this._macKey);u(_,this.inSeqno,0);this._macInstance.update(_);if(this._macETM){this._macInstance.update(this._block)}else{this._macInstance.update(new Uint8Array(s.buffer,s.byteOffset,4));this._pktLen=s.length-4;this._packetPos=this._pktLen;this._packet=Buffer.allocUnsafe(this._len);this._packet.set(new Uint8Array(s.buffer,s.byteOffset+4,this._packetPos),0)}if(t>=r)return}if(this._pktLen<this._len){const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(this._macETM)this._macInstance.update(s);const n=this._decipherInstance.update(s);if(n.length){if(i===this._len){this._packet=n}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(n,this._packetPos)}this._packetPos+=n.length}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(this._macActualLen-this._macPos,r-t);if(t!==0||i!==r){this._mac.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._macPos)}else{this._mac.set(e,this._macPos)}t+=i;this._macPos+=i;if(this._macPos<this._macActualLen)return}if(!this._macETM)this._macInstance.update(this._packet);let i=this._macInstance.digest();if(this._macActualLen<i.length){i=new Uint8Array(i.buffer,i.byteOffset,this._macActualLen)}if(!timingSafeEquals(i,this._mac))throw new Error("Invalid MAC");const s=new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._blockPos=0;this._len=0;this._packet=null;this._packetPos=0;this._pktLen=0;this._macPos=0;this._macInstance=null;{const e=this._onPayload(s);if(e!==undefined)return e===false?t:e}}}}class GenericDecipherBinding{constructor(e){const t=e.inbound;this.inSeqno=t.seqno;this._onPayload=t.onPayload;this._instance=new k(t.decipherInfo.sslName,t.decipherKey,t.decipherIV,t.macInfo.sslName,t.macKey,t.macInfo.isETM,t.macInfo.actualLen);this._block=Buffer.allocUnsafe(t.macInfo.isETM||t.decipherInfo.stream?4:t.decipherInfo.blockLen);this._blockPos=0;this._len=0;this._packet=null;this._pktLen=0;this._mac=Buffer.allocUnsafe(t.macInfo.actualLen);this._macPos=0;this._macActualLen=t.macInfo.actualLen;this._macETM=t.macInfo.isETM}free(){this._instance.free()}decrypt(e,t,r){while(t<r){if(this._blockPos<this._block.length){const i=Math.min(this._block.length-this._blockPos,r-t);if(t!==0||i!==r||i<e.length){this._block.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._blockPos)}else{this._block.set(e,this._blockPos)}t+=i;this._blockPos+=i;if(this._blockPos<this._block.length)return;let s;if(this._macETM){this._len=s=l(this._block,0)}else{this._instance.decryptBlock(this._block);this._len=l(this._block,0);s=4+this._len-this._block.length}if(this._len>w||this._len<5||(s&this._block.length-1)!==0){throw new Error("Bad packet length")}if(!this._macETM){this._pktLen=this._block.length-4;if(this._pktLen){this._packet=Buffer.allocUnsafe(this._len);this._packet.set(new Uint8Array(this._block.buffer,this._block.byteOffset+4,this._pktLen),0)}}if(t>=r)return}if(this._pktLen<this._len){const i=Math.min(this._len-this._pktLen,r-t);let s;if(t!==0||i!==r)s=new Uint8Array(e.buffer,e.byteOffset+t,i);else s=e;if(i===this._len){this._packet=s}else{if(!this._packet)this._packet=Buffer.allocUnsafe(this._len);this._packet.set(s,this._pktLen)}t+=i;this._pktLen+=i;if(this._pktLen<this._len||t>=r)return}{const i=Math.min(this._macActualLen-this._macPos,r-t);if(t!==0||i!==r){this._mac.set(new Uint8Array(e.buffer,e.byteOffset+t,i),this._macPos)}else{this._mac.set(e,this._macPos)}t+=i;this._macPos+=i;if(this._macPos<this._macActualLen)return}this._instance.decrypt(this._packet,this.inSeqno,this._block,this._mac);const i=new m(this._packet.buffer,this._packet.byteOffset+1,this._packet.length-this._packet[0]-1);this.inSeqno=this.inSeqno+1>>>0;this._blockPos=0;this._len=0;this._packet=null;this._pktLen=0;this._macPos=0;this._macInstance=null;{const e=this._onPayload(i);if(e!==undefined)return e===false?t:e}}}}function ivIncrement(e){++e[11]>>>8&&++e[10]>>>8&&++e[9]>>>8&&++e[8]>>>8&&++e[7]>>>8&&++e[6]>>>8&&++e[5]>>>8&&++e[4]>>>8}const x=(()=>{const e=Buffer.alloc(4);return t=>{e[0]=t>>>24;e[1]=t>>>16;e[2]=t>>>8;e[3]=t;return e}})();function timingSafeEquals(e,t){if(e.length!==t.length){p(e,e);return false}return p(e,t)}function createCipher(e){if(typeof e!=="object"||e===null)throw new Error("Invalid config");if(typeof e.outbound!=="object"||e.outbound===null)throw new Error("Invalid outbound");const t=e.outbound;if(typeof t.onWrite!=="function")throw new Error("Invalid outbound.onWrite");if(typeof t.cipherInfo!=="object"||t.cipherInfo===null)throw new Error("Invalid outbound.cipherInfo");if(!Buffer.isBuffer(t.cipherKey)||t.cipherKey.length!==t.cipherInfo.keyLen){throw new Error("Invalid outbound.cipherKey")}if(t.cipherInfo.ivLen&&(!Buffer.isBuffer(t.cipherIV)||t.cipherIV.length!==t.cipherInfo.ivLen)){throw new Error("Invalid outbound.cipherIV")}if(typeof t.seqno!=="number"||t.seqno<0||t.seqno>h){throw new Error("Invalid outbound.seqno")}const r=!!t.forceNative;switch(t.cipherInfo.sslName){case"aes-128-gcm":case"aes-256-gcm":return b&&!r?new AESGCMCipherBinding(e):new AESGCMCipherNative(e);case"chacha20":return y&&!r?new ChaChaPolyCipherBinding(e):new ChaChaPolyCipherNative(e);default:{if(typeof t.macInfo!=="object"||t.macInfo===null)throw new Error("Invalid outbound.macInfo");if(!Buffer.isBuffer(t.macKey)||t.macKey.length!==t.macInfo.len){throw new Error("Invalid outbound.macKey")}return T&&!r?new GenericCipherBinding(e):new GenericCipherNative(e)}}}function createDecipher(e){if(typeof e!=="object"||e===null)throw new Error("Invalid config");if(typeof e.inbound!=="object"||e.inbound===null)throw new Error("Invalid inbound");const t=e.inbound;if(typeof t.onPayload!=="function")throw new Error("Invalid inbound.onPayload");if(typeof t.decipherInfo!=="object"||t.decipherInfo===null){throw new Error("Invalid inbound.decipherInfo")}if(!Buffer.isBuffer(t.decipherKey)||t.decipherKey.length!==t.decipherInfo.keyLen){throw new Error("Invalid inbound.decipherKey")}if(t.decipherInfo.ivLen&&(!Buffer.isBuffer(t.decipherIV)||t.decipherIV.length!==t.decipherInfo.ivLen)){throw new Error("Invalid inbound.decipherIV")}if(typeof t.seqno!=="number"||t.seqno<0||t.seqno>h){throw new Error("Invalid inbound.seqno")}const r=!!t.forceNative;switch(t.decipherInfo.sslName){case"aes-128-gcm":case"aes-256-gcm":return I&&!r?new AESGCMDecipherBinding(e):new AESGCMDecipherNative(e);case"chacha20":return C&&!r?new ChaChaPolyDecipherBinding(e):new ChaChaPolyDecipherNative(e);default:{if(typeof t.macInfo!=="object"||t.macInfo===null)throw new Error("Invalid inbound.macInfo");if(!Buffer.isBuffer(t.macKey)||t.macKey.length!==t.macInfo.len){throw new Error("Invalid inbound.macKey")}return k&&!r?new GenericDecipherBinding(e):new GenericDecipherNative(e)}}}e.exports={CIPHER_INFO:B,MAC_INFO:P,bindingAvailable:!!v,init:(()=>new Promise((async(e,t)=>{try{U=await r(4989)();L=U._malloc(16);G=U.cwrap("poly1305_auth",null,["number","array","number","array","number","array"])}catch(e){return t(e)}e()})))(),NullCipher:NullCipher,createCipher:createCipher,NullDecipher:NullDecipher,createDecipher:createDecipher}},4989:(e,t,r)=>{var i=function(){var e=typeof document!=="undefined"&&document.currentScript?document.currentScript.src:undefined;if(typeof __filename!=="undefined")e=e||__filename;return function(t){t=t||{};var i;i||(i=typeof t!=="undefined"?t:{});var s,n;i.ready=new Promise((function(e,t){s=e;n=t}));var o={},p;for(p in i)i.hasOwnProperty(p)&&(o[p]=i[p]);var l="object"===typeof window,u="function"===typeof importScripts,m="object"===typeof process&&"object"===typeof process.versions&&"string"===typeof process.versions.node,h="",g,_,E,w,v;if(m)h=u?r(1017).dirname(h)+"/":__dirname+"/",g=function(e,t){var i=H(e);if(i)return t?i:i.toString();w||(w=r(7147));v||(v=r(1017));e=v.normalize(e);return w.readFileSync(e,t?null:"utf8")},E=function(e){e=g(e,!0);e.buffer||(e=new Uint8Array(e));assert(e.buffer);return e},_=function(e,t,i){var s=H(e);s&&t(s);w||(w=r(7147));v||(v=r(1017));e=v.normalize(e);w.readFile(e,(function(e,r){e?i(e):t(r.buffer)}))},1<process.argv.length&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),i.inspect=function(){return"[Emscripten Module object]"};else if(l||u)u?h=self.location.href:"undefined"!==typeof document&&document.currentScript&&(h=document.currentScript.src),e&&(h=e),0!==h.indexOf("blob:")?h=h.substr(0,h.lastIndexOf("/")+1):h="",g=function(e){try{var t=new XMLHttpRequest;t.open("GET",e,!1);t.send(null);return t.responseText}catch(s){if(e=H(e)){t=[];for(var r=0;r<e.length;r++){var i=e[r];255<i&&(j&&assert(!1,"Character code "+i+" ("+String.fromCharCode(i)+")  at offset "+r+" not in 0x00-0xFF."),i&=255);t.push(String.fromCharCode(i))}return t.join("")}throw s}},u&&(E=function(e){try{var t=new XMLHttpRequest;t.open("GET",e,!1);t.responseType="arraybuffer";t.send(null);return new Uint8Array(t.response)}catch(t){if(e=H(e))return e;throw t}}),_=function(e,t,r){var i=new XMLHttpRequest;i.open("GET",e,!0);i.responseType="arraybuffer";i.onload=function(){if(200==i.status||0==i.status&&i.response)t(i.response);else{var s=H(e);s?t(s.buffer):r()}};i.onerror=r;i.send(null)};i.print||console.log.bind(console);var b=i.printErr||console.warn.bind(console);for(p in o)o.hasOwnProperty(p)&&(i[p]=o[p]);o=null;var y;i.wasmBinary&&(y=i.wasmBinary);var T=i.noExitRuntime||!0;"object"!==typeof WebAssembly&&K("no native wasm support detected");var I,C=!1;function assert(e,t){e||K("Assertion failed: "+t)}function N(e){var t=i["_"+e];assert(t,"Cannot call unknown function "+e+", make sure it is exported");return t}function ca(e,t,r,i){var s={string:function(e){var t=0;if(null!==e&&void 0!==e&&0!==e){var r=(e.length<<2)+1;t=ee(r);var i=t,s=P;if(0<r){r=i+r-1;for(var n=0;n<e.length;++n){var o=e.charCodeAt(n);if(55296<=o&&57343>=o){var p=e.charCodeAt(++n);o=65536+((o&1023)<<10)|p&1023}if(127>=o){if(i>=r)break;s[i++]=o}else{if(2047>=o){if(i+1>=r)break;s[i++]=192|o>>6}else{if(65535>=o){if(i+2>=r)break;s[i++]=224|o>>12}else{if(i+3>=r)break;s[i++]=240|o>>18;s[i++]=128|o>>12&63}s[i++]=128|o>>6&63}s[i++]=128|o&63}}s[i]=0}}return t},array:function(e){var t=ee(e.length);B.set(e,t);return t}},n=N(e),o=[];e=0;if(i)for(var p=0;p<i.length;p++){var l=s[r[p]];l?(0===e&&(e=z()),o[p]=l(i[p])):o[p]=i[p]}r=n.apply(null,o);r=function(e){if("string"===t)if(e){for(var r=P,i=e+NaN,s=e;r[s]&&!(s>=i);)++s;if(16<s-e&&r.subarray&&k)e=k.decode(r.subarray(e,s));else{for(i="";e<s;){var n=r[e++];if(n&128){var o=r[e++]&63;if(192==(n&224))i+=String.fromCharCode((n&31)<<6|o);else{var p=r[e++]&63;n=224==(n&240)?(n&15)<<12|o<<6|p:(n&7)<<18|o<<12|p<<6|r[e++]&63;65536>n?i+=String.fromCharCode(n):(n-=65536,i+=String.fromCharCode(55296|n>>10,56320|n&1023))}}else i+=String.fromCharCode(n)}e=i}}else e="";else e="boolean"===t?!!e:e;return e}(r);0!==e&&J(e);return r}var k="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0,R,B,P;function ia(){var e=I.buffer;R=e;i.HEAP8=B=new Int8Array(e);i.HEAP16=new Int16Array(e);i.HEAP32=new Int32Array(e);i.HEAPU8=P=new Uint8Array(e);i.HEAPU16=new Uint16Array(e);i.HEAPU32=new Uint32Array(e);i.HEAPF32=new Float32Array(e);i.HEAPF64=new Float64Array(e)}var O,D=[],U=[],L=[];function ma(){var e=i.preRun.shift();D.unshift(e)}var G=0,x=null,Q=null;i.preloadedImages={};i.preloadedAudios={};function K(e){if(i.onAbort)i.onAbort(e);b(e);C=!0;e=new WebAssembly.RuntimeError("abort("+e+"). Build with -s ASSERTIONS=1 for more info.");n(e);throw e}var V="data:application/octet-stream;base64,",q;q="data:application/octet-stream;base64,";if(!q.startsWith(V)){var W=q;q=i.locateFile?i.locateFile(W,h):h+W}function pa(){var e=q;try{if(e==q&&y)return new Uint8Array(y);var t=H(e);if(t)return t;if(E)return E(e);throw"both async and sync fetching of the wasm failed"}catch(e){K(e)}}function qa(){if(!y&&(l||u)){if("function"===typeof fetch&&!q.startsWith("file://"))return fetch(q,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+q+"'";return e.arrayBuffer()})).catch((function(){return pa()}));if(_)return new Promise((function(e,t){_(q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pa()}))}function X(e){for(;0<e.length;){var t=e.shift();if("function"==typeof t)t(i);else{var r=t.m;"number"===typeof r?void 0===t.l?O.get(r)():O.get(r)(t.l):r(void 0===t.l?null:t.l)}}}var j=!1,$="function"===typeof atob?atob:function(e){var t="",r=0;e=e.replace(/[^A-Za-z0-9\+\/=]/g,"");do{var i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(e.charAt(r++));var s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(e.charAt(r++));var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(e.charAt(r++));var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(e.charAt(r++));i=i<<2|s>>4;s=(s&15)<<4|n>>2;var p=(n&3)<<6|o;t+=String.fromCharCode(i);64!==n&&(t+=String.fromCharCode(s));64!==o&&(t+=String.fromCharCode(p))}while(r<e.length);return t};function H(e){if(e.startsWith(V)){e=e.slice(V.length);if("boolean"===typeof m&&m){var t=Buffer.from(e,"base64");t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}else try{var r=$(e),i=new Uint8Array(r.length);for(e=0;e<r.length;++e)i[e]=r.charCodeAt(e);t=i}catch(e){throw Error("Converting base64 string to bytes failed.")}return t}}var Y={a:function(e){var t=P.length;e>>>=0;if(2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296);i=Math.max(e,i);0<i%65536&&(i+=65536-i%65536);e:{try{I.grow(Math.min(2147483648,i)-R.byteLength+65535>>>16);ia();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1}};(function(){function a(e){i.asm=e.exports;I=i.asm.b;ia();O=i.asm.j;U.unshift(i.asm.c);G--;i.monitorRunDependencies&&i.monitorRunDependencies(G);0==G&&(null!==x&&(clearInterval(x),x=null),Q&&(e=Q,Q=null,e()))}function c(e){a(e.instance)}function d(t){return qa().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e);K(e)}))}var e={a:Y};G++;i.monitorRunDependencies&&i.monitorRunDependencies(G);if(i.instantiateWasm)try{return i.instantiateWasm(e,a)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e),!1}(function(){return y||"function"!==typeof WebAssembly.instantiateStreaming||q.startsWith(V)||q.startsWith("file://")||"function"!==typeof fetch?d(c):fetch(q,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(c,(function(e){b("wasm streaming compile failed: "+e);b("falling back to ArrayBuffer instantiation");return d(c)}))}))})().catch(n);return{}})();i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.c).apply(null,arguments)};i._poly1305_auth=function(){return(i._poly1305_auth=i.asm.d).apply(null,arguments)};var z=i.stackSave=function(){return(z=i.stackSave=i.asm.e).apply(null,arguments)},J=i.stackRestore=function(){return(J=i.stackRestore=i.asm.f).apply(null,arguments)},ee=i.stackAlloc=function(){return(ee=i.stackAlloc=i.asm.g).apply(null,arguments)};i._malloc=function(){return(i._malloc=i.asm.h).apply(null,arguments)};i._free=function(){return(i._free=i.asm.i).apply(null,arguments)};i.cwrap=function(e,t,r,i){r=r||[];var s=r.every((function(e){return"number"===e}));return"string"!==t&&s&&!i?N(e):function(){return ca(e,t,r,arguments)}};var te;Q=function ta(){te||Z();te||(Q=ta)};function Z(){function a(){if(!te&&(te=!0,i.calledRun=!0,!C)){X(U);s(i);if(i.onRuntimeInitialized)i.onRuntimeInitialized();if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var e=i.postRun.shift();L.unshift(e)}X(L)}}if(!(0<G)){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)ma();X(D);0<G||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1);a()}),1)):a())}}i.run=Z;if(i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();Z();return t.ready}}();if(true)e.exports=i;else{}},172:(e,t,r)=>{"use strict";const i=new Array(256);[r(4126).HANDLERS,r(6475)].forEach((e=>{for(let[t,r]of Object.entries(e)){t=+t;if(isFinite(t)&&t>=0&&t<i.length)i[t]=r}}));e.exports=i},6475:(e,t,r)=>{"use strict";const{bufferSlice:i,bufferParser:s,doFatalError:n,sigSSHToASN1:o,writeUInt32BE:p}=r(9475);const{CHANNEL_OPEN_FAILURE:l,COMPAT:u,MESSAGE:m,TERMINAL_MODE:h}=r(6832);const{parseKey:g}=r(2218);const _=Array.from(Object.entries(h)).reduce(((e,[t,r])=>({...e,[t]:r})),{});e.exports={[m.DISCONNECT]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readString(true);const o=s.readString();s.clear();if(o===undefined){return n(e,"Inbound: Malformed DISCONNECT packet")}e._debug&&e._debug(`Inbound: Received DISCONNECT (${r}, "${i}")`);const p=e._handlers.DISCONNECT;p&&p(e,r,i)},[m.IGNORE]:(e,t)=>{e._debug&&e._debug("Inbound: Received IGNORE")},[m.UNIMPLEMENTED]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();s.clear();if(r===undefined){return n(e,"Inbound: Malformed UNIMPLEMENTED packet")}e._debug&&e._debug(`Inbound: Received UNIMPLEMENTED (seqno ${r})`)},[m.DEBUG]:(e,t)=>{s.init(t,1);const r=s.readBool();const i=s.readString(true);const o=s.readString();s.clear();if(o===undefined){return n(e,"Inbound: Malformed DEBUG packet")}e._debug&&e._debug("Inbound: Received DEBUG");const p=e._handlers.DEBUG;p&&p(e,r,i)},[m.SERVICE_REQUEST]:(e,t)=>{s.init(t,1);const r=s.readString(true);s.clear();if(r===undefined){return n(e,"Inbound: Malformed SERVICE_REQUEST packet")}e._debug&&e._debug(`Inbound: Received SERVICE_REQUEST (${r})`);const i=e._handlers.SERVICE_REQUEST;i&&i(e,r)},[m.SERVICE_ACCEPT]:(e,t)=>{s.init(t,1);const r=s.readString(true);s.clear();if(r===undefined){return n(e,"Inbound: Malformed SERVICE_ACCEPT packet")}e._debug&&e._debug(`Inbound: Received SERVICE_ACCEPT (${r})`);const i=e._handlers.SERVICE_ACCEPT;i&&i(e,r)},[m.USERAUTH_REQUEST]:(e,t)=>{s.init(t,1);const r=s.readString(true);const l=s.readString(true);const u=s.readString(true);let m;let h;switch(u){case"none":m=null;break;case"password":{const e=s.readBool();if(e!==undefined){m=s.readString(true);if(m!==undefined&&e){const e=s.readString(true);if(e!==undefined)m={oldPassword:m,newPassword:e};else m=undefined}}break}case"publickey":{const r=s.readBool();if(r!==undefined){const n=s.readString(true);const l=s.readString();if(r){const r=s.pos();let u=s.readString();if(u!==undefined){if(u.length>4+n.length+4&&u.utf8Slice(4,4+n.length)===n){u=i(u,4+n.length+4)}u=o(u,n);if(u){const i=e._kex.sessionID;const s=Buffer.allocUnsafe(4+i.length+r);p(s,i.length,0);s.set(i,4);s.set(new Uint8Array(t.buffer,t.byteOffset,r),4+i.length);m={keyAlgo:n,key:l,signature:u,blob:s}}}}else{m={keyAlgo:n,key:l};h="publickey -- check"}}break}case"hostbased":{const r=s.readString(true);const n=s.readString();const l=s.readString(true);const u=s.readString(true);const h=s.pos();let g=s.readString();if(g!==undefined){if(g.length>4+r.length+4&&g.utf8Slice(4,4+r.length)===r){g=i(g,4+r.length+4)}g=o(g,r);if(g!==undefined){const i=e._kex.sessionID;const s=Buffer.allocUnsafe(4+i.length+h);p(s,i.length,0);s.set(i,4);s.set(new Uint8Array(t.buffer,t.byteOffset,h),4+i.length);m={keyAlgo:r,key:n,signature:g,blob:s,localHostname:l,localUsername:u}}}break}case"keyboard-interactive":s.skipString();m=s.readList();break;default:if(u!==undefined)m=s.readRaw()}s.clear();if(m===undefined){return n(e,"Inbound: Malformed USERAUTH_REQUEST packet")}if(h===undefined)h=u;e._authsQueue.push(u);e._debug&&e._debug(`Inbound: Received USERAUTH_REQUEST (${h})`);const g=e._handlers.USERAUTH_REQUEST;g&&g(e,r,l,u,m)},[m.USERAUTH_FAILURE]:(e,t)=>{s.init(t,1);const r=s.readList();const i=s.readBool();s.clear();if(i===undefined){return n(e,"Inbound: Malformed USERAUTH_FAILURE packet")}e._debug&&e._debug(`Inbound: Received USERAUTH_FAILURE (${r})`);e._authsQueue.shift();const o=e._handlers.USERAUTH_FAILURE;o&&o(e,r,i)},[m.USERAUTH_SUCCESS]:(e,t)=>{e._debug&&e._debug("Inbound: Received USERAUTH_SUCCESS");e._authsQueue.shift();const r=e._handlers.USERAUTH_SUCCESS;r&&r(e)},[m.USERAUTH_BANNER]:(e,t)=>{s.init(t,1);const r=s.readString(true);const i=s.readString();s.clear();if(i===undefined){return n(e,"Inbound: Malformed USERAUTH_BANNER packet")}e._debug&&e._debug("Inbound: Received USERAUTH_BANNER");const o=e._handlers.USERAUTH_BANNER;o&&o(e,r)},60:(e,t)=>{if(!e._authsQueue.length){e._debug&&e._debug("Inbound: Received payload type 60 without auth");return}switch(e._authsQueue[0]){case"password":{s.init(t,1);const r=s.readString(true);const i=s.readString();s.clear();if(i===undefined){return n(e,"Inbound: Malformed USERAUTH_PASSWD_CHANGEREQ packet")}e._debug&&e._debug("Inbound: Received USERAUTH_PASSWD_CHANGEREQ");const o=e._handlers.USERAUTH_PASSWD_CHANGEREQ;o&&o(e,r);break}case"publickey":{s.init(t,1);const r=s.readString(true);const i=s.readString();s.clear();if(i===undefined){return n(e,"Inbound: Malformed USERAUTH_PK_OK packet")}e._debug&&e._debug("Inbound: Received USERAUTH_PK_OK");e._authsQueue.shift();const o=e._handlers.USERAUTH_PK_OK;o&&o(e,r,i);break}case"keyboard-interactive":{s.init(t,1);const r=s.readString(true);const i=s.readString(true);s.readString();const o=s.readUInt32BE();let p;if(o!==undefined){p=new Array(o);let e;for(e=0;e<o;++e){const t=s.readString(true);const r=s.readBool();if(r===undefined)break;p[e]={prompt:t,echo:r}}if(e!==o)p=undefined}s.clear();if(p===undefined){return n(e,"Inbound: Malformed USERAUTH_INFO_REQUEST packet")}e._debug&&e._debug("Inbound: Received USERAUTH_INFO_REQUEST");const l=e._handlers.USERAUTH_INFO_REQUEST;l&&l(e,r,i,p);break}default:e._debug&&e._debug("Inbound: Received unexpected payload type 60")}},61:(e,t)=>{if(!e._authsQueue.length){e._debug&&e._debug("Inbound: Received payload type 61 without auth");return}if(e._authsQueue[0]!=="keyboard-interactive"){return n(e,"Inbound: Received unexpected payload type 61")}s.init(t,1);const r=s.readUInt32BE();let i;if(r!==undefined){i=new Array(r);let e;for(e=0;e<r;++e){const t=s.readString(true);if(t===undefined)break;i[e]=t}if(e!==r)i=undefined}s.clear();if(i===undefined){return n(e,"Inbound: Malformed USERAUTH_INFO_RESPONSE packet")}e._debug&&e._debug("Inbound: Received USERAUTH_INFO_RESPONSE");const o=e._handlers.USERAUTH_INFO_RESPONSE;o&&o(e,i)},[m.GLOBAL_REQUEST]:(e,t)=>{s.init(t,1);const r=s.readString(true);const i=s.readBool();let o;if(i!==undefined){switch(r){case"tcpip-forward":case"cancel-tcpip-forward":{const e=s.readString(true);const t=s.readUInt32BE();if(t!==undefined)o={bindAddr:e,bindPort:t};break}case"streamlocal-forward@openssh.com":case"cancel-streamlocal-forward@openssh.com":{const e=s.readString(true);if(e!==undefined)o={socketPath:e};break}case"no-more-sessions@openssh.com":o=null;break;case"hostkeys-00@openssh.com":{o=[];while(s.avail()>0){const e=s.readString();if(e===undefined){o=undefined;break}const t=g(e);if(!(t instanceof Error))o.push(t)}break}default:o=s.readRaw()}}s.clear();if(o===undefined){return n(e,"Inbound: Malformed GLOBAL_REQUEST packet")}e._debug&&e._debug(`Inbound: GLOBAL_REQUEST (${r})`);const p=e._handlers.GLOBAL_REQUEST;if(p)p(e,r,i,o);else e.requestFailure()},[m.REQUEST_SUCCESS]:(e,t)=>{const r=t.length>1?i(t,1):null;e._debug&&e._debug("Inbound: REQUEST_SUCCESS");const s=e._handlers.REQUEST_SUCCESS;s&&s(e,r)},[m.REQUEST_FAILURE]:(e,t)=>{e._debug&&e._debug("Inbound: Received REQUEST_FAILURE");const r=e._handlers.REQUEST_FAILURE;r&&r(e)},[m.CHANNEL_OPEN]:(e,t)=>{s.init(t,1);const r=s.readString(true);const i=s.readUInt32BE();const o=s.readUInt32BE();const p=s.readUInt32BE();let u;switch(r){case"forwarded-tcpip":case"direct-tcpip":{const e=s.readString(true);const t=s.readUInt32BE();const n=s.readString(true);const l=s.readUInt32BE();if(l!==undefined){u={type:r,sender:i,window:o,packetSize:p,data:{destIP:e,destPort:t,srcIP:n,srcPort:l}}}break}case"forwarded-streamlocal@openssh.com":case"direct-streamlocal@openssh.com":{const e=s.readString(true);if(e!==undefined){u={type:r,sender:i,window:o,packetSize:p,data:{socketPath:e}}}break}case"x11":{const e=s.readString(true);const t=s.readUInt32BE();if(t!==undefined){u={type:r,sender:i,window:o,packetSize:p,data:{srcIP:e,srcPort:t}}}break}default:u={type:r,sender:i,window:o,packetSize:p,data:{}}}s.clear();if(u===undefined){return n(e,"Inbound: Malformed CHANNEL_OPEN packet")}e._debug&&e._debug(`Inbound: CHANNEL_OPEN (s:${i}, ${r})`);const m=e._handlers.CHANNEL_OPEN;if(m){m(e,u)}else{e.channelOpenFail(u.sender,l.ADMINISTRATIVELY_PROHIBITED,"","")}},[m.CHANNEL_OPEN_CONFIRMATION]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readUInt32BE();const o=s.readUInt32BE();const p=s.readUInt32BE();const l=s.avail()?s.readRaw():undefined;s.clear();if(p===undefined){return n(e,"Inbound: Malformed CHANNEL_OPEN_CONFIRMATION packet")}e._debug&&e._debug(`Inbound: CHANNEL_OPEN_CONFIRMATION (r:${r}, s:${i})`);const u=e._handlers.CHANNEL_OPEN_CONFIRMATION;if(u)u(e,{recipient:r,sender:i,window:o,packetSize:p,data:l})},[m.CHANNEL_OPEN_FAILURE]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readUInt32BE();const o=s.readString(true);const p=s.readString();s.clear();if(p===undefined){return n(e,"Inbound: Malformed CHANNEL_OPEN_FAILURE packet")}e._debug&&e._debug(`Inbound: CHANNEL_OPEN_FAILURE (r:${r})`);const l=e._handlers.CHANNEL_OPEN_FAILURE;l&&l(e,r,i,o)},[m.CHANNEL_WINDOW_ADJUST]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readUInt32BE();s.clear();if(i===undefined){return n(e,"Inbound: Malformed CHANNEL_WINDOW_ADJUST packet")}e._debug&&e._debug(`Inbound: CHANNEL_WINDOW_ADJUST (r:${r}, ${i})`);const o=e._handlers.CHANNEL_WINDOW_ADJUST;o&&o(e,r,i)},[m.CHANNEL_DATA]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readString();s.clear();if(i===undefined){return n(e,"Inbound: Malformed CHANNEL_DATA packet")}e._debug&&e._debug(`Inbound: CHANNEL_DATA (r:${r}, ${i.length})`);const o=e._handlers.CHANNEL_DATA;o&&o(e,r,i)},[m.CHANNEL_EXTENDED_DATA]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readUInt32BE();const o=s.readString();s.clear();if(o===undefined){return n(e,"Inbound: Malformed CHANNEL_EXTENDED_DATA packet")}e._debug&&e._debug(`Inbound: CHANNEL_EXTENDED_DATA (r:${r}, ${o.length})`);const p=e._handlers.CHANNEL_EXTENDED_DATA;p&&p(e,r,o,i)},[m.CHANNEL_EOF]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();s.clear();if(r===undefined){return n(e,"Inbound: Malformed CHANNEL_EOF packet")}e._debug&&e._debug(`Inbound: CHANNEL_EOF (r:${r})`);const i=e._handlers.CHANNEL_EOF;i&&i(e,r)},[m.CHANNEL_CLOSE]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();s.clear();if(r===undefined){return n(e,"Inbound: Malformed CHANNEL_CLOSE packet")}e._debug&&e._debug(`Inbound: CHANNEL_CLOSE (r:${r})`);const i=e._handlers.CHANNEL_CLOSE;i&&i(e,r)},[m.CHANNEL_REQUEST]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();const i=s.readString(true);const o=s.readBool();let p;if(o!==undefined){switch(i){case"exit-status":p=s.readUInt32BE();e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${p})`);break;case"exit-signal":{let t;let n;if(e._compatFlags&u.OLD_EXIT){const e=s.readUInt32BE();switch(e){case 1:t="HUP";break;case 2:t="INT";break;case 3:t="QUIT";break;case 6:t="ABRT";break;case 9:t="KILL";break;case 14:t="ALRM";break;case 15:t="TERM";break;default:if(e!==undefined){t=`UNKNOWN (${e})`}}n=false}else{t=s.readString(true);n=s.readBool();if(n===undefined)t=undefined}const o=s.readString(true);if(s.skipString()!==undefined)p={signal:t,coreDumped:n,errorMessage:o};e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${t})`);break}case"pty-req":{const t=s.readString(true);const n=s.readUInt32BE();const o=s.readUInt32BE();const l=s.readUInt32BE();const u=s.readUInt32BE();const m=s.readString();if(m!==undefined){s.init(m,1);let e={};while(s.avail()){const t=s.readByte();if(t===h.TTY_OP_END)break;const r=_[t];const i=s.readUInt32BE();if(t===undefined||r===undefined||i===undefined){e=undefined;break}e[r]=i}if(e!==undefined)p={term:t,cols:n,rows:o,width:l,height:u,modes:e}}e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`);break}case"window-change":{const t=s.readUInt32BE();const n=s.readUInt32BE();const o=s.readUInt32BE();const l=s.readUInt32BE();if(l!==undefined)p={cols:t,rows:n,width:o,height:l};e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`);break}case"x11-req":{const t=s.readBool();const n=s.readString(true);const o=s.readString();const l=s.readUInt32BE();if(l!==undefined)p={single:t,protocol:n,cookie:o,screen:l};e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`);break}case"env":{const t=s.readString(true);const n=s.readString(true);if(n!==undefined)p={name:t,value:n};if(e._debug){e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: `+`${t}=${n})`)}break}case"shell":p=null;e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`);break;case"exec":p=s.readString(true);e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${p})`);break;case"subsystem":p=s.readString(true);e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${p})`);break;case"signal":p=s.readString(true);e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${p})`);break;case"xon-xoff":p=s.readBool();e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i}: ${p})`);break;case"auth-agent-req@openssh.com":p=null;e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`);break;default:p=s.avail()?s.readRaw():null;e._debug&&e._debug(`Inbound: CHANNEL_REQUEST (r:${r}, ${i})`)}}s.clear();if(p===undefined){return n(e,"Inbound: Malformed CHANNEL_REQUEST packet")}const l=e._handlers.CHANNEL_REQUEST;l&&l(e,r,i,o,p)},[m.CHANNEL_SUCCESS]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();s.clear();if(r===undefined){return n(e,"Inbound: Malformed CHANNEL_SUCCESS packet")}e._debug&&e._debug(`Inbound: CHANNEL_SUCCESS (r:${r})`);const i=e._handlers.CHANNEL_SUCCESS;i&&i(e,r)},[m.CHANNEL_FAILURE]:(e,t)=>{s.init(t,1);const r=s.readUInt32BE();s.clear();if(r===undefined){return n(e,"Inbound: Malformed CHANNEL_FAILURE packet")}e._debug&&e._debug(`Inbound: CHANNEL_FAILURE (r:${r})`);const i=e._handlers.CHANNEL_FAILURE;i&&i(e,r)}}},4126:(e,t,r)=>{"use strict";const{createDiffieHellman:i,createDiffieHellmanGroup:s,createECDH:n,createHash:o,createPublicKey:p,diffieHellman:l,generateKeyPairSync:u,randomFillSync:m}=r(6113);const{Ber:h}=r(970);const{COMPAT:g,curve25519Supported:_,DEFAULT_KEX:E,DEFAULT_SERVER_HOST_KEY:w,DEFAULT_CIPHER:v,DEFAULT_MAC:b,DEFAULT_COMPRESSION:y,DISCONNECT_REASON:T,MESSAGE:I}=r(6832);const{CIPHER_INFO:C,createCipher:k,createDecipher:R,MAC_INFO:B}=r(5708);const{parseDERKey:P}=r(2218);const{bufferFill:O,bufferParser:D,convertSignature:U,doFatalError:L,FastBuffer:G,sigSSHToASN1:x,writeUInt32BE:Q}=r(9475);const{PacketReader:V,PacketWriter:q,ZlibPacketReader:W,ZlibPacketWriter:j}=r(6715);let $;const Y=2048;const z=8192;const J=Buffer.alloc(0);function kexinit(e){let t;if(e._compatFlags&g.BAD_DHGEX){const r=e._offer.lists.kex;let i=r.array;let s=false;for(let e=0;e<i.length;++e){if(i[e].includes("group-exchange")){if(!s){s=true;i=i.slice()}i.splice(e--,1)}}if(s){let s=1+16+e._offer.totalSize+1+4;const n=Buffer.from(i.join(","));s-=r.buffer.length-n.length;const o=e._offer.lists.all;const p=new Uint8Array(o.buffer,o.byteOffset+4+r.buffer.length,o.length-(4+r.buffer.length));t=Buffer.allocUnsafe(s);Q(t,n.length,17);t.set(n,17+4);t.set(p,17+4+n.length)}}if(t===undefined){t=Buffer.allocUnsafe(1+16+e._offer.totalSize+1+4);e._offer.copyAllTo(t,17)}e._debug&&e._debug("Outbound: Sending KEXINIT");t[0]=I.KEXINIT;m(t,1,16);O(t,0,t.length-5);e._kexinit=t;e._packetRW.write.allocStart=0;{const r=e._packetRW.write.allocStartKEX;const i=e._packetRW.write.alloc(t.length,true);i.set(t,r);e._cipher.encrypt(e._packetRW.write.finalize(i,true))}}function handleKexInit(e,t){const r={kex:undefined,serverHostKey:undefined,cs:{cipher:undefined,mac:undefined,compress:undefined,lang:undefined},sc:{cipher:undefined,mac:undefined,compress:undefined,lang:undefined}};D.init(t,17);if((r.kex=D.readList())===undefined||(r.serverHostKey=D.readList())===undefined||(r.cs.cipher=D.readList())===undefined||(r.sc.cipher=D.readList())===undefined||(r.cs.mac=D.readList())===undefined||(r.sc.mac=D.readList())===undefined||(r.cs.compress=D.readList())===undefined||(r.sc.compress=D.readList())===undefined||(r.cs.lang=D.readList())===undefined||(r.sc.lang=D.readList())===undefined){D.clear();return L(e,"Received malformed KEXINIT","handshake",T.KEY_EXCHANGE_FAILED)}const i=D.pos();const s=i<t.length&&t[i]===1;D.clear();const n=e._offer;const o=r;let p=n.lists.kex.array;if(e._compatFlags&g.BAD_DHGEX){let e=false;for(let t=0;t<p.length;++t){if(p[t].indexOf("group-exchange")!==-1){if(!e){e=true;p=p.slice()}p.splice(t--,1)}}}let l;let u;let m;const h=e._debug;h&&h("Inbound: Handshake in progress");h&&h(`Handshake: (local) KEX method: ${p}`);h&&h(`Handshake: (remote) KEX method: ${o.kex}`);if(e._server){u=p;l=o.kex}else{u=o.kex;l=p}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching key exchange algorithm");return L(e,"Handshake failed: no matching key exchange algorithm","handshake",T.KEY_EXCHANGE_FAILED)}r.kex=l[m];h&&h(`Handshake: KEX algorithm: ${l[m]}`);if(s&&(!o.kex.length||l[m]!==o.kex[0])){e._skipNextInboundPacket=true}const _=n.lists.serverHostKey.array;h&&h(`Handshake: (local) Host key format: ${_}`);h&&h(`Handshake: (remote) Host key format: ${o.serverHostKey}`);if(e._server){u=_;l=o.serverHostKey}else{u=o.serverHostKey;l=_}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching host key format");return L(e,"Handshake failed: no matching host key format","handshake",T.KEY_EXCHANGE_FAILED)}r.serverHostKey=l[m];h&&h(`Handshake: Host key format: ${l[m]}`);const E=n.lists.cs.cipher.array;h&&h(`Handshake: (local) C->S cipher: ${E}`);h&&h(`Handshake: (remote) C->S cipher: ${o.cs.cipher}`);if(e._server){u=E;l=o.cs.cipher}else{u=o.cs.cipher;l=E}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching C->S cipher");return L(e,"Handshake failed: no matching C->S cipher","handshake",T.KEY_EXCHANGE_FAILED)}r.cs.cipher=l[m];h&&h(`Handshake: C->S Cipher: ${l[m]}`);const w=n.lists.sc.cipher.array;h&&h(`Handshake: (local) S->C cipher: ${w}`);h&&h(`Handshake: (remote) S->C cipher: ${o.sc.cipher}`);if(e._server){u=w;l=o.sc.cipher}else{u=o.sc.cipher;l=w}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching S->C cipher");return L(e,"Handshake failed: no matching S->C cipher","handshake",T.KEY_EXCHANGE_FAILED)}r.sc.cipher=l[m];h&&h(`Handshake: S->C cipher: ${l[m]}`);const v=n.lists.cs.mac.array;h&&h(`Handshake: (local) C->S MAC: ${v}`);h&&h(`Handshake: (remote) C->S MAC: ${o.cs.mac}`);if(C[r.cs.cipher].authLen>0){r.cs.mac="";h&&h("Handshake: C->S MAC: <implicit>")}else{if(e._server){u=v;l=o.cs.mac}else{u=o.cs.mac;l=v}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching C->S MAC");return L(e,"Handshake failed: no matching C->S MAC","handshake",T.KEY_EXCHANGE_FAILED)}r.cs.mac=l[m];h&&h(`Handshake: C->S MAC: ${l[m]}`)}const b=n.lists.sc.mac.array;h&&h(`Handshake: (local) S->C MAC: ${b}`);h&&h(`Handshake: (remote) S->C MAC: ${o.sc.mac}`);if(C[r.sc.cipher].authLen>0){r.sc.mac="";h&&h("Handshake: S->C MAC: <implicit>")}else{if(e._server){u=b;l=o.sc.mac}else{u=o.sc.mac;l=b}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching S->C MAC");return L(e,"Handshake failed: no matching S->C MAC","handshake",T.KEY_EXCHANGE_FAILED)}r.sc.mac=l[m];h&&h(`Handshake: S->C MAC: ${l[m]}`)}const y=n.lists.cs.compress.array;h&&h(`Handshake: (local) C->S compression: ${y}`);h&&h(`Handshake: (remote) C->S compression: ${o.cs.compress}`);if(e._server){u=y;l=o.cs.compress}else{u=o.cs.compress;l=y}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching C->S compression");return L(e,"Handshake failed: no matching C->S compression","handshake",T.KEY_EXCHANGE_FAILED)}r.cs.compress=l[m];h&&h(`Handshake: C->S compression: ${l[m]}`);const I=n.lists.sc.compress.array;h&&h(`Handshake: (local) S->C compression: ${I}`);h&&h(`Handshake: (remote) S->C compression: ${o.sc.compress}`);if(e._server){u=I;l=o.sc.compress}else{u=o.sc.compress;l=I}for(m=0;m<l.length&&u.indexOf(l[m])===-1;++m);if(m===l.length){h&&h("Handshake: No matching S->C compression");return L(e,"Handshake failed: no matching S->C compression","handshake",T.KEY_EXCHANGE_FAILED)}r.sc.compress=l[m];h&&h(`Handshake: S->C compression: ${l[m]}`);r.cs.lang="";r.sc.lang="";if(e._kex){if(!e._kexinit){kexinit(e)}e._decipher._onPayload=onKEXPayload.bind(e,{firstPacket:false})}e._kex=ee(r,e,t);e._kex.start()}const ee=(()=>{function convertToMpint(e){let t=0;let r=e.length;while(e[t]===0){++t;--r}let i;if(e[t]&128){i=Buffer.allocUnsafe(1+r);i[0]=0;e.copy(i,1,t);e=i}else if(r!==e.length){i=Buffer.allocUnsafe(r);e.copy(i,0,t);e=i}return e}class KeyExchange{constructor(e,t,r){this._protocol=t;this.sessionID=t._kex?t._kex.sessionID:undefined;this.negotiated=e;this._step=1;this._public=null;this._dh=null;this._sentNEWKEYS=false;this._receivedNEWKEYS=false;this._finished=false;this._hostVerified=false;this._kexinit=t._kexinit;this._remoteKexinit=r;this._identRaw=t._identRaw;this._remoteIdentRaw=t._remoteIdentRaw;this._hostKey=undefined;this._dhData=undefined;this._sig=undefined}finish(){if(this._finished)return false;this._finished=true;const e=this._protocol._server;const t=this.negotiated;const r=this.convertPublicKey(this._dhData);let i=this.computeSecret(this._dhData);if(i instanceof Error){i.message=`Error while computing DH secret (${this.type}): ${i.message}`;i.level="handshake";return L(this._protocol,i,T.KEY_EXCHANGE_FAILED)}const s=o(this.hashName);re(s,e?this._remoteIdentRaw:this._identRaw);re(s,e?this._identRaw:this._remoteIdentRaw);re(s,e?this._remoteKexinit:this._kexinit);re(s,e?this._kexinit:this._remoteKexinit);const n=e?this._hostKey.getPublicSSH():this._hostKey;re(s,n);if(this.type==="groupex"){const e=this.getDHParams();const t=Buffer.allocUnsafe(4);Q(t,this._minBits,0);s.update(t);Q(t,this._prefBits,0);s.update(t);Q(t,this._maxBits,0);s.update(t);re(s,e.prime);re(s,e.generator)}re(s,e?r:this.getPublicKey());const p=e?this.getPublicKey():r;re(s,p);re(s,i);const l=s.digest();if(!e){D.init(this._sig,0);const e=D.readString(true);if(!e){return L(this._protocol,"Malformed packet while reading signature","handshake",T.KEY_EXCHANGE_FAILED)}if(e!==t.serverHostKey){return L(this._protocol,`Wrong signature type: ${e}, `+`expected: ${t.serverHostKey}`,"handshake",T.KEY_EXCHANGE_FAILED)}let r=D.readString();D.clear();if(r===undefined){return L(this._protocol,"Malformed packet while reading signature","handshake",T.KEY_EXCHANGE_FAILED)}if(!(r=x(r,e))){return L(this._protocol,"Malformed signature","handshake",T.KEY_EXCHANGE_FAILED)}let i;{D.init(this._hostKey,0);const e=D.readString(true);const t=this._hostKey.slice(D.pos());D.clear();i=P(t,e);if(i instanceof Error){i.level="handshake";return L(this._protocol,i,T.KEY_EXCHANGE_FAILED)}}let s;switch(this.negotiated.serverHostKey){case"rsa-sha2-256":s="sha256";break;case"rsa-sha2-512":s="sha512";break}this._protocol._debug&&this._protocol._debug("Verifying signature ...");const n=i.verify(l,r,s);if(n!==true){if(n instanceof Error){this._protocol._debug&&this._protocol._debug(`Signature verification failed: ${n.stack}`)}else{this._protocol._debug&&this._protocol._debug("Signature verification failed")}return L(this._protocol,"Handshake failed: signature verification failed","handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Verified signature")}else{let e;switch(this.negotiated.serverHostKey){case"rsa-sha2-256":e="sha256";break;case"rsa-sha2-512":e="sha512";break}this._protocol._debug&&this._protocol._debug("Generating signature ...");let t=this._hostKey.sign(l,e);if(t instanceof Error){return L(this._protocol,"Handshake failed: signature generation failed for "+`${this._hostKey.type} host key: ${t.message}`,"handshake",T.KEY_EXCHANGE_FAILED)}t=U(t,this._hostKey.type);if(t===false){return L(this._protocol,"Handshake failed: signature conversion failed for "+`${this._hostKey.type} host key`,"handshake",T.KEY_EXCHANGE_FAILED)}const r=this.negotiated.serverHostKey;const i=Buffer.byteLength(r);const s=4+i+4+t.length;let o=this._protocol._packetRW.write.allocStartKEX;const u=this._protocol._packetRW.write.alloc(1+4+n.length+4+p.length+4+s,true);u[o]=I.KEXDH_REPLY;Q(u,n.length,++o);u.set(n,o+=4);Q(u,p.length,o+=n.length);u.set(p,o+=4);Q(u,s,o+=p.length);Q(u,i,o+=4);u.utf8Write(r,o+=4,i);Q(u,t.length,o+=i);u.set(t,o+=4);if(this._protocol._debug){let e;switch(this.type){case"group":e="KEXDH_REPLY";break;case"groupex":e="KEXDH_GEX_REPLY";break;default:e="KEXECDH_REPLY"}this._protocol._debug(`Outbound: Sending ${e}`)}this._protocol._cipher.encrypt(this._protocol._packetRW.write.finalize(u,true))}trySendNEWKEYS(this);const completeHandshake=()=>{if(!this.sessionID)this.sessionID=l;{const e=Buffer.allocUnsafe(4+i.length);Q(e,i.length,0);e.set(i,4);i=e}const r=C[t.cs.cipher];const s=C[t.sc.cipher];const n=generateKEXVal(r.ivLen,this.hashName,i,l,this.sessionID,"A");const o=generateKEXVal(s.ivLen,this.hashName,i,l,this.sessionID,"B");const p=generateKEXVal(r.keyLen,this.hashName,i,l,this.sessionID,"C");const u=generateKEXVal(s.keyLen,this.hashName,i,l,this.sessionID,"D");let m;let h;if(!r.authLen){m=B[t.cs.mac];h=generateKEXVal(m.len,this.hashName,i,l,this.sessionID,"E")}let g;let _;if(!s.authLen){g=B[t.sc.mac];_=generateKEXVal(g.len,this.hashName,i,l,this.sessionID,"F")}const E={inbound:{onPayload:this._protocol._onPayload,seqno:this._protocol._decipher.inSeqno,decipherInfo:!e?s:r,decipherIV:!e?o:n,decipherKey:!e?u:p,macInfo:!e?g:m,macKey:!e?_:h},outbound:{onWrite:this._protocol._onWrite,seqno:this._protocol._cipher.outSeqno,cipherInfo:e?s:r,cipherIV:e?o:n,cipherKey:e?u:p,macInfo:e?g:m,macKey:e?_:h}};this._protocol._cipher&&this._protocol._cipher.free();this._protocol._decipher&&this._protocol._decipher.free();this._protocol._cipher=k(E);this._protocol._decipher=R(E);const w={read:undefined,write:undefined};switch(t.cs.compress){case"zlib":if(e)w.read=new W;else w.write=new j(this._protocol);break;case"zlib@openssh.com":if(this._protocol._authenticated){if(e)w.read=new W;else w.write=new j(this._protocol);break}default:if(e)w.read=new V;else w.write=new q(this._protocol)}switch(t.sc.compress){case"zlib":if(e)w.write=new j(this._protocol);else w.read=new W;break;case"zlib@openssh.com":if(this._protocol._authenticated){if(e)w.write=new j(this._protocol);else w.read=new W;break}default:if(e)w.write=new q(this._protocol);else w.read=new V}this._protocol._packetRW.read.cleanup();this._protocol._packetRW.write.cleanup();this._protocol._packetRW=w;this._public=null;this._dh=null;this._kexinit=this._protocol._kexinit=undefined;this._remoteKexinit=undefined;this._identRaw=undefined;this._remoteIdentRaw=undefined;this._hostKey=undefined;this._dhData=undefined;this._sig=undefined;this._protocol._onHandshakeComplete(t);return false};if(!e)return completeHandshake();this.finish=completeHandshake}start(){if(!this._protocol._server){if(this._protocol._debug){let e;switch(this.type){case"group":e="KEXDH_INIT";break;default:e="KEXECDH_INIT"}this._protocol._debug(`Outbound: Sending ${e}`)}const e=this.getPublicKey();let t=this._protocol._packetRW.write.allocStartKEX;const r=this._protocol._packetRW.write.alloc(1+4+e.length,true);r[t]=I.KEXDH_INIT;Q(r,e.length,++t);r.set(e,t+=4);this._protocol._cipher.encrypt(this._protocol._packetRW.write.finalize(r,true))}}getPublicKey(){this.generateKeys();const e=this._public;if(e)return this.convertPublicKey(e)}convertPublicKey(e){let t;let r=0;let i=e.length;while(e[r]===0){++r;--i}if(e[r]&128){t=Buffer.allocUnsafe(1+i);t[0]=0;e.copy(t,1,r);return t}if(i!==e.length){t=Buffer.allocUnsafe(i);e.copy(t,0,r);e=t}return e}computeSecret(e){this.generateKeys();try{return convertToMpint(this._dh.computeSecret(e))}catch(e){return e}}parse(e){const t=e[0];switch(this._step){case 1:if(this._protocol._server){if(t!==I.KEXDH_INIT){return L(this._protocol,`Received packet ${t} instead of ${I.KEXDH_INIT}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Received DH Init");D.init(e,1);const r=D.readString();D.clear();if(r===undefined){return L(this._protocol,"Received malformed KEX*_INIT","handshake",T.KEY_EXCHANGE_FAILED)}this._dhData=r;let i=this._protocol._hostKeys[this.negotiated.serverHostKey];if(Array.isArray(i))i=i[0];this._hostKey=i;this.finish()}else{if(t!==I.KEXDH_REPLY){return L(this._protocol,`Received packet ${t} instead of ${I.KEXDH_REPLY}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Received DH Reply");D.init(e,1);let r;let i;let s;if((r=D.readString())===undefined||(i=D.readString())===undefined||(s=D.readString())===undefined){D.clear();return L(this._protocol,"Received malformed KEX*_REPLY","handshake",T.KEY_EXCHANGE_FAILED)}D.clear();D.init(r,0);const n=D.readString(true);D.clear();if(n===undefined){return L(this._protocol,"Received malformed host public key","handshake",T.KEY_EXCHANGE_FAILED)}if(n!==this.negotiated.serverHostKey){switch(this.negotiated.serverHostKey){case"rsa-sha2-256":case"rsa-sha2-512":if(n==="ssh-rsa")break;default:return L(this._protocol,"Host key does not match negotiated type","handshake",T.KEY_EXCHANGE_FAILED)}}this._hostKey=r;this._dhData=i;this._sig=s;let o=false;let p;if(this._protocol._hostVerifier===undefined){p=true;this._protocol._debug&&this._protocol._debug("Host accepted by default (no verification)")}else{p=this._protocol._hostVerifier(r,(e=>{if(o)return;o=true;if(e===false){this._protocol._debug&&this._protocol._debug("Host denied (verification failed)");return L(this._protocol,"Host denied (verification failed)","handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Host accepted (verified)");this._hostVerified=true;if(this._receivedNEWKEYS)this.finish();else trySendNEWKEYS(this)}))}if(p===undefined){++this._step;return}o=true;if(p===false){this._protocol._debug&&this._protocol._debug("Host denied (verification failed)");return L(this._protocol,"Host denied (verification failed)","handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Host accepted (verified)");this._hostVerified=true;trySendNEWKEYS(this)}++this._step;break;case 2:if(t!==I.NEWKEYS){return L(this._protocol,`Received packet ${t} instead of ${I.NEWKEYS}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Inbound: NEWKEYS");this._receivedNEWKEYS=true;++this._step;if(this._protocol._server||this._hostVerified)return this.finish();return false;default:return L(this._protocol,`Received unexpected packet ${t} after NEWKEYS`,"handshake",T.KEY_EXCHANGE_FAILED)}}}class Curve25519Exchange extends KeyExchange{constructor(e,...t){super(...t);this.type="25519";this.hashName=e;this._keys=null}generateKeys(){if(!this._keys)this._keys=u("x25519")}getPublicKey(){this.generateKeys();const e=this._keys.publicKey.export({type:"spki",format:"der"});return e.slice(-32)}convertPublicKey(e){let t;let r=0;let i=e.length;while(e[r]===0){++r;--i}if(e.length===32)return e;if(i!==e.length){t=Buffer.allocUnsafe(i);e.copy(t,0,r);e=t}return e}computeSecret(e){this.generateKeys();try{const t=new h.Writer;t.startSequence();t.startSequence();t.writeOID("1.3.101.110");t.endSequence();t.startSequence(h.BitString);t.writeByte(0);t._ensure(e.length);e.copy(t._buf,t._offset,0,e.length);t._offset+=e.length;t.endSequence();t.endSequence();return convertToMpint(l({privateKey:this._keys.privateKey,publicKey:p({key:t.buffer,type:"spki",format:"der"})}))}catch(e){return e}}}class ECDHExchange extends KeyExchange{constructor(e,t,...r){super(...r);this.type="ecdh";this.curveName=e;this.hashName=t}generateKeys(){if(!this._dh){this._dh=n(this.curveName);this._public=this._dh.generateKeys()}}}class DHGroupExchange extends KeyExchange{constructor(e,...t){super(...t);this.type="groupex";this.hashName=e;this._prime=null;this._generator=null;this._minBits=Y;this._prefBits=dhEstimate(this.negotiated);if(this._protocol._compatFlags&g.BUG_DHGEX_LARGE)this._prefBits=Math.min(this._prefBits,4096);this._maxBits=z}start(){if(this._protocol._server)return;this._protocol._debug&&this._protocol._debug("Outbound: Sending KEXDH_GEX_REQUEST");let e=this._protocol._packetRW.write.allocStartKEX;const t=this._protocol._packetRW.write.alloc(1+4+4+4,true);t[e]=I.KEXDH_GEX_REQUEST;Q(t,this._minBits,++e);Q(t,this._prefBits,e+=4);Q(t,this._maxBits,e+=4);this._protocol._cipher.encrypt(this._protocol._packetRW.write.finalize(t,true))}generateKeys(){if(!this._dh&&this._prime&&this._generator){this._dh=i(this._prime,this._generator);this._public=this._dh.generateKeys()}}setDHParams(e,t){if(!Buffer.isBuffer(e))throw new Error("Invalid prime value");if(!Buffer.isBuffer(t))throw new Error("Invalid generator value");this._prime=e;this._generator=t}getDHParams(){if(this._dh){return{prime:convertToMpint(this._dh.getPrime()),generator:convertToMpint(this._dh.getGenerator())}}}parse(e){const t=e[0];switch(this._step){case 1:if(this._protocol._server){if(t!==I.KEXDH_GEX_REQUEST){return L(this._protocol,`Received packet ${t} instead of `+I.KEXDH_GEX_REQUEST,"handshake",T.KEY_EXCHANGE_FAILED)}return L(this._protocol,"Group exchange not implemented for server","handshake",T.KEY_EXCHANGE_FAILED)}if(t!==I.KEXDH_GEX_GROUP){return L(this._protocol,`Received packet ${t} instead of ${I.KEXDH_GEX_GROUP}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Received DH GEX Group");D.init(e,1);let r;let i;if((r=D.readString())===undefined||(i=D.readString())===undefined){D.clear();return L(this._protocol,"Received malformed KEXDH_GEX_GROUP","handshake",T.KEY_EXCHANGE_FAILED)}D.clear();this.setDHParams(r,i);this.generateKeys();const s=this.getPublicKey();this._protocol._debug&&this._protocol._debug("Outbound: Sending KEXDH_GEX_INIT");let n=this._protocol._packetRW.write.allocStartKEX;const o=this._protocol._packetRW.write.alloc(1+4+s.length,true);o[n]=I.KEXDH_GEX_INIT;Q(o,s.length,++n);o.set(s,n+=4);this._protocol._cipher.encrypt(this._protocol._packetRW.write.finalize(o,true));++this._step;break;case 2:if(this._protocol._server){if(t!==I.KEXDH_GEX_INIT){return L(this._protocol,`Received packet ${t} instead of ${I.KEXDH_GEX_INIT}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Received DH GEX Init");return L(this._protocol,"Group exchange not implemented for server","handshake",T.KEY_EXCHANGE_FAILED)}else if(t!==I.KEXDH_GEX_REPLY){return L(this._protocol,`Received packet ${t} instead of ${I.KEXDH_GEX_REPLY}`,"handshake",T.KEY_EXCHANGE_FAILED)}this._protocol._debug&&this._protocol._debug("Received DH GEX Reply");this._step=1;e[0]=I.KEXDH_REPLY;this.parse=KeyExchange.prototype.parse;this.parse(e)}}}class DHExchange extends KeyExchange{constructor(e,t,...r){super(...r);this.type="group";this.groupName=e;this.hashName=t}start(){if(!this._protocol._server){this._protocol._debug&&this._protocol._debug("Outbound: Sending KEXDH_INIT");const e=this.getPublicKey();let t=this._protocol._packetRW.write.allocStartKEX;const r=this._protocol._packetRW.write.alloc(1+4+e.length,true);r[t]=I.KEXDH_INIT;Q(r,e.length,++t);r.set(e,t+=4);this._protocol._cipher.encrypt(this._protocol._packetRW.write.finalize(r,true))}}generateKeys(){if(!this._dh){this._dh=s(this.groupName);this._public=this._dh.generateKeys()}}getDHParams(){if(this._dh){return{prime:convertToMpint(this._dh.getPrime()),generator:convertToMpint(this._dh.getGenerator())}}}}return(e,...t)=>{if(typeof e!=="object"||e===null)throw new Error("Invalid negotiated argument");const r=e.kex;if(typeof r==="string"){t=[e,...t];switch(r){case"curve25519-sha256":case"curve25519-sha256@libssh.org":if(!_)break;return new Curve25519Exchange("sha256",...t);case"ecdh-sha2-nistp256":return new ECDHExchange("prime256v1","sha256",...t);case"ecdh-sha2-nistp384":return new ECDHExchange("secp384r1","sha384",...t);case"ecdh-sha2-nistp521":return new ECDHExchange("secp521r1","sha512",...t);case"diffie-hellman-group1-sha1":return new DHExchange("modp2","sha1",...t);case"diffie-hellman-group14-sha1":return new DHExchange("modp14","sha1",...t);case"diffie-hellman-group14-sha256":return new DHExchange("modp14","sha256",...t);case"diffie-hellman-group15-sha512":return new DHExchange("modp15","sha512",...t);case"diffie-hellman-group16-sha512":return new DHExchange("modp16","sha512",...t);case"diffie-hellman-group17-sha512":return new DHExchange("modp17","sha512",...t);case"diffie-hellman-group18-sha512":return new DHExchange("modp18","sha512",...t);case"diffie-hellman-group-exchange-sha1":return new DHGroupExchange("sha1",...t);case"diffie-hellman-group-exchange-sha256":return new DHGroupExchange("sha256",...t)}throw new Error(`Unsupported key exchange algorithm: ${r}`)}throw new Error(`Invalid key exchange type: ${r}`)}})();const te=(()=>{const e=["kex","serverHostKey",["cs","cipher"],["sc","cipher"],["cs","mac"],["sc","mac"],["cs","compress"],["sc","compress"],["cs","lang"],["sc","lang"]];return class KexInit{constructor(t){if(typeof t!=="object"||t===null)throw new TypeError("Argument must be an object");const r={kex:undefined,serverHostKey:undefined,cs:{cipher:undefined,mac:undefined,compress:undefined,lang:undefined},sc:{cipher:undefined,mac:undefined,compress:undefined,lang:undefined},all:undefined};let i=0;for(const s of e){let e;let n;let o;let p;if(typeof s==="string"){e=r;n=t[s];o=p=s}else{const i=s[0];e=r[i];p=s[1];n=t[i][p];o=`${i}.${p}`}const l={array:undefined,buffer:undefined};if(Buffer.isBuffer(n)){l.array=(""+n).split(",");l.buffer=n;i+=4+n.length}else{if(typeof n==="string")n=n.split(",");if(Array.isArray(n)){l.array=n;l.buffer=Buffer.from(n.join(","))}else{throw new TypeError(`Invalid \`${o}\` type: ${typeof n}`)}i+=4+l.buffer.length}e[p]=l}const s=Buffer.allocUnsafe(i);r.all=s;let n=0;for(const t of e){let e;if(typeof t==="string")e=r[t].buffer;else e=r[t[0]][t[1]].buffer;n=Q(s,e.length,n);s.set(e,n);n+=e.length}this.totalSize=i;this.lists=r}copyAllTo(e,t){const r=this.lists.all;if(typeof t!=="number")throw new TypeError(`Invalid offset value: ${typeof t}`);if(e.length-t<r.length)throw new Error("Insufficient space to copy list");e.set(r,t);return r.length}}})();const re=(()=>{const e=Buffer.allocUnsafe(4);return(t,r)=>{Q(e,r.length,0);t.update(e);t.update(r)}})();function generateKEXVal(e,t,r,i,s,n){let p;if(e){let l=o(t).update(r).update(i).update(n).update(s).digest();while(l.length<e){const e=o(t).update(r).update(i).update(l).digest();const s=Buffer.allocUnsafe(l.length+e.length);s.set(l,0);s.set(e,l.length);l=s}if(l.length===e)p=l;else p=new G(l.buffer,l.byteOffset,e)}else{p=J}return p}function onKEXPayload(e,t){if(t.length===0){this._debug&&this._debug("Inbound: Skipping empty packet payload");return}if(this._skipNextInboundPacket){this._skipNextInboundPacket=false;return}t=this._packetRW.read.read(t);const i=t[0];switch(i){case I.DISCONNECT:case I.IGNORE:case I.UNIMPLEMENTED:case I.DEBUG:if(!$)$=r(172);return $[i](this,t);case I.KEXINIT:if(!e.firstPacket){return L(this,"Received extra KEXINIT during handshake","handshake",T.KEY_EXCHANGE_FAILED)}e.firstPacket=false;return handleKexInit(this,t);default:if(i<20||i>49){return L(this,`Received unexpected packet type ${i}`,"handshake",T.KEY_EXCHANGE_FAILED)}}return this._kex.parse(t)}function dhEstimate(e){const t=C[e.cs.cipher];const r=C[e.sc.cipher];const i=Math.max(0,t.sslName==="des-ede3-cbc"?14:t.keyLen,t.blockLen,t.ivLen,r.sslName==="des-ede3-cbc"?14:r.keyLen,r.blockLen,r.ivLen)*8;if(i<=112)return 2048;if(i<=128)return 3072;if(i<=192)return 7680;return 8192}function trySendNEWKEYS(e){if(!e._sentNEWKEYS){e._protocol._debug&&e._protocol._debug("Outbound: Sending NEWKEYS");const t=e._protocol._packetRW.write.allocStartKEX;const r=e._protocol._packetRW.write.alloc(1,true);r[t]=I.NEWKEYS;e._protocol._cipher.encrypt(e._protocol._packetRW.write.finalize(r,true));e._sentNEWKEYS=true}}e.exports={KexInit:te,kexinit:kexinit,onKEXPayload:onKEXPayload,DEFAULT_KEXINIT:new te({kex:E,serverHostKey:w,cs:{cipher:v,mac:b,compress:y,lang:[]},sc:{cipher:v,mac:b,compress:y,lang:[]}}),HANDLERS:{[I.KEXINIT]:handleKexInit}}},2218:(e,t,r)=>{"use strict";const{createDecipheriv:i,createECDH:s,createHash:n,createHmac:o,createSign:p,createVerify:l,getCiphers:u,sign:m,verify:h}=r(6113);const g=u();const{Ber:_}=r(970);const E=r(5447).pbkdf;const{CIPHER_INFO:w}=r(5708);const{eddsaSupported:v,SUPPORTED_CIPHER:b}=r(6832);const{bufferSlice:y,makeBufferParser:T,readString:I,readUInt32BE:C,writeUInt32BE:k}=r(9475);const R=Symbol("Hash Algorithm");const B=Symbol("Private key PEM");const P=Symbol("Public key PEM");const O=Symbol("Public key SSH");const D=Symbol("Decrypted Key");const U=Object.create(null);{const e=Object.keys(w);for(let t=0;t<e.length;++t){const r=w[e[t]].sslName;if(!r||U[r])continue;U[r]=w[e[t]]}}const L=T();function makePEM(e,t){t=t.base64Slice(0,t.length);let r=t.replace(/.{64}/g,"$&\n");if(t.length&63)r+="\n";return`-----BEGIN ${e} KEY-----\n${r}-----END ${e} KEY-----`}function combineBuffers(e,t){const r=Buffer.allocUnsafe(e.length+t.length);r.set(e,0);r.set(t,e.length);return r}function skipFields(e,t){const r=e.length;let i=e._pos||0;for(let s=0;s<t;++s){const t=r-i;if(i>=r||t<4)return false;const s=C(e,i);if(t<4+s)return false;i+=4+s}e._pos=i;return true}function genOpenSSLRSAPub(e,t){const r=new _.Writer;r.startSequence();r.startSequence();r.writeOID("1.2.840.113549.1.1.1");r.writeNull();r.endSequence();r.startSequence(_.BitString);r.writeByte(0);r.startSequence();r.writeBuffer(e,_.Integer);r.writeBuffer(t,_.Integer);r.endSequence();r.endSequence();r.endSequence();return makePEM("PUBLIC",r.buffer)}function genOpenSSHRSAPub(e,t){const r=Buffer.allocUnsafe(4+7+4+t.length+4+e.length);k(r,7,0);r.utf8Write("ssh-rsa",4,7);let i=4+7;k(r,t.length,i);r.set(t,i+=4);k(r,e.length,i+=t.length);r.set(e,i+4);return r}const G=(()=>{function genRSAASN1Buf(e,t,r,i,s,n,o,p){const l=new _.Writer;l.startSequence();l.writeInt(0,_.Integer);l.writeBuffer(e,_.Integer);l.writeBuffer(t,_.Integer);l.writeBuffer(r,_.Integer);l.writeBuffer(i,_.Integer);l.writeBuffer(s,_.Integer);l.writeBuffer(n,_.Integer);l.writeBuffer(o,_.Integer);l.writeBuffer(p,_.Integer);l.endSequence();return l.buffer}function bigIntFromBuffer(e){return BigInt(`0x${e.hexSlice(0,e.length)}`)}function bigIntToBuffer(e){let t=e.toString(16);if((t.length&1)!==0){t=`0${t}`}else{const e=t.charCodeAt(0);if(e===56||e===57||e>=97&&e<=102){t=`00${t}`}}return Buffer.from(t,"hex")}return function genOpenSSLRSAPriv(e,t,r,i,s,n){const o=bigIntFromBuffer(r);const p=bigIntToBuffer(o%(bigIntFromBuffer(s)-1n));const l=bigIntToBuffer(o%(bigIntFromBuffer(n)-1n));return makePEM("RSA PRIVATE",genRSAASN1Buf(e,t,r,s,n,p,l,i))}})();function genOpenSSLDSAPub(e,t,r,i){const s=new _.Writer;s.startSequence();s.startSequence();s.writeOID("1.2.840.10040.4.1");s.startSequence();s.writeBuffer(e,_.Integer);s.writeBuffer(t,_.Integer);s.writeBuffer(r,_.Integer);s.endSequence();s.endSequence();s.startSequence(_.BitString);s.writeByte(0);s.writeBuffer(i,_.Integer);s.endSequence();s.endSequence();return makePEM("PUBLIC",s.buffer)}function genOpenSSHDSAPub(e,t,r,i){const s=Buffer.allocUnsafe(4+7+4+e.length+4+t.length+4+r.length+4+i.length);k(s,7,0);s.utf8Write("ssh-dss",4,7);let n=4+7;k(s,e.length,n);s.set(e,n+=4);k(s,t.length,n+=e.length);s.set(t,n+=4);k(s,r.length,n+=t.length);s.set(r,n+=4);k(s,i.length,n+=r.length);s.set(i,n+4);return s}function genOpenSSLDSAPriv(e,t,r,i,s){const n=new _.Writer;n.startSequence();n.writeInt(0,_.Integer);n.writeBuffer(e,_.Integer);n.writeBuffer(t,_.Integer);n.writeBuffer(r,_.Integer);n.writeBuffer(i,_.Integer);n.writeBuffer(s,_.Integer);n.endSequence();return makePEM("DSA PRIVATE",n.buffer)}function genOpenSSLEdPub(e){const t=new _.Writer;t.startSequence();t.startSequence();t.writeOID("1.3.101.112");t.endSequence();t.startSequence(_.BitString);t.writeByte(0);t._ensure(e.length);t._buf.set(e,t._offset);t._offset+=e.length;t.endSequence();t.endSequence();return makePEM("PUBLIC",t.buffer)}function genOpenSSHEdPub(e){const t=Buffer.allocUnsafe(4+11+4+e.length);k(t,11,0);t.utf8Write("ssh-ed25519",4,11);k(t,e.length,15);t.set(e,19);return t}function genOpenSSLEdPriv(e){const t=new _.Writer;t.startSequence();t.writeInt(0,_.Integer);t.startSequence();t.writeOID("1.3.101.112");t.endSequence();t.startSequence(_.OctetString);t.writeBuffer(e,_.OctetString);t.endSequence();t.endSequence();return makePEM("PRIVATE",t.buffer)}function genOpenSSLECDSAPub(e,t){const r=new _.Writer;r.startSequence();r.startSequence();r.writeOID("1.2.840.10045.2.1");r.writeOID(e);r.endSequence();r.startSequence(_.BitString);r.writeByte(0);r._ensure(t.length);r._buf.set(t,r._offset);r._offset+=t.length;r.endSequence();r.endSequence();return makePEM("PUBLIC",r.buffer)}function genOpenSSHECDSAPub(e,t){let r;switch(e){case"1.2.840.10045.3.1.7":r="nistp256";break;case"1.3.132.0.34":r="nistp384";break;case"1.3.132.0.35":r="nistp521";break;default:return}const i=Buffer.allocUnsafe(4+19+4+8+4+t.length);k(i,19,0);i.utf8Write(`ecdsa-sha2-${r}`,4,19);k(i,8,23);i.utf8Write(r,27,8);k(i,t.length,35);i.set(t,39);return i}function genOpenSSLECDSAPriv(e,t,r){const i=new _.Writer;i.startSequence();i.writeInt(1,_.Integer);i.writeBuffer(r,_.OctetString);i.startSequence(160);i.writeOID(e);i.endSequence();i.startSequence(161);i.startSequence(_.BitString);i.writeByte(0);i._ensure(t.length);i._buf.set(t,i._offset);i._offset+=t.length;i.endSequence();i.endSequence();i.endSequence();return makePEM("EC PRIVATE",i.buffer)}function genOpenSSLECDSAPubFromPriv(e,t){const r=s(e);r.setPrivateKey(t);return r.getPublicKey()}const x={sign:(()=>{if(typeof m==="function"){return function sign(e,t){const r=this[B];if(r===null)return new Error("No private key available");if(!t||typeof t!=="string")t=this[R];try{return m(t,e,r)}catch(e){return e}}}return function sign(e,t){const r=this[B];if(r===null)return new Error("No private key available");if(!t||typeof t!=="string")t=this[R];const i=p(t);i.update(e);try{return i.sign(r)}catch(e){return e}}})(),verify:(()=>{if(typeof h==="function"){return function verify(e,t,r){const i=this[P];if(i===null)return new Error("No public key available");if(!r||typeof r!=="string")r=this[R];try{return h(r,e,i,t)}catch(e){return e}}}return function verify(e,t,r){const i=this[P];if(i===null)return new Error("No public key available");if(!r||typeof r!=="string")r=this[R];const s=l(r);s.update(e);try{return s.verify(i,t)}catch(e){return e}}})(),isPrivateKey:function isPrivateKey(){return this[B]!==null},getPrivatePEM:function getPrivatePEM(){return this[B]},getPublicPEM:function getPublicPEM(){return this[P]},getPublicSSH:function getPublicSSH(){return this[O]},equals:function equals(e){const t=parseKey(e);if(t instanceof Error)return false;return this.type===t.type&&this[B]===t[B]&&this[P]===t[P]&&this[O]===t[O]}};function OpenSSH_Private(e,t,r,i,s,n,o){this.type=e;this.comment=t;this[B]=r;this[P]=i;this[O]=s;this[R]=n;this[D]=o}OpenSSH_Private.prototype=x;{const e=/^-----BEGIN OPENSSH PRIVATE KEY-----(?:\r\n|\n)([\s\S]+)(?:\r\n|\n)-----END OPENSSH PRIVATE KEY-----$/;OpenSSH_Private.parse=(t,r)=>{const s=e.exec(t);if(s===null)return null;let n;const o=Buffer.from(s[1],"base64");if(o.length<31)return new Error("Malformed OpenSSH private key");const p=o.utf8Slice(0,15);if(p!=="openssh-key-v1\0")return new Error(`Unsupported OpenSSH key magic: ${p}`);const l=I(o,15,true);if(l===undefined)return new Error("Malformed OpenSSH private key");if(l!=="none"&&b.indexOf(l)===-1)return new Error(`Unsupported cipher for OpenSSH key: ${l}`);const u=I(o,o._pos,true);if(u===undefined)return new Error("Malformed OpenSSH private key");if(u!=="none"){if(l==="none")return new Error("Malformed OpenSSH private key");if(u!=="bcrypt")return new Error(`Unsupported kdf name for OpenSSH key: ${u}`);if(!r){return new Error("Encrypted private OpenSSH key detected, but no passphrase given")}}else if(l!=="none"){return new Error("Malformed OpenSSH private key")}let m;let h;let g;if(l!=="none")m=w[l];const _=I(o,o._pos);if(_===undefined)return new Error("Malformed OpenSSH private key");if(_.length){switch(u){case"none":return new Error("Malformed OpenSSH private key");case"bcrypt":const e=I(_,0);if(e===undefined||_._pos+4>_.length)return new Error("Malformed OpenSSH private key");const t=C(_,_._pos);const i=Buffer.allocUnsafe(m.keyLen+m.ivLen);const s=E(r,r.length,e,e.length,i,i.length,t);if(s!==0)return new Error("Failed to generate information to decrypt key");h=y(i,0,m.keyLen);g=y(i,m.keyLen,i.length);break}}else if(u!=="none"){return new Error("Malformed OpenSSH private key")}if(o._pos+3>=o.length)return new Error("Malformed OpenSSH private key");const v=C(o,o._pos);o._pos+=4;if(v>0){for(let e=0;e<v;++e){const e=I(o,o._pos);if(e===undefined)return new Error("Malformed OpenSSH private key");const t=I(e,0,true);if(t===undefined)return new Error("Malformed OpenSSH private key")}let e=I(o,o._pos);if(e===undefined)return new Error("Malformed OpenSSH private key");if(h!==undefined){if(e.length<m.blockLen||e.length%m.blockLen!==0){return new Error("Malformed OpenSSH private key")}try{const t={authTagLength:m.authLen};const r=i(m.sslName,h,g,t);if(m.authLen>0){if(o.length-o._pos<m.authLen)return new Error("Malformed OpenSSH private key");r.setAuthTag(y(o,o._pos,o._pos+=m.authLen))}e=combineBuffers(r.update(e),r.final())}catch(e){return e}}if(o._pos!==o.length)return new Error("Malformed OpenSSH private key");n=parseOpenSSHPrivKeys(e,v,h!==undefined)}else{n=[]}if(n instanceof Error)return n;return n[0]};function parseOpenSSHPrivKeys(e,t,r){const i=[];if(e.length<8)return new Error("Malformed OpenSSH private key");const s=C(e,0);const n=C(e,4);if(s!==n){if(r){return new Error("OpenSSH key integrity check failed -- bad passphrase?")}return new Error("OpenSSH key integrity check failed")}e._pos=8;let o;let p;for(o=0;o<t;++o){let t;let s;let n;let o;const l=I(e,e._pos,true);if(l===undefined)return new Error("Malformed OpenSSH private key");switch(l){case"ssh-rsa":{const r=I(e,e._pos);if(r===undefined)return new Error("Malformed OpenSSH private key");const i=I(e,e._pos);if(i===undefined)return new Error("Malformed OpenSSH private key");const p=I(e,e._pos);if(p===undefined)return new Error("Malformed OpenSSH private key");const l=I(e,e._pos);if(l===undefined)return new Error("Malformed OpenSSH private key");const u=I(e,e._pos);if(u===undefined)return new Error("Malformed OpenSSH private key");const m=I(e,e._pos);if(m===undefined)return new Error("Malformed OpenSSH private key");n=genOpenSSLRSAPub(r,i);o=genOpenSSHRSAPub(r,i);s=G(r,i,p,l,u,m);t="sha1";break}case"ssh-dss":{const r=I(e,e._pos);if(r===undefined)return new Error("Malformed OpenSSH private key");const i=I(e,e._pos);if(i===undefined)return new Error("Malformed OpenSSH private key");const p=I(e,e._pos);if(p===undefined)return new Error("Malformed OpenSSH private key");const l=I(e,e._pos);if(l===undefined)return new Error("Malformed OpenSSH private key");const u=I(e,e._pos);if(u===undefined)return new Error("Malformed OpenSSH private key");n=genOpenSSLDSAPub(r,i,p,l);o=genOpenSSHDSAPub(r,i,p,l);s=genOpenSSLDSAPriv(r,i,p,l,u);t="sha1";break}case"ssh-ed25519":{if(!v)return new Error(`Unsupported OpenSSH private key type: ${l}`);const r=I(e,e._pos);if(r===undefined||r.length!==32)return new Error("Malformed OpenSSH private key");const i=I(e,e._pos);if(i===undefined||i.length!==64)return new Error("Malformed OpenSSH private key");n=genOpenSSLEdPub(r);o=genOpenSSHEdPub(r);s=genOpenSSLEdPriv(y(i,0,32));t=null;break}case"ecdsa-sha2-nistp256":t="sha256";p="1.2.840.10045.3.1.7";case"ecdsa-sha2-nistp384":if(t===undefined){t="sha384";p="1.3.132.0.34"}case"ecdsa-sha2-nistp521":{if(t===undefined){t="sha512";p="1.3.132.0.35"}if(!skipFields(e,1))return new Error("Malformed OpenSSH private key");const r=I(e,e._pos);if(r===undefined)return new Error("Malformed OpenSSH private key");const i=I(e,e._pos);if(i===undefined)return new Error("Malformed OpenSSH private key");n=genOpenSSLECDSAPub(p,r);o=genOpenSSHECDSAPub(p,r);s=genOpenSSLECDSAPriv(p,r,i);break}default:return new Error(`Unsupported OpenSSH private key type: ${l}`)}const u=I(e,e._pos,true);if(u===undefined)return new Error("Malformed OpenSSH private key");i.push(new OpenSSH_Private(l,u,s,n,o,t,r))}let l=0;for(o=e._pos;o<e.length;++o){if(e[o]!==++l%255)return new Error("Malformed OpenSSH private key")}return i}}function OpenSSH_Old_Private(e,t,r,i,s,n,o){this.type=e;this.comment=t;this[B]=r;this[P]=i;this[O]=s;this[R]=n;this[D]=o}OpenSSH_Old_Private.prototype=x;{const e=/^-----BEGIN (RSA|DSA|EC) PRIVATE KEY-----(?:\r\n|\n)((?:[^:]+:\s*[\S].*(?:\r\n|\n))*)([\s\S]+)(?:\r\n|\n)-----END (RSA|DSA|EC) PRIVATE KEY-----$/;OpenSSH_Old_Private.parse=(t,r)=>{const s=e.exec(t);if(s===null)return null;let o=Buffer.from(s[3],"base64");let p=s[2];let l=false;if(p!==undefined){p=p.split(/\r\n|\n/g);for(let e=0;e<p.length;++e){const t=p[e];let s=t.indexOf(":");if(t.slice(0,s)==="DEK-Info"){const e=t.slice(s+2);s=e.indexOf(",");if(s===-1)continue;const p=e.slice(0,s).toLowerCase();if(g.indexOf(p)===-1){return new Error(`Cipher (${p}) not supported `+"for encrypted OpenSSH private key")}const u=U[p];if(!u){return new Error(`Cipher (${p}) not supported `+"for encrypted OpenSSH private key")}const m=Buffer.from(e.slice(s+1),"hex");if(m.length!==u.ivLen)return new Error("Malformed encrypted OpenSSH private key");if(!r){return new Error("Encrypted OpenSSH private key detected, but no passphrase given")}const h=y(m,0,8);let _=n("md5").update(r).update(h).digest();while(_.length<u.keyLen){_=combineBuffers(_,n("md5").update(_).update(r).update(h).digest())}if(_.length>u.keyLen)_=y(_,0,u.keyLen);try{const e=i(p,_,m);e.setAutoPadding(false);o=combineBuffers(e.update(o),e.final());l=true}catch(e){return e}}}}let u;let m;let h;let E;let w;let v;let b="Malformed OpenSSH private key";if(l)b+=". Bad passphrase?";switch(s[1]){case"RSA":u="ssh-rsa";m=makePEM("RSA PRIVATE",o);try{v=new _.Reader(o);v.readSequence();v.readInt();const e=v.readString(_.Integer,true);if(e===null)return new Error(b);const t=v.readString(_.Integer,true);if(t===null)return new Error(b);h=genOpenSSLRSAPub(e,t);E=genOpenSSHRSAPub(e,t)}catch{return new Error(b)}w="sha1";break;case"DSA":u="ssh-dss";m=makePEM("DSA PRIVATE",o);try{v=new _.Reader(o);v.readSequence();v.readInt();const e=v.readString(_.Integer,true);if(e===null)return new Error(b);const t=v.readString(_.Integer,true);if(t===null)return new Error(b);const r=v.readString(_.Integer,true);if(r===null)return new Error(b);const i=v.readString(_.Integer,true);if(i===null)return new Error(b);h=genOpenSSLDSAPub(e,t,r,i);E=genOpenSSHDSAPub(e,t,r,i)}catch{return new Error(b)}w="sha1";break;case"EC":let e;let t;let r;try{v=new _.Reader(o);v.readSequence();v.readInt();t=v.readString(_.OctetString,true);v.readByte();const i=v.readLength();if(i!==null){v._offset=i;r=v.readOID();if(r===null)return new Error(b);switch(r){case"1.2.840.10045.3.1.7":e="prime256v1";u="ecdsa-sha2-nistp256";w="sha256";break;case"1.3.132.0.34":e="secp384r1";u="ecdsa-sha2-nistp384";w="sha384";break;case"1.3.132.0.35":e="secp521r1";u="ecdsa-sha2-nistp521";w="sha512";break;default:return new Error(`Unsupported private key EC OID: ${r}`)}}else{return new Error(b)}}catch{return new Error(b)}m=makePEM("EC PRIVATE",o);const i=genOpenSSLECDSAPubFromPriv(e,t);h=genOpenSSLECDSAPub(r,i);E=genOpenSSHECDSAPub(r,i);break}return new OpenSSH_Old_Private(u,"",m,h,E,w,l)}}function PPK_Private(e,t,r,i,s,n,o){this.type=e;this.comment=t;this[B]=r;this[P]=i;this[O]=s;this[R]=n;this[D]=o}PPK_Private.prototype=x;{const e=Buffer.alloc(0);const t=Buffer.from([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);const r=Buffer.from([0,0,0,0]);const s=Buffer.from([0,0,0,1]);const p=/^PuTTY-User-Key-File-2: (ssh-(?:rsa|dss))\r?\nEncryption: (aes256-cbc|none)\r?\nComment: ([^\r\n]*)\r?\nPublic-Lines: \d+\r?\n([\s\S]+?)\r?\nPrivate-Lines: \d+\r?\n([\s\S]+?)\r?\nPrivate-MAC: ([^\r\n]+)/;PPK_Private.parse=(l,u)=>{const m=p.exec(l);if(m===null)return null;const h=m[2];const g=h!=="none";if(g&&!u){return new Error("Encrypted PPK private key detected, but no passphrase given")}let _=Buffer.from(m[5],"base64");if(g){const e=w[h];let o=combineBuffers(n("sha1").update(r).update(u).digest(),n("sha1").update(s).update(u).digest());if(o.length>e.keyLen)o=y(o,0,e.keyLen);try{const r=i(e.sslName,o,t);r.setAutoPadding(false);_=combineBuffers(r.update(_),r.final())}catch(e){return e}}const E=m[1];const v=m[3];const b=Buffer.from(m[4],"base64");const T=m[6];const C=E.length;const R=h.length;const B=Buffer.byteLength(v);const P=b.length;const O=_.length;const D=Buffer.allocUnsafe(4+C+4+R+4+B+4+P+4+O);let U=0;k(D,C,U);D.utf8Write(E,U+=4,C);k(D,R,U+=C);D.utf8Write(h,U+=4,R);k(D,B,U+=R);D.utf8Write(v,U+=4,B);k(D,P,U+=B);D.set(b,U+=4);k(D,O,U+=P);D.set(_,U+4);if(!u)u=e;const L=o("sha1",n("sha1").update("putty-private-key-file-mac-key").update(u).digest()).update(D).digest("hex");if(L!==T){if(g){return new Error("PPK private key integrity check failed -- bad passphrase?")}return new Error("PPK private key integrity check failed")}let x;let Q;let V;b._pos=0;skipFields(b,1);switch(E){case"ssh-rsa":{const e=I(b,b._pos);if(e===undefined)return new Error("Malformed PPK public key");const t=I(b,b._pos);if(t===undefined)return new Error("Malformed PPK public key");const r=I(_,0);if(r===undefined)return new Error("Malformed PPK private key");const i=I(_,_._pos);if(i===undefined)return new Error("Malformed PPK private key");const s=I(_,_._pos);if(s===undefined)return new Error("Malformed PPK private key");const n=I(_,_._pos);if(n===undefined)return new Error("Malformed PPK private key");x=genOpenSSLRSAPub(t,e);Q=genOpenSSHRSAPub(t,e);V=G(t,e,r,n,i,s);break}case"ssh-dss":{const e=I(b,b._pos);if(e===undefined)return new Error("Malformed PPK public key");const t=I(b,b._pos);if(t===undefined)return new Error("Malformed PPK public key");const r=I(b,b._pos);if(r===undefined)return new Error("Malformed PPK public key");const i=I(b,b._pos);if(i===undefined)return new Error("Malformed PPK public key");const s=I(_,0);if(s===undefined)return new Error("Malformed PPK private key");x=genOpenSSLDSAPub(e,t,r,i);Q=genOpenSSHDSAPub(e,t,r,i);V=genOpenSSLDSAPriv(e,t,r,i,s);break}}return new PPK_Private(E,v,V,x,Q,"sha1",g)}}function OpenSSH_Public(e,t,r,i,s){this.type=e;this.comment=t;this[B]=null;this[P]=r;this[O]=i;this[R]=s;this[D]=false}OpenSSH_Public.prototype=x;{let e;if(v)e=/^(((?:ssh-(?:rsa|dss|ed25519))|ecdsa-sha2-nistp(?:256|384|521))(?:-cert-v0[01]@openssh.com)?) ([A-Z0-9a-z/+=]+)(?:$|\s+([\S].*)?)$/;else e=/^(((?:ssh-(?:rsa|dss))|ecdsa-sha2-nistp(?:256|384|521))(?:-cert-v0[01]@openssh.com)?) ([A-Z0-9a-z/+=]+)(?:$|\s+([\S].*)?)$/;OpenSSH_Public.parse=t=>{const r=e.exec(t);if(r===null)return null;const i=r[1];const s=r[2];const n=Buffer.from(r[3],"base64");const o=r[4]||"";const p=I(n,n._pos,true);if(p===undefined||p.indexOf(s)!==0)return new Error("Malformed OpenSSH public key");return parseDER(n,s,o,i)}}function RFC4716_Public(e,t,r,i,s){this.type=e;this.comment=t;this[B]=null;this[P]=r;this[O]=i;this[R]=s;this[D]=false}RFC4716_Public.prototype=x;{const e=/^---- BEGIN SSH2 PUBLIC KEY ----(?:\r?\n)((?:.{0,72}\r?\n)+)---- END SSH2 PUBLIC KEY ----$/;const t=/^[A-Z0-9a-z/+=\r\n]+$/;const r=/^([\x21-\x39\x3B-\x7E]{1,64}): ((?:[^\\]*\\\r?\n)*[^\r\n]+)\r?\n/gm;const i=/\\\r?\n/g;RFC4716_Public.parse=s=>{let n=e.exec(s);if(n===null)return null;const o=n[1];let p=0;let l="";while(n=r.exec(o)){const e=n[1];const t=n[2].replace(i,"");if(t.length>1024){r.lastIndex=0;return new Error("Malformed RFC4716 public key")}p=r.lastIndex;if(e.toLowerCase()==="comment"){l=t;if(l.length>1&&l.charCodeAt(0)===34&&l.charCodeAt(l.length-1)===34){l=l.slice(1,-1)}}}let u=o.slice(p);if(!t.test(u))return new Error("Malformed RFC4716 public key");u=Buffer.from(u,"base64");const m=I(u,0,true);if(m===undefined)return new Error("Malformed RFC4716 public key");let h=null;let g=null;switch(m){case"ssh-rsa":{const e=I(u,u._pos);if(e===undefined)return new Error("Malformed RFC4716 public key");const t=I(u,u._pos);if(t===undefined)return new Error("Malformed RFC4716 public key");h=genOpenSSLRSAPub(t,e);g=genOpenSSHRSAPub(t,e);break}case"ssh-dss":{const e=I(u,u._pos);if(e===undefined)return new Error("Malformed RFC4716 public key");const t=I(u,u._pos);if(t===undefined)return new Error("Malformed RFC4716 public key");const r=I(u,u._pos);if(r===undefined)return new Error("Malformed RFC4716 public key");const i=I(u,u._pos);if(i===undefined)return new Error("Malformed RFC4716 public key");h=genOpenSSLDSAPub(e,t,r,i);g=genOpenSSHDSAPub(e,t,r,i);break}default:return new Error("Malformed RFC4716 public key")}return new RFC4716_Public(m,l,h,g,"sha1")}}function parseDER(e,t,r,i){if(!isSupportedKeyType(t))return new Error(`Unsupported OpenSSH public key type: ${t}`);let s;let n;let o=null;let p=null;switch(t){case"ssh-rsa":{const t=I(e,e._pos||0);if(t===undefined)return new Error("Malformed OpenSSH public key");const r=I(e,e._pos);if(r===undefined)return new Error("Malformed OpenSSH public key");o=genOpenSSLRSAPub(r,t);p=genOpenSSHRSAPub(r,t);s="sha1";break}case"ssh-dss":{const t=I(e,e._pos||0);if(t===undefined)return new Error("Malformed OpenSSH public key");const r=I(e,e._pos);if(r===undefined)return new Error("Malformed OpenSSH public key");const i=I(e,e._pos);if(i===undefined)return new Error("Malformed OpenSSH public key");const n=I(e,e._pos);if(n===undefined)return new Error("Malformed OpenSSH public key");o=genOpenSSLDSAPub(t,r,i,n);p=genOpenSSHDSAPub(t,r,i,n);s="sha1";break}case"ssh-ed25519":{const t=I(e,e._pos||0);if(t===undefined||t.length!==32)return new Error("Malformed OpenSSH public key");o=genOpenSSLEdPub(t);p=genOpenSSHEdPub(t);s=null;break}case"ecdsa-sha2-nistp256":s="sha256";n="1.2.840.10045.3.1.7";case"ecdsa-sha2-nistp384":if(s===undefined){s="sha384";n="1.3.132.0.34"}case"ecdsa-sha2-nistp521":{if(s===undefined){s="sha512";n="1.3.132.0.35"}if(!skipFields(e,1))return new Error("Malformed OpenSSH public key");const t=I(e,e._pos||0);if(t===undefined)return new Error("Malformed OpenSSH public key");o=genOpenSSLECDSAPub(n,t);p=genOpenSSHECDSAPub(n,t);break}default:return new Error(`Unsupported OpenSSH public key type: ${t}`)}return new OpenSSH_Public(i,r,o,p,s)}function isSupportedKeyType(e){switch(e){case"ssh-rsa":case"ssh-dss":case"ecdsa-sha2-nistp256":case"ecdsa-sha2-nistp384":case"ecdsa-sha2-nistp521":return true;case"ssh-ed25519":if(v)return true;default:return false}}function isParsedKey(e){if(!e)return false;return typeof e[D]==="boolean"}function parseKey(e,t){if(isParsedKey(e))return e;let r;if(Buffer.isBuffer(e)){r=e;e=e.utf8Slice(0,e.length).trim()}else if(typeof e==="string"){e=e.trim()}else{return new Error("Key data must be a Buffer or string")}if(t!=undefined){if(typeof t==="string")t=Buffer.from(t);else if(!Buffer.isBuffer(t))return new Error("Passphrase must be a string or Buffer when supplied")}let i;if((i=OpenSSH_Private.parse(e,t))!==null)return i;if((i=OpenSSH_Old_Private.parse(e,t))!==null)return i;if((i=PPK_Private.parse(e,t))!==null)return i;if((i=OpenSSH_Public.parse(e))!==null)return i;if((i=RFC4716_Public.parse(e))!==null)return i;if(r){L.init(r,0);const t=L.readString(true);if(t!==undefined){e=L.readRaw();if(e!==undefined){i=parseDER(e,t,"",t);if(i instanceof Error)i=null}}L.clear()}if(i)return i;return new Error("Unsupported key format")}e.exports={isParsedKey:isParsedKey,isSupportedKeyType:isSupportedKeyType,parseDERKey:(e,t)=>parseDER(e,t,"",t),parseKey:parseKey}},7609:(e,t,r)=>{"use strict";const i=r(9491);const{inspect:s}=r(3837);function addNumericalSeparator(e){let t="";let r=e.length;const i=e[0]==="-"?1:0;for(;r>=i+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function oneOf(e,t){i(typeof t==="string","`thing` has to be of type string");if(Array.isArray(e)){const r=e.length;i(r>0,"At least one expected value needs to be specified");e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(", ")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}return`of ${t} ${e[0]}`}return`of ${t} ${String(e)}`}t.ERR_INTERNAL_ASSERTION=class ERR_INTERNAL_ASSERTION extends Error{constructor(e){super();Error.captureStackTrace(this,ERR_INTERNAL_ASSERTION);const t="This is caused by either a bug in ssh2 "+"or incorrect usage of ssh2 internals.\n"+"Please open an issue with this stack trace at "+"https://github.com/mscdex/ssh2/issues\n";this.message=e===undefined?t:`${e}\n${t}`}};const n=2**32;const o=(()=>{try{return new Function("return 2n ** 32n")()}catch{}})();t.ERR_OUT_OF_RANGE=class ERR_OUT_OF_RANGE extends RangeError{constructor(e,t,r,p){super();Error.captureStackTrace(this,ERR_OUT_OF_RANGE);i(t,'Missing "range" argument');let l=p?e:`The value of "${e}" is out of range.`;let u;if(Number.isInteger(r)&&Math.abs(r)>n){u=addNumericalSeparator(String(r))}else if(typeof r==="bigint"){u=String(r);if(r>o||r<-o)u=addNumericalSeparator(u);u+="n"}else{u=s(r)}l+=` It must be ${t}. Received ${u}`;this.message=l}};class ERR_INVALID_ARG_TYPE extends TypeError{constructor(e,t,r){super();Error.captureStackTrace(this,ERR_INVALID_ARG_TYPE);i(typeof e==="string",`'name' must be a string`);let s;if(typeof t==="string"&&t.startsWith("not ")){s="must not be";t=t.replace(/^not /,"")}else{s="must be"}let n;if(e.endsWith(" argument")){n=`The ${e} ${s} ${oneOf(t,"type")}`}else{const r=e.includes(".")?"property":"argument";n=`The "${e}" ${r} ${s} ${oneOf(t,"type")}`}n+=`. Received type ${typeof r}`;this.message=n}}t.ERR_INVALID_ARG_TYPE=ERR_INVALID_ARG_TYPE;t.validateNumber=function validateNumber(e,t){if(typeof e!=="number")throw new ERR_INVALID_ARG_TYPE(t,"number",e)}},9475:(e,t,r)=>{"use strict";const i=r(970).Ber;let s;const n=Buffer[Symbol.species];const o=Object.getPrototypeOf(Uint8Array.prototype).fill;function readUInt32BE(e,t){return e[t++]*16777216+e[t++]*65536+e[t++]*256+e[t]}function bufferCopy(e,t,r,i,s){if(!s)s=0;if(i>e.length)i=e.length;let n=i-r;const o=t.length-s;if(n>o)n=o;t.set(new Uint8Array(e.buffer,e.byteOffset+r,n),s);return n}function bufferSlice(e,t,r){if(r===undefined)r=e.length;return new n(e.buffer,e.byteOffset+t,r-t)}function makeBufferParser(){let e=0;let t;const r={init:(r,i)=>{t=r;e=typeof i==="number"?i:0},pos:()=>e,length:()=>t?t.length:0,avail:()=>t&&e<t.length?t.length-e:0,clear:()=>{t=undefined},readUInt32BE:()=>{if(!t||e+3>=t.length)return;return t[e++]*16777216+t[e++]*65536+t[e++]*256+t[e++]},readUInt64BE:r=>{if(!t||e+7>=t.length)return;switch(r){case"always":return BigInt(`0x${t.hexSlice(e,e+=8)}`);case"maybe":if(t[e]>31)return BigInt(`0x${t.hexSlice(e,e+=8)}`);default:return t[e++]*72057594037927940+t[e++]*281474976710656+t[e++]*1099511627776+t[e++]*4294967296+t[e++]*16777216+t[e++]*65536+t[e++]*256+t[e++]}},skip:r=>{if(t&&r>0)e+=r},skipString:()=>{const i=r.readUInt32BE();if(i===undefined)return;e+=i;return e<=t.length?i:undefined},readByte:()=>{if(t&&e<t.length)return t[e++]},readBool:()=>{if(t&&e<t.length)return!!t[e++]},readList:()=>{const e=r.readString(true);if(e===undefined)return;return e?e.split(","):[]},readString:(i,s)=>{if(typeof i==="number"){s=i;i=undefined}const n=r.readUInt32BE();if(n===undefined)return;if(t.length-e<n||typeof s==="number"&&n>s){return}if(i){if(Buffer.isBuffer(i))return bufferCopy(t,i,e,e+=n);return t.utf8Slice(e,e+=n)}return bufferSlice(t,e,e+=n)},readRaw:r=>{if(!t)return;if(typeof r!=="number")return bufferSlice(t,e,e+=t.length-e);if(t.length-e>=r)return bufferSlice(t,e,e+=r)}};return r}function makeError(e,t,r){const i=new Error(e);if(typeof t==="boolean"){r=t;i.level="protocol"}else{i.level=t||"protocol"}i.fatal=!!r;return i}function writeUInt32BE(e,t,r){e[r++]=t>>>24;e[r++]=t>>>16;e[r++]=t>>>8;e[r++]=t;return r}const p=makeBufferParser();e.exports={bufferCopy:bufferCopy,bufferSlice:bufferSlice,FastBuffer:n,bufferFill:(e,t,r,i)=>o.call(e,t,r,i),makeError:makeError,doFatalError:(e,t,i,n)=>{let o;if(s===undefined)({DISCONNECT_REASON:s}=r(6832));if(t instanceof Error){o=t;if(typeof i!=="number")n=s.PROTOCOL_ERROR;else n=i}else{o=makeError(t,i,true)}if(typeof n!=="number")n=s.PROTOCOL_ERROR;e.disconnect(n);e._destruct();e._onError(o);return Infinity},readUInt32BE:readUInt32BE,writeUInt32BE:writeUInt32BE,writeUInt32LE:(e,t,r)=>{e[r++]=t;e[r++]=t>>>8;e[r++]=t>>>16;e[r++]=t>>>24;return r},makeBufferParser:makeBufferParser,bufferParser:makeBufferParser(),readString:(e,t,r,i)=>{if(typeof r==="number"){i=r;r=undefined}if(t===undefined)t=0;const s=e.length-t;if(t<0||t>=e.length||s<4)return;const n=readUInt32BE(e,t);if(s<4+n||typeof i==="number"&&n>i)return;t+=4;const o=t+n;e._pos=o;if(r){if(Buffer.isBuffer(r))return bufferCopy(e,r,t,o);return e.utf8Slice(t,o)}return bufferSlice(e,t,o)},sigSSHToASN1:(e,t)=>{switch(t){case"ssh-dss":{if(e.length>40)return e;const t=new i.Writer;t.startSequence();let r=e.slice(0,20);let s=e.slice(20);if(r[0]&128){const e=Buffer.allocUnsafe(21);e[0]=0;r.copy(e,1);r=e}else if(r[0]===0&&!(r[1]&128)){r=r.slice(1)}if(s[0]&128){const e=Buffer.allocUnsafe(21);e[0]=0;s.copy(e,1);s=e}else if(s[0]===0&&!(s[1]&128)){s=s.slice(1)}t.writeBuffer(r,i.Integer);t.writeBuffer(s,i.Integer);t.endSequence();return t.buffer}case"ecdsa-sha2-nistp256":case"ecdsa-sha2-nistp384":case"ecdsa-sha2-nistp521":{p.init(e,0);const t=p.readString();const r=p.readString();p.clear();if(t===undefined||r===undefined)return;const s=new i.Writer;s.startSequence();s.writeBuffer(t,i.Integer);s.writeBuffer(r,i.Integer);s.endSequence();return s.buffer}default:return e}},convertSignature:(e,t)=>{switch(t){case"ssh-dss":{if(e.length<=40)return e;const t=new i.Reader(e);t.readSequence();let r=t.readString(i.Integer,true);let s=t.readString(i.Integer,true);let n=0;let o=0;if(r.length<20){const e=Buffer.allocUnsafe(20);e.set(r,1);r=e;r[0]=0}if(s.length<20){const e=Buffer.allocUnsafe(20);e.set(s,1);s=e;s[0]=0}if(r.length>20&&r[0]===0)n=1;if(s.length>20&&s[0]===0)o=1;const p=Buffer.allocUnsafe(r.length-n+(s.length-o));bufferCopy(r,p,n,r.length,0);bufferCopy(s,p,o,s.length,r.length-n);return p}case"ecdsa-sha2-nistp256":case"ecdsa-sha2-nistp384":case"ecdsa-sha2-nistp521":{if(e[0]===0)return e;const t=new i.Reader(e);t.readSequence();const r=t.readString(i.Integer,true);const s=t.readString(i.Integer,true);if(r===null||s===null)return;const n=Buffer.allocUnsafe(4+r.length+4+s.length);writeUInt32BE(n,r.length,0);n.set(r,4);writeUInt32BE(n,s.length,4+r.length);n.set(s,4+4+r.length);return n}}return e},sendPacket:(e,t,r)=>{if(!r&&e._kexinit!==undefined){if(e._queue===undefined)e._queue=[];e._queue.push(t);e._debug&&e._debug("Outbound: ... packet queued");return false}e._cipher.encrypt(t);return true}}},6715:(e,t,r)=>{"use strict";const{kMaxLength:i}=r(4300);const{createInflate:s,constants:{DEFLATE:n,INFLATE:o,Z_DEFAULT_CHUNK:p,Z_DEFAULT_COMPRESSION:l,Z_DEFAULT_MEMLEVEL:u,Z_DEFAULT_STRATEGY:m,Z_DEFAULT_WINDOWBITS:h,Z_PARTIAL_FLUSH:g}}=r(9796);const _=s()._handle.constructor;function processCallback(){throw new Error("Should not get here")}function zlibOnError(e,t,r){const i=this._owner;const s=new Error(e);s.errno=t;s.code=r;i._err=s}function _close(e){if(!e._handle)return;e._handle.close();e._handle=null}class Zlib{constructor(e){const t=h;const r=l;const s=u;const n=m;const o=undefined;this._err=undefined;this._writeState=new Uint32Array(2);this._chunkSize=p;this._maxOutputLength=i;this._outBuffer=Buffer.allocUnsafe(this._chunkSize);this._outOffset=0;this._handle=new _(e);this._handle._owner=this;this._handle.onerror=zlibOnError;this._handle.init(t,r,s,n,this._writeState,processCallback,o)}writeSync(e,t){const r=this._handle;if(!r)throw new Error("Invalid Zlib instance");let i=e.length;let s=this._chunkSize-this._outOffset;let n=0;let o;let p;let l;let u=0;const m=this._writeState;let h=this._outBuffer;let _=this._outOffset;const E=this._chunkSize;while(true){r.writeSync(g,e,n,i,h,_,s);if(this._err)throw this._err;o=m[0];p=m[1];const t=i-p;const w=s-o;if(w>0){const e=_===0&&w===h.length?h:h.slice(_,_+w);_+=w;if(!l)l=e;else if(l.push===undefined)l=[l,e];else l.push(e);u+=e.byteLength;if(u>this._maxOutputLength){_close(this);throw new Error(`Output length exceeded maximum of ${this._maxOutputLength}`)}}else if(w!==0){throw new Error("have should not go down")}if(o===0||_>=E){s=E;_=0;h=Buffer.allocUnsafe(E)}if(o===0){n+=t;i=p}else{break}}this._outBuffer=h;this._outOffset=_;if(u===0)l=Buffer.alloc(0);if(t){l.totalLen=u;return l}if(l.push===undefined)return l;const w=Buffer.allocUnsafe(u);for(let e=0,t=0;e<l.length;++e){const r=l[e];w.set(r,t);t+=r.length}return w}}class ZlibPacketWriter{constructor(e){this.allocStart=0;this.allocStartKEX=0;this._protocol=e;this._zlib=new Zlib(n)}cleanup(){if(this._zlib)_close(this._zlib)}alloc(e,t){return Buffer.allocUnsafe(e)}finalize(e,t){if(this._protocol._kexinit===undefined||t){const t=this._zlib.writeSync(e,true);const r=this._protocol._cipher.allocPacket(t.totalLen);if(t.push===undefined){r.set(t,5)}else{for(let e=0,i=5;e<t.length;++e){const s=t[e];r.set(s,i);i+=s.length}}return r}return e}}class PacketWriter{constructor(e){this.allocStart=5;this.allocStartKEX=5;this._protocol=e}cleanup(){}alloc(e,t){if(this._protocol._kexinit===undefined||t)return this._protocol._cipher.allocPacket(e);return Buffer.allocUnsafe(e)}finalize(e,t){return e}}class ZlibPacketReader{constructor(){this._zlib=new Zlib(o)}cleanup(){if(this._zlib)_close(this._zlib)}read(e){return this._zlib.writeSync(e,false)}}class PacketReader{cleanup(){}read(e){return e}}e.exports={PacketReader:PacketReader,PacketWriter:PacketWriter,ZlibPacketReader:ZlibPacketReader,ZlibPacketWriter:ZlibPacketWriter}},2986:(e,t,r)=>{"use strict";const{Server:i}=r(1808);const s=r(2361);const{listenerCount:n}=s;const{CHANNEL_OPEN_FAILURE:o,DEFAULT_CIPHER:p,DEFAULT_COMPRESSION:l,DEFAULT_KEX:u,DEFAULT_MAC:m,DEFAULT_SERVER_HOST_KEY:h,DISCONNECT_REASON:g,DISCONNECT_REASON_BY_VALUE:_,SUPPORTED_CIPHER:E,SUPPORTED_COMPRESSION:w,SUPPORTED_KEX:v,SUPPORTED_MAC:b,SUPPORTED_SERVER_HOST_KEY:y}=r(6832);const{init:T}=r(5708);const{KexInit:I}=r(4126);const{parseKey:C}=r(2218);const k=r(9031);const{SFTP:R}=r(2026);const{writeUInt32BE:B}=r(9475);const{Channel:P,MAX_WINDOW:O,PACKET_SIZE:D,windowAdjust:U,WINDOW_THRESHOLD:L}=r(3204);const{ChannelManager:G,generateAlgorithmList:x,isWritable:Q,onChannelOpenFailure:V,onCHANNEL_CLOSE:q}=r(834);const W=10;class AuthContext extends s{constructor(e,t,r,i,s){super();this.username=this.user=t;this.service=r;this.method=i;this._initialResponse=false;this._finalResponse=false;this._multistep=false;this._cbfinal=(e,t,r)=>{if(!this._finalResponse){this._finalResponse=true;s(this,e,t,r)}};this._protocol=e}accept(){this._cleanup&&this._cleanup();this._initialResponse=true;this._cbfinal(true)}reject(e,t){this._cleanup&&this._cleanup();this._initialResponse=true;this._cbfinal(false,e,t)}}class KeyboardAuthContext extends AuthContext{constructor(e,t,r,i,s,n){super(e,t,r,i,n);this._multistep=true;this._cb=undefined;this._onInfoResponse=e=>{const t=this._cb;if(t){this._cb=undefined;t(e)}};this.submethods=s;this.on("abort",(()=>{this._cb&&this._cb(new Error("Authentication request aborted"))}))}prompt(e,t,r,i){if(!Array.isArray(e))e=[e];if(typeof t==="function"){i=t;t=r=undefined}else if(typeof r==="function"){i=r;r=undefined}else if(typeof i!=="function"){i=undefined}for(let t=0;t<e.length;++t){if(typeof e[t]==="string"){e[t]={prompt:e[t],echo:true}}}this._cb=i;this._initialResponse=true;this._protocol.authInfoReq(t,r,e)}}class PKAuthContext extends AuthContext{constructor(e,t,r,i,s,n){super(e,t,r,i,n);this.key={algo:s.keyAlgo,data:s.key};this.signature=s.signature;this.blob=s.blob}accept(){if(!this.signature){this._initialResponse=true;this._protocol.authPKOK(this.key.algo,this.key.data)}else{AuthContext.prototype.accept.call(this)}}}class HostbasedAuthContext extends AuthContext{constructor(e,t,r,i,s,n){super(e,t,r,i,n);this.key={algo:s.keyAlgo,data:s.key};this.signature=s.signature;this.blob=s.blob;this.localHostname=s.localHostname;this.localUsername=s.localUsername}}class PwdAuthContext extends AuthContext{constructor(e,t,r,i,s,n){super(e,t,r,i,n);this.password=s;this._changeCb=undefined}requestChange(e,t){if(this._changeCb)throw new Error("Change request already in progress");if(typeof e!=="string")throw new Error("prompt argument must be a string");if(typeof t!=="function")throw new Error("Callback argument must be a function");this._changeCb=t;this._protocol.authPasswdChg(e)}}class Session extends s{constructor(e,t,r){super();this.type="session";this.subtype=undefined;this.server=true;this._ending=false;this._channel=undefined;this._chanInfo={type:"session",incoming:{id:r,window:O,packetSize:D,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}}}}class Server extends s{constructor(e,t){super();if(typeof e!=="object"||e===null)throw new Error("Missing configuration object");const r=Object.create(null);const s=[];const n=e.hostKeys;if(!Array.isArray(n))throw new Error("hostKeys must be an array");const o=typeof e.algorithms==="object"&&e.algorithms!==null?e.algorithms:{};const g=x(o.serverHostKey,h,y);for(let e=0;e<n.length;++e){let t;if(Buffer.isBuffer(n[e])||typeof n[e]==="string")t=C(n[e]);else t=C(n[e].key,n[e].passphrase);if(t instanceof Error)throw new Error(`Cannot parse privateKey: ${t.message}`);if(Array.isArray(t)){t=t[0]}if(t.getPrivatePEM()===null)throw new Error("privateKey value contains an invalid private key");if(s.includes(t.type))continue;if(t.type==="ssh-rsa"){let e=g.indexOf("ssh-rsa");const i=g.indexOf("rsa-sha2-256");const n=g.indexOf("rsa-sha2-512");if(e===-1){e=Infinity}[e,i,n].sort(compareNumbers).forEach((o=>{if(o===-1)return;let p;switch(o){case e:p="ssh-rsa";break;case i:p="rsa-sha2-256";break;case n:p="rsa-sha2-512";break;default:return}r[p]=t;s.push(p)}))}else{r[t.type]=t;s.push(t.type)}}const _={kex:x(o.kex,u,v),serverHostKey:s,cs:{cipher:x(o.cipher,p,E),mac:x(o.hmac,m,b),compress:x(o.compress,l,w),lang:[]},sc:undefined};_.sc=_.cs;if(typeof t==="function")this.on("connection",t);const T=typeof e.debug==="function"?e.debug:undefined;const k=e.ident?Buffer.from(e.ident):undefined;const R=new I(_);this._srv=new i((t=>{if(this._connections>=this.maxConnections){t.destroy();return}++this._connections;t.once("close",(()=>{--this._connections}));let i;if(T){const e=`[${process.hrtime().join(".")}] `;i=t=>{T(`${e}${t}`)}}new Client(t,r,k,R,i,this,e)})).on("error",(e=>{this.emit("error",e)})).on("listening",(()=>{this.emit("listening")})).on("close",(()=>{this.emit("close")}));this._connections=0;this.maxConnections=Infinity}injectSocket(e){this._srv.emit("connection",e)}listen(...e){this._srv.listen(...e);return this}address(){return this._srv.address()}getConnections(e){this._srv.getConnections(e);return this}close(e){this._srv.close(e);return this}ref(){this._srv.ref();return this}unref(){this._srv.unref();return this}}Server.KEEPALIVE_CLIENT_INTERVAL=15e3;Server.KEEPALIVE_CLIENT_COUNT_MAX=3;class Client extends s{constructor(e,t,r,i,s,p,l){super();let u=0;let m=false;let h=[];let E;let w;let v;const b=[];this._sock=e;this._chanMgr=new G(this);this._debug=s;this.noMoreSessions=false;this.authenticated=false;function onClientPreHeaderError(e){}this.on("error",onClientPreHeaderError);const y=!s?undefined:(e,t,r)=>{s(`Debug output from client: ${JSON.stringify(r)}`)};const I=typeof l.keepaliveInterval==="number"&&isFinite(l.keepaliveInterval)&&l.keepaliveInterval>0?l.keepaliveInterval:typeof Server.KEEPALIVE_CLIENT_INTERVAL==="number"&&isFinite(Server.KEEPALIVE_CLIENT_INTERVAL)&&Server.KEEPALIVE_CLIENT_INTERVAL>0?Server.KEEPALIVE_CLIENT_INTERVAL:-1;const C=typeof l.keepaliveCountMax==="number"&&isFinite(l.keepaliveCountMax)&&l.keepaliveCountMax>=0?l.keepaliveCountMax:typeof Server.KEEPALIVE_CLIENT_COUNT_MAX==="number"&&isFinite(Server.KEEPALIVE_CLIENT_COUNT_MAX)&&Server.KEEPALIVE_CLIENT_COUNT_MAX>=0?Server.KEEPALIVE_CLIENT_COUNT_MAX:-1;let x=0;if(I!==-1&&C!==-1){this.once("ready",(()=>{const onClose=()=>{clearInterval(w)};this.on("close",onClose).on("end",onClose);w=setInterval((()=>{if(++x>C){clearInterval(w);const e=new Error("Keepalive timeout");e.level="client-timeout";this.emit("error",e);this.end()}else{j.ping()}}),I)}));v=()=>{w&&w.refresh();x=0}}const j=this._protocol=new k({server:true,hostKeys:t,ident:r,offer:i,onPacket:v,greeting:l.greeting,banner:l.banner,onWrite:t=>{if(Q(e))e.write(t)},onError:t=>{if(!j._destruct)e.removeAllListeners("data");this.emit("error",t);try{e.end()}catch{}},onHeader:t=>{this.removeListener("error",onClientPreHeaderError);const r={ip:e.remoteAddress,family:e.remoteFamily,port:e.remotePort,header:t};if(!p.emit("connection",this,r)){j.disconnect(g.BY_APPLICATION);e.end();return}if(t.greeting)this.emit("greeting",t.greeting)},onHandshakeComplete:e=>{if(++u>1)this.emit("rekey");this.emit("handshake",e)},debug:s,messageHandlers:{DEBUG:y,DISCONNECT:(t,r,i)=>{if(r!==g.BY_APPLICATION){if(!i){i=_[r];if(i===undefined)i=`Unexpected disconnection reason: ${r}`}const e=new Error(i);e.code=r;this.emit("error",e)}e.end()},CHANNEL_OPEN:(e,t)=>{if(t.type==="session"&&this.noMoreSessions||!this.authenticated){const e=o.ADMINISTRATIVELY_PROHIBITED;return j.channelOpenFail(t.sender,e)}let r=-1;let i;let p=false;let l;const reject=()=>{if(p)return;p=true;if(i===undefined){if(r===-1)i=o.RESOURCE_SHORTAGE;else i=o.CONNECT_FAILED}if(r!==-1)this._chanMgr.remove(r);j.channelOpenFail(t.sender,i,"")};const reserveChannel=()=>{r=this._chanMgr.add();if(r===-1){i=o.RESOURCE_SHORTAGE;if(s){s("Automatic rejection of incoming channel open: "+"no channels available")}}return r!==-1};const u=t.data;switch(t.type){case"session":if(n(this,"session")&&reserveChannel()){l=()=>{if(p)return;p=true;const e=new Session(this,t,r);this._chanMgr.update(r,e);j.channelOpenConfirm(t.sender,r,O,D);return e};this.emit("session",l,reject);return}break;case"direct-tcpip":if(n(this,"tcpip")&&reserveChannel()){l=()=>{if(p)return;p=true;const e={type:undefined,incoming:{id:r,window:O,packetSize:D,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}};const i=new P(this,e,{server:true});this._chanMgr.update(r,i);j.channelOpenConfirm(t.sender,r,O,D);return i};this.emit("tcpip",l,reject,u);return}break;case"direct-streamlocal@openssh.com":if(n(this,"openssh.streamlocal")&&reserveChannel()){l=()=>{if(p)return;p=true;const e={type:undefined,incoming:{id:r,window:O,packetSize:D,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}};const i=new P(this,e,{server:true});this._chanMgr.update(r,i);j.channelOpenConfirm(t.sender,r,O,D);return i};this.emit("openssh.streamlocal",l,reject,u);return}break;default:i=o.UNKNOWN_CHANNEL_TYPE;if(s){s("Automatic rejection of unsupported incoming channel open"+` type: ${t.type}`)}}if(i===undefined){i=o.ADMINISTRATIVELY_PROHIBITED;if(s){s("Automatic rejection of unexpected incoming channel open"+` for: ${t.type}`)}}reject()},CHANNEL_OPEN_CONFIRMATION:(e,t)=>{const r=this._chanMgr.get(t.recipient);if(typeof r!=="function")return;const i={type:r.type,incoming:{id:t.recipient,window:O,packetSize:D,state:"open"},outgoing:{id:t.sender,window:t.window,packetSize:t.packetSize,state:"open"}};const s=new P(this,i,{server:true});this._chanMgr.update(t.recipient,s);r(undefined,s)},CHANNEL_OPEN_FAILURE:(e,t,r,i)=>{const s=this._chanMgr.get(t);if(typeof s!=="function")return;const n={reason:r,description:i};V(this,t,n,s)},CHANNEL_DATA:(e,t,r)=>{let i=this._chanMgr.get(t);if(typeof i!=="object"||i===null)return;if(i.constructor===Session){i=i._channel;if(!i)return}if(i.incoming.window===0)return;i.incoming.window-=r.length;if(i.push(r)===false){i._waitChanDrain=true;return}if(i.incoming.window<=L)U(i)},CHANNEL_EXTENDED_DATA:(e,t,r,i)=>{},CHANNEL_WINDOW_ADJUST:(e,t,r)=>{let i=this._chanMgr.get(t);if(typeof i!=="object"||i===null)return;if(i.constructor===Session){i=i._channel;if(!i)return}i.outgoing.window+=r;if(i._waitWindow){i._waitWindow=false;if(i._chunk){i._write(i._chunk,null,i._chunkcb)}else if(i._chunkcb){i._chunkcb()}else if(i._chunkErr){i.stderr._write(i._chunkErr,null,i._chunkcbErr)}else if(i._chunkcbErr){i._chunkcbErr()}}},CHANNEL_SUCCESS:(e,t)=>{let r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;if(r.constructor===Session){r=r._channel;if(!r)return}if(r._callbacks.length)r._callbacks.shift()(false)},CHANNEL_FAILURE:(e,t)=>{let r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;if(r.constructor===Session){r=r._channel;if(!r)return}if(r._callbacks.length)r._callbacks.shift()(true)},CHANNEL_REQUEST:(e,t,r,i,o)=>{const p=this._chanMgr.get(t);if(typeof p!=="object"||p===null)return;let l=false;let u;let m;if(p.constructor!==Session){if(i)j.channelFailure(p.outgoing.id);return}if(i){if(r!=="shell"&&r!=="exec"&&r!=="subsystem"){u=()=>{if(l||p._ending||p._channel)return;l=true;j.channelSuccess(p._chanInfo.outgoing.id)}}m=()=>{if(l||p._ending||p._channel)return;l=true;j.channelFailure(p._chanInfo.outgoing.id)}}if(p._ending){m&&m();return}switch(r){case"env":if(n(p,"env")){p.emit("env",u,m,{key:o.name,val:o.value});return}break;case"pty-req":if(n(p,"pty")){p.emit("pty",u,m,o);return}break;case"window-change":if(n(p,"window-change"))p.emit("window-change",u,m,o);else m&&m();break;case"x11-req":if(n(p,"x11")){p.emit("x11",u,m,o);return}break;case"signal":if(n(p,"signal")){p.emit("signal",u,m,{name:o});return}break;case"auth-agent-req@openssh.com":if(n(p,"auth-agent")){p.emit("auth-agent",u,m);return}break;case"shell":if(n(p,"shell")){u=()=>{if(l||p._ending||p._channel)return;l=true;if(i)j.channelSuccess(p._chanInfo.outgoing.id);const e=new P(this,p._chanInfo,{server:true});e.subtype=p.subtype=r;p._channel=e;return e};p.emit("shell",u,m);return}break;case"exec":if(n(p,"exec")){u=()=>{if(l||p._ending||p._channel)return;l=true;if(i)j.channelSuccess(p._chanInfo.outgoing.id);const e=new P(this,p._chanInfo,{server:true});e.subtype=p.subtype=r;p._channel=e;return e};p.emit("exec",u,m,{command:o});return}break;case"subsystem":{let e=o==="sftp";u=()=>{if(l||p._ending||p._channel)return;l=true;if(i)j.channelSuccess(p._chanInfo.outgoing.id);let t;if(e){t=new R(this,p._chanInfo,{server:true,debug:s})}else{t=new P(this,p._chanInfo,{server:true});t.subtype=p.subtype=`${r}:${o}`}p._channel=t;return t};if(o==="sftp"){if(n(p,"sftp")){p.emit("sftp",u,m);return}e=false}if(n(p,"subsystem")){p.emit("subsystem",u,m,{name:o});return}break}}s&&s(`Automatic rejection of incoming channel request: ${r}`);m&&m()},CHANNEL_EOF:(e,t)=>{let r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;if(r.constructor===Session){if(!r._ending){r._ending=true;r.emit("eof");r.emit("end")}r=r._channel;if(!r)return}if(r.incoming.state!=="open")return;r.incoming.state="eof";if(r.readable)r.push(null)},CHANNEL_CLOSE:(e,t)=>{let r=this._chanMgr.get(t);if(typeof r!=="object"||r===null)return;if(r.constructor===Session){r._ending=true;r.emit("close");r=r._channel;if(!r)return}q(this,t,r)},SERVICE_REQUEST:(t,r)=>{if(u===0||m||this.authenticated||r!=="ssh-userauth"){j.disconnect(g.SERVICE_NOT_AVAILABLE);e.end();return}m=true;j.serviceAccept(r)},USERAUTH_REQUEST:(t,r,i,s,o)=>{if(u===0||this.authenticated||E&&(E.username!==r||E.service!==i)||s!=="password"&&s!=="publickey"&&s!=="hostbased"&&s!=="keyboard-interactive"&&s!=="none"||h.length===W){j.disconnect(g.PROTOCOL_ERROR);e.end();return}else if(i!=="ssh-connection"){j.disconnect(g.SERVICE_NOT_AVAILABLE);e.end();return}let p;switch(s){case"keyboard-interactive":p=new KeyboardAuthContext(j,r,i,s,o,onAuthDecide);break;case"publickey":p=new PKAuthContext(j,r,i,s,o,onAuthDecide);break;case"hostbased":p=new HostbasedAuthContext(j,r,i,s,o,onAuthDecide);break;case"password":if(E&&E instanceof PwdAuthContext&&E._changeCb){const e=E._changeCb;E._changeCb=undefined;e(o.newPassword);return}p=new PwdAuthContext(j,r,i,s,o,onAuthDecide);break;case"none":p=new AuthContext(j,r,i,s,onAuthDecide);break}if(E){if(!E._initialResponse){return h.push(p)}else if(E._multistep&&!E._finalResponse){E._cleanup&&E._cleanup();E.emit("abort")}}E=p;if(n(this,"authentication"))this.emit("authentication",E);else E.reject()},USERAUTH_INFO_RESPONSE:(e,t)=>{if(E&&E instanceof KeyboardAuthContext)E._onInfoResponse(t)},GLOBAL_REQUEST:(e,t,r,i)=>{const s={type:null,buf:null};function setReply(e,t){s.type=e;s.buf=t;sendReplies()}if(r)b.push(s);if((t==="tcpip-forward"||t==="cancel-tcpip-forward"||t==="no-more-sessions@openssh.com"||t==="streamlocal-forward@openssh.com"||t==="cancel-streamlocal-forward@openssh.com")&&n(this,"request")&&this.authenticated){let e;let s;if(r){let r=false;e=e=>{if(r)return;r=true;let s;if(t==="tcpip-forward"&&i.bindPort===0&&typeof e==="number"){s=Buffer.allocUnsafe(4);B(s,e,0)}setReply("SUCCESS",s)};s=()=>{if(r)return;r=true;setReply("FAILURE")}}if(t==="no-more-sessions@openssh.com"){this.noMoreSessions=true;e&&e();return}this.emit("request",e,s,t,i)}else if(r){setReply("FAILURE")}}}});e.pause();T.then((()=>{j.start();e.on("data",(t=>{try{j.parse(t,0,t.length)}catch(t){this.emit("error",t);try{if(Q(e))e.end()}catch{}}}));e.resume()})).catch((t=>{this.emit("error",t);try{if(Q(e))e.end()}catch{}}));e.on("error",(e=>{e.level="socket";this.emit("error",e)})).once("end",(()=>{s&&s("Socket ended");j.cleanup();this.emit("end")})).once("close",(()=>{s&&s("Socket closed");j.cleanup();this.emit("close");const e=new Error("No response from server");this._chanMgr.cleanup(e)}));const onAuthDecide=(e,t,r,i)=>{if(E===e&&!this.authenticated){if(t){E=undefined;this.authenticated=true;j.authSuccess();h=[];this.emit("ready")}else{j.authFailure(r,i);if(h.length){E=h.pop();if(n(this,"authentication"))this.emit("authentication",E);else E.reject()}}}};function sendReplies(){while(b.length>0&&b[0].type){const e=b.shift();if(e.type==="SUCCESS")j.requestSuccess(e.buf);if(e.type==="FAILURE")j.requestFailure()}}}end(){if(this._sock&&Q(this._sock)){this._protocol.disconnect(g.BY_APPLICATION);this._sock.end()}return this}x11(e,t,r){const i={originAddr:e,originPort:t};openChannel(this,"x11",i,r);return this}forwardOut(e,t,r,i,s){const n={boundAddr:e,boundPort:t,remoteAddr:r,remotePort:i};openChannel(this,"forwarded-tcpip",n,s);return this}openssh_forwardOutStreamLocal(e,t){const r={socketPath:e};openChannel(this,"forwarded-streamlocal@openssh.com",r,t);return this}rekey(e){let t;try{this._protocol.rekey()}catch(e){t=e}if(typeof e==="function"){if(t)process.nextTick(e,t);else this.once("rekey",e)}}}function openChannel(e,t,r,i){const s=O;const n=D;if(typeof r==="function"){i=r;r={}}const wrapper=(e,t)=>{i(e,t)};wrapper.type=t;const o=e._chanMgr.add(wrapper);if(o===-1){i(new Error("No free channels available"));return}switch(t){case"forwarded-tcpip":e._protocol.forwardedTcpip(o,s,n,r);break;case"x11":e._protocol.x11(o,s,n,r);break;case"forwarded-streamlocal@openssh.com":e._protocol.openssh_forwardedStreamLocal(o,s,n,r);break;default:throw new Error(`Unsupported channel type: ${t}`)}}function compareNumbers(e,t){return e-t}e.exports=Server;e.exports.IncomingClient=Client},834:(e,t,r)=>{"use strict";const{SFTP:i}=r(2026);const s=2**32-1;function onChannelOpenFailure(e,t,r,i){e._chanMgr.remove(t);if(typeof i!=="function")return;let s;if(r instanceof Error){s=r}else if(typeof r==="object"&&r!==null){s=new Error(`(SSH) Channel open failure: ${r.description}`);s.reason=r.reason}else{s=new Error("(SSH) Channel open failure: server closed channel unexpectedly");s.reason=""}i(s)}function onCHANNEL_CLOSE(e,t,r,s,n){if(typeof r==="function"){onChannelOpenFailure(e,t,s,r);return}if(typeof r!=="object"||r===null)return;if(r.incoming&&r.incoming.state==="closed")return;e._chanMgr.remove(t);if(r.server&&r.constructor.name==="Session")return;r.incoming.state="closed";if(r.readable)r.push(null);if(r.server){if(r.stderr.writable)r.stderr.end()}else if(r.stderr.readable){r.stderr.push(null)}if(r.constructor!==i&&(r.outgoing.state==="open"||r.outgoing.state==="eof")&&!n){r.close()}if(r.outgoing.state==="closing")r.outgoing.state="closed";const o=r._readableState;const p=r._writableState;if(p&&!p.ending&&!p.finished&&!n)r.end();const l=r._callbacks;r._callbacks=[];for(let e=0;e<l.length;++e)l[e](true);if(r.server){if(!r.readable||r.destroyed||o&&o.endEmitted){r.emit("close")}else{r.once("end",(()=>r.emit("close")))}}else{let e;switch(r.type){case"direct-streamlocal@openssh.com":case"direct-tcpip":e=()=>r.emit("close");break;default:{const t=r._exit;e=()=>{if(t.code===null)r.emit("close",t.code,t.signal,t.dump,t.desc);else r.emit("close",t.code)}}}if(!r.readable||r.destroyed||o&&o.endEmitted){e()}else{r.once("end",e)}const t=r.stderr._readableState;if(!r.stderr.readable||r.stderr.destroyed||t&&t.endEmitted){r.stderr.emit("close")}else{r.stderr.once("end",(()=>r.stderr.emit("close")))}}}class ChannelManager{constructor(e){this._client=e;this._channels={};this._cur=-1;this._count=0}add(e){let t;if(this._cur<s){t=++this._cur}else if(this._count===0){this._cur=0;t=0}else{const e=this._channels;for(let r=0;r<s;++r){if(e[r]===undefined){t=r;break}}}if(t===undefined)return-1;this._channels[t]=e||true;++this._count;return t}update(e,t){if(typeof e!=="number"||e<0||e>=s||!isFinite(e))throw new Error(`Invalid channel id: ${e}`);if(t&&this._channels[e])this._channels[e]=t}get(e){if(typeof e!=="number"||e<0||e>=s||!isFinite(e))throw new Error(`Invalid channel id: ${e}`);return this._channels[e]}remove(e){if(typeof e!=="number"||e<0||e>=s||!isFinite(e))throw new Error(`Invalid channel id: ${e}`);if(this._channels[e]){delete this._channels[e];if(this._count)--this._count}}cleanup(e){const t=this._channels;this._channels={};this._cur=-1;this._count=0;const r=Object.keys(t);const i=this._client;for(let s=0;s<r.length;++s){const n=+r[s];const o=t[n];onCHANNEL_CLOSE(i,n,o._channel||o,e,true)}}}const n=(()=>{const e=Object.prototype.toString;return t=>e.call(t)==="[object RegExp]"})();function generateAlgorithmList(e,t,r){if(Array.isArray(e)&&e.length>0){for(let t=0;t<e.length;++t){if(r.indexOf(e[t])===-1)throw new Error(`Unsupported algorithm: ${e[t]}`)}return e}if(typeof e==="object"&&e!==null){const i=Object.keys(e);let s=t;for(let o=0;o<i.length;++o){const p=i[o];let l=e[p];switch(p){case"append":if(!Array.isArray(l))l=[l];if(Array.isArray(l)){for(let e=0;e<l.length;++e){const i=l[e];if(typeof i==="string"){if(!i||s.indexOf(i)!==-1)continue;if(r.indexOf(i)===-1)throw new Error(`Unsupported algorithm: ${i}`);if(s===t)s=s.slice();s.push(i)}else if(n(i)){for(let e=0;e<r.length;++e){const n=r[e];if(i.test(n)){if(s.indexOf(n)!==-1)continue;if(s===t)s=s.slice();s.push(n)}}}}}break;case"prepend":if(!Array.isArray(l))l=[l];if(Array.isArray(l)){for(let e=l.length;e>=0;--e){const i=l[e];if(typeof i==="string"){if(!i||s.indexOf(i)!==-1)continue;if(r.indexOf(i)===-1)throw new Error(`Unsupported algorithm: ${i}`);if(s===t)s=s.slice();s.unshift(i)}else if(n(i)){for(let e=r.length;e>=0;--e){const n=r[e];if(i.test(n)){if(s.indexOf(n)!==-1)continue;if(s===t)s=s.slice();s.unshift(n)}}}}}break;case"remove":if(!Array.isArray(l))l=[l];if(Array.isArray(l)){for(let e=0;e<l.length;++e){const r=l[e];if(typeof r==="string"){if(!r)continue;const e=s.indexOf(r);if(e===-1)continue;if(s===t)s=s.slice();s.splice(e,1)}else if(n(r)){for(let e=0;e<s.length;++e){if(r.test(s[e])){if(s===t)s=s.slice();s.splice(e,1);--e}}}}}break}}return s}return t}e.exports={ChannelManager:ChannelManager,generateAlgorithmList:generateAlgorithmList,onChannelOpenFailure:onChannelOpenFailure,onCHANNEL_CLOSE:onCHANNEL_CLOSE,isWritable:e=>e&&e.writable&&e._readableState&&e._readableState.ended===false}},4256:(e,t,r)=>{"use strict";var i=r(5477);var s=r(2020);var n={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var t=0;var r=s.length-1;while(t<=r){var i=Math.floor((t+r)/2);var n=s[i];if(n[0][0]<=e&&n[0][1]>=e){return n}else if(n[0][0]>e){r=i-1}else{t=i+1}}return null}var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(o,"_").length}function mapChars(e,t,r){var i=false;var s="";var o=countSymbols(e);for(var p=0;p<o;++p){var l=e.codePointAt(p);var u=findStatus(l);switch(u[1]){case"disallowed":i=true;s+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":s+=String.fromCodePoint.apply(String,u[2]);break;case"deviation":if(r===n.TRANSITIONAL){s+=String.fromCodePoint.apply(String,u[2])}else{s+=String.fromCodePoint(l)}break;case"valid":s+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":if(t){i=true;s+=String.fromCodePoint(l)}else{s+=String.fromCodePoint.apply(String,u[2])}break;case"disallowed_STD3_valid":if(t){i=true}s+=String.fromCodePoint(l);break}}return{string:s,error:i}}var p=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,t){if(e.substr(0,4)==="xn--"){e=i.toUnicode(e);t=n.NONTRANSITIONAL}var r=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(p)===0){r=true}var s=countSymbols(e);for(var o=0;o<s;++o){var l=findStatus(e.codePointAt(o));if(processing===n.TRANSITIONAL&&l[1]!=="valid"||processing===n.NONTRANSITIONAL&&l[1]!=="valid"&&l[1]!=="deviation"){r=true;break}}return{label:e,error:r}}function processing(e,t,r){var i=mapChars(e,t,r);i.string=normalize(i.string);var s=i.string.split(".");for(var n=0;n<s.length;++n){try{var o=validateLabel(s[n]);s[n]=o.label;i.error=i.error||o.error}catch(e){i.error=true}}return{string:s.join("."),error:i.error}}e.exports.toASCII=function(e,t,r,s){var n=processing(e,t,r);var o=n.string.split(".");o=o.map((function(e){try{return i.toASCII(e)}catch(t){n.error=true;return e}}));if(s){var p=o.slice(0,o.length-1).join(".").length;if(p.length>253||p.length===0){n.error=true}for(var l=0;l<o.length;++l){if(o.length>63||o.length===0){n.error=true;break}}}if(n.error)return null;return o.join(".")};e.exports.toUnicode=function(e,t){var r=processing(e,t,n.NONTRANSITIONAL);return{domain:r.string,error:r.error}};e.exports.PROCESSING_OPTIONS=n},4294:(e,t,r)=>{e.exports=r(4219)},4219:(e,t,r)=>{"use strict";var i=r(1808);var s=r(4404);var n=r(3685);var o=r(5687);var p=r(2361);var l=r(9491);var u=r(3837);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=n.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=n.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=o.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||n.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",(function onFree(e,r,i,s){var n=toOptions(r,i,s);for(var o=0,p=t.requests.length;o<p;++o){var l=t.requests[o];if(l.host===n.host&&l.port===n.port){t.requests.splice(o,1);l.request.onSocket(e);return}}e.destroy();t.removeSocket(e)}))}u.inherits(TunnelingAgent,p.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,r,i){var s=this;var n=mergeOptions({request:e},s.options,toOptions(t,r,i));if(s.sockets.length>=this.maxSockets){s.requests.push(n);return}s.createSocket(n,(function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){s.emit("free",t,n)}function onCloseOrRemove(e){s.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var r=this;var i={};r.sockets.push(i);var s=mergeOptions({},r.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){s.localAddress=e.localAddress}if(s.proxyAuth){s.headers=s.headers||{};s.headers["Proxy-Authorization"]="Basic "+new Buffer(s.proxyAuth).toString("base64")}m("making CONNECT request");var n=r.request(s);n.useChunkedEncodingByDefault=false;n.once("response",onResponse);n.once("upgrade",onUpgrade);n.once("connect",onConnect);n.once("error",onError);n.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,r){process.nextTick((function(){onConnect(e,t,r)}))}function onConnect(s,o,p){n.removeAllListeners();o.removeAllListeners();if(s.statusCode!==200){m("tunneling socket could not be established, statusCode=%d",s.statusCode);o.destroy();var l=new Error("tunneling socket could not be established, "+"statusCode="+s.statusCode);l.code="ECONNRESET";e.request.emit("error",l);r.removeSocket(i);return}if(p.length>0){m("got illegal response body from proxy");o.destroy();var l=new Error("got illegal response body from proxy");l.code="ECONNRESET";e.request.emit("error",l);r.removeSocket(i);return}m("tunneling connection has established");r.sockets[r.sockets.indexOf(i)]=o;return t(o)}function onError(t){n.removeAllListeners();m("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var s=new Error("tunneling socket could not be established, "+"cause="+t.message);s.code="ECONNRESET";e.request.emit("error",s);r.removeSocket(i)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var r=this.requests.shift();if(r){this.createSocket(r,(function(e){r.request.onSocket(e)}))}};function createSecureSocket(e,t){var r=this;TunnelingAgent.prototype.createSocket.call(r,e,(function(i){var n=e.request.getHeader("host");var o=mergeOptions({},r.options,{socket:i,servername:n?n.replace(/:.*$/,""):e.host});var p=s.connect(0,o);r.sockets[r.sockets.indexOf(i)]=p;t(p)}))}function toOptions(e,t,r){if(typeof e==="string"){return{host:e,port:t,localAddress:r}}return e}function mergeOptions(e){for(var t=1,r=arguments.length;t<r;++t){var i=arguments[t];if(typeof i==="object"){var s=Object.keys(i);for(var n=0,o=s.length;n<o;++n){var p=s[n];if(i[p]!==undefined){e[p]=i[p]}}}}return e}var m;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){m=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{m=function(){}}t.debug=m},8729:(e,t,r)=>{(function(e){"use strict";var gf=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r};var randombytes=function(){throw new Error("no PRNG")};var t=new Uint8Array(16);var i=new Uint8Array(32);i[0]=9;var s=gf(),n=gf([1]),o=gf([56129,1]),p=gf([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),l=gf([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),u=gf([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),m=gf([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function ts64(e,t,r,i){e[t]=r>>24&255;e[t+1]=r>>16&255;e[t+2]=r>>8&255;e[t+3]=r&255;e[t+4]=i>>24&255;e[t+5]=i>>16&255;e[t+6]=i>>8&255;e[t+7]=i&255}function vn(e,t,r,i,s){var n,o=0;for(n=0;n<s;n++)o|=e[t+n]^r[i+n];return(1&o-1>>>8)-1}function crypto_verify_16(e,t,r,i){return vn(e,t,r,i,16)}function crypto_verify_32(e,t,r,i){return vn(e,t,r,i,32)}function core_salsa20(e,t,r,i){var s=i[0]&255|(i[1]&255)<<8|(i[2]&255)<<16|(i[3]&255)<<24,n=r[0]&255|(r[1]&255)<<8|(r[2]&255)<<16|(r[3]&255)<<24,o=r[4]&255|(r[5]&255)<<8|(r[6]&255)<<16|(r[7]&255)<<24,p=r[8]&255|(r[9]&255)<<8|(r[10]&255)<<16|(r[11]&255)<<24,l=r[12]&255|(r[13]&255)<<8|(r[14]&255)<<16|(r[15]&255)<<24,u=i[4]&255|(i[5]&255)<<8|(i[6]&255)<<16|(i[7]&255)<<24,m=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,h=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,g=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,_=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,E=i[8]&255|(i[9]&255)<<8|(i[10]&255)<<16|(i[11]&255)<<24,w=r[16]&255|(r[17]&255)<<8|(r[18]&255)<<16|(r[19]&255)<<24,v=r[20]&255|(r[21]&255)<<8|(r[22]&255)<<16|(r[23]&255)<<24,b=r[24]&255|(r[25]&255)<<8|(r[26]&255)<<16|(r[27]&255)<<24,y=r[28]&255|(r[29]&255)<<8|(r[30]&255)<<16|(r[31]&255)<<24,T=i[12]&255|(i[13]&255)<<8|(i[14]&255)<<16|(i[15]&255)<<24;var I=s,C=n,k=o,R=p,B=l,P=u,O=m,D=h,U=g,L=_,G=E,x=w,Q=v,V=b,q=y,W=T,j;for(var $=0;$<20;$+=2){j=I+Q|0;B^=j<<7|j>>>32-7;j=B+I|0;U^=j<<9|j>>>32-9;j=U+B|0;Q^=j<<13|j>>>32-13;j=Q+U|0;I^=j<<18|j>>>32-18;j=P+C|0;L^=j<<7|j>>>32-7;j=L+P|0;V^=j<<9|j>>>32-9;j=V+L|0;C^=j<<13|j>>>32-13;j=C+V|0;P^=j<<18|j>>>32-18;j=G+O|0;q^=j<<7|j>>>32-7;j=q+G|0;k^=j<<9|j>>>32-9;j=k+q|0;O^=j<<13|j>>>32-13;j=O+k|0;G^=j<<18|j>>>32-18;j=W+x|0;R^=j<<7|j>>>32-7;j=R+W|0;D^=j<<9|j>>>32-9;j=D+R|0;x^=j<<13|j>>>32-13;j=x+D|0;W^=j<<18|j>>>32-18;j=I+R|0;C^=j<<7|j>>>32-7;j=C+I|0;k^=j<<9|j>>>32-9;j=k+C|0;R^=j<<13|j>>>32-13;j=R+k|0;I^=j<<18|j>>>32-18;j=P+B|0;O^=j<<7|j>>>32-7;j=O+P|0;D^=j<<9|j>>>32-9;j=D+O|0;B^=j<<13|j>>>32-13;j=B+D|0;P^=j<<18|j>>>32-18;j=G+L|0;x^=j<<7|j>>>32-7;j=x+G|0;U^=j<<9|j>>>32-9;j=U+x|0;L^=j<<13|j>>>32-13;j=L+U|0;G^=j<<18|j>>>32-18;j=W+q|0;Q^=j<<7|j>>>32-7;j=Q+W|0;V^=j<<9|j>>>32-9;j=V+Q|0;q^=j<<13|j>>>32-13;j=q+V|0;W^=j<<18|j>>>32-18}I=I+s|0;C=C+n|0;k=k+o|0;R=R+p|0;B=B+l|0;P=P+u|0;O=O+m|0;D=D+h|0;U=U+g|0;L=L+_|0;G=G+E|0;x=x+w|0;Q=Q+v|0;V=V+b|0;q=q+y|0;W=W+T|0;e[0]=I>>>0&255;e[1]=I>>>8&255;e[2]=I>>>16&255;e[3]=I>>>24&255;e[4]=C>>>0&255;e[5]=C>>>8&255;e[6]=C>>>16&255;e[7]=C>>>24&255;e[8]=k>>>0&255;e[9]=k>>>8&255;e[10]=k>>>16&255;e[11]=k>>>24&255;e[12]=R>>>0&255;e[13]=R>>>8&255;e[14]=R>>>16&255;e[15]=R>>>24&255;e[16]=B>>>0&255;e[17]=B>>>8&255;e[18]=B>>>16&255;e[19]=B>>>24&255;e[20]=P>>>0&255;e[21]=P>>>8&255;e[22]=P>>>16&255;e[23]=P>>>24&255;e[24]=O>>>0&255;e[25]=O>>>8&255;e[26]=O>>>16&255;e[27]=O>>>24&255;e[28]=D>>>0&255;e[29]=D>>>8&255;e[30]=D>>>16&255;e[31]=D>>>24&255;e[32]=U>>>0&255;e[33]=U>>>8&255;e[34]=U>>>16&255;e[35]=U>>>24&255;e[36]=L>>>0&255;e[37]=L>>>8&255;e[38]=L>>>16&255;e[39]=L>>>24&255;e[40]=G>>>0&255;e[41]=G>>>8&255;e[42]=G>>>16&255;e[43]=G>>>24&255;e[44]=x>>>0&255;e[45]=x>>>8&255;e[46]=x>>>16&255;e[47]=x>>>24&255;e[48]=Q>>>0&255;e[49]=Q>>>8&255;e[50]=Q>>>16&255;e[51]=Q>>>24&255;e[52]=V>>>0&255;e[53]=V>>>8&255;e[54]=V>>>16&255;e[55]=V>>>24&255;e[56]=q>>>0&255;e[57]=q>>>8&255;e[58]=q>>>16&255;e[59]=q>>>24&255;e[60]=W>>>0&255;e[61]=W>>>8&255;e[62]=W>>>16&255;e[63]=W>>>24&255}function core_hsalsa20(e,t,r,i){var s=i[0]&255|(i[1]&255)<<8|(i[2]&255)<<16|(i[3]&255)<<24,n=r[0]&255|(r[1]&255)<<8|(r[2]&255)<<16|(r[3]&255)<<24,o=r[4]&255|(r[5]&255)<<8|(r[6]&255)<<16|(r[7]&255)<<24,p=r[8]&255|(r[9]&255)<<8|(r[10]&255)<<16|(r[11]&255)<<24,l=r[12]&255|(r[13]&255)<<8|(r[14]&255)<<16|(r[15]&255)<<24,u=i[4]&255|(i[5]&255)<<8|(i[6]&255)<<16|(i[7]&255)<<24,m=t[0]&255|(t[1]&255)<<8|(t[2]&255)<<16|(t[3]&255)<<24,h=t[4]&255|(t[5]&255)<<8|(t[6]&255)<<16|(t[7]&255)<<24,g=t[8]&255|(t[9]&255)<<8|(t[10]&255)<<16|(t[11]&255)<<24,_=t[12]&255|(t[13]&255)<<8|(t[14]&255)<<16|(t[15]&255)<<24,E=i[8]&255|(i[9]&255)<<8|(i[10]&255)<<16|(i[11]&255)<<24,w=r[16]&255|(r[17]&255)<<8|(r[18]&255)<<16|(r[19]&255)<<24,v=r[20]&255|(r[21]&255)<<8|(r[22]&255)<<16|(r[23]&255)<<24,b=r[24]&255|(r[25]&255)<<8|(r[26]&255)<<16|(r[27]&255)<<24,y=r[28]&255|(r[29]&255)<<8|(r[30]&255)<<16|(r[31]&255)<<24,T=i[12]&255|(i[13]&255)<<8|(i[14]&255)<<16|(i[15]&255)<<24;var I=s,C=n,k=o,R=p,B=l,P=u,O=m,D=h,U=g,L=_,G=E,x=w,Q=v,V=b,q=y,W=T,j;for(var $=0;$<20;$+=2){j=I+Q|0;B^=j<<7|j>>>32-7;j=B+I|0;U^=j<<9|j>>>32-9;j=U+B|0;Q^=j<<13|j>>>32-13;j=Q+U|0;I^=j<<18|j>>>32-18;j=P+C|0;L^=j<<7|j>>>32-7;j=L+P|0;V^=j<<9|j>>>32-9;j=V+L|0;C^=j<<13|j>>>32-13;j=C+V|0;P^=j<<18|j>>>32-18;j=G+O|0;q^=j<<7|j>>>32-7;j=q+G|0;k^=j<<9|j>>>32-9;j=k+q|0;O^=j<<13|j>>>32-13;j=O+k|0;G^=j<<18|j>>>32-18;j=W+x|0;R^=j<<7|j>>>32-7;j=R+W|0;D^=j<<9|j>>>32-9;j=D+R|0;x^=j<<13|j>>>32-13;j=x+D|0;W^=j<<18|j>>>32-18;j=I+R|0;C^=j<<7|j>>>32-7;j=C+I|0;k^=j<<9|j>>>32-9;j=k+C|0;R^=j<<13|j>>>32-13;j=R+k|0;I^=j<<18|j>>>32-18;j=P+B|0;O^=j<<7|j>>>32-7;j=O+P|0;D^=j<<9|j>>>32-9;j=D+O|0;B^=j<<13|j>>>32-13;j=B+D|0;P^=j<<18|j>>>32-18;j=G+L|0;x^=j<<7|j>>>32-7;j=x+G|0;U^=j<<9|j>>>32-9;j=U+x|0;L^=j<<13|j>>>32-13;j=L+U|0;G^=j<<18|j>>>32-18;j=W+q|0;Q^=j<<7|j>>>32-7;j=Q+W|0;V^=j<<9|j>>>32-9;j=V+Q|0;q^=j<<13|j>>>32-13;j=q+V|0;W^=j<<18|j>>>32-18}e[0]=I>>>0&255;e[1]=I>>>8&255;e[2]=I>>>16&255;e[3]=I>>>24&255;e[4]=P>>>0&255;e[5]=P>>>8&255;e[6]=P>>>16&255;e[7]=P>>>24&255;e[8]=G>>>0&255;e[9]=G>>>8&255;e[10]=G>>>16&255;e[11]=G>>>24&255;e[12]=W>>>0&255;e[13]=W>>>8&255;e[14]=W>>>16&255;e[15]=W>>>24&255;e[16]=O>>>0&255;e[17]=O>>>8&255;e[18]=O>>>16&255;e[19]=O>>>24&255;e[20]=D>>>0&255;e[21]=D>>>8&255;e[22]=D>>>16&255;e[23]=D>>>24&255;e[24]=U>>>0&255;e[25]=U>>>8&255;e[26]=U>>>16&255;e[27]=U>>>24&255;e[28]=L>>>0&255;e[29]=L>>>8&255;e[30]=L>>>16&255;e[31]=L>>>24&255}function crypto_core_salsa20(e,t,r,i){core_salsa20(e,t,r,i)}function crypto_core_hsalsa20(e,t,r,i){core_hsalsa20(e,t,r,i)}var g=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function crypto_stream_salsa20_xor(e,t,r,i,s,n,o){var p=new Uint8Array(16),l=new Uint8Array(64);var u,m;for(m=0;m<16;m++)p[m]=0;for(m=0;m<8;m++)p[m]=n[m];while(s>=64){crypto_core_salsa20(l,p,o,g);for(m=0;m<64;m++)e[t+m]=r[i+m]^l[m];u=1;for(m=8;m<16;m++){u=u+(p[m]&255)|0;p[m]=u&255;u>>>=8}s-=64;t+=64;i+=64}if(s>0){crypto_core_salsa20(l,p,o,g);for(m=0;m<s;m++)e[t+m]=r[i+m]^l[m]}return 0}function crypto_stream_salsa20(e,t,r,i,s){var n=new Uint8Array(16),o=new Uint8Array(64);var p,l;for(l=0;l<16;l++)n[l]=0;for(l=0;l<8;l++)n[l]=i[l];while(r>=64){crypto_core_salsa20(o,n,s,g);for(l=0;l<64;l++)e[t+l]=o[l];p=1;for(l=8;l<16;l++){p=p+(n[l]&255)|0;n[l]=p&255;p>>>=8}r-=64;t+=64}if(r>0){crypto_core_salsa20(o,n,s,g);for(l=0;l<r;l++)e[t+l]=o[l]}return 0}function crypto_stream(e,t,r,i,s){var n=new Uint8Array(32);crypto_core_hsalsa20(n,i,s,g);var o=new Uint8Array(8);for(var p=0;p<8;p++)o[p]=i[p+16];return crypto_stream_salsa20(e,t,r,o,n)}function crypto_stream_xor(e,t,r,i,s,n,o){var p=new Uint8Array(32);crypto_core_hsalsa20(p,n,o,g);var l=new Uint8Array(8);for(var u=0;u<8;u++)l[u]=n[u+16];return crypto_stream_salsa20_xor(e,t,r,i,s,l,p)}var poly1305=function(e){this.buffer=new Uint8Array(16);this.r=new Uint16Array(10);this.h=new Uint16Array(10);this.pad=new Uint16Array(8);this.leftover=0;this.fin=0;var t,r,i,s,n,o,p,l;t=e[0]&255|(e[1]&255)<<8;this.r[0]=t&8191;r=e[2]&255|(e[3]&255)<<8;this.r[1]=(t>>>13|r<<3)&8191;i=e[4]&255|(e[5]&255)<<8;this.r[2]=(r>>>10|i<<6)&7939;s=e[6]&255|(e[7]&255)<<8;this.r[3]=(i>>>7|s<<9)&8191;n=e[8]&255|(e[9]&255)<<8;this.r[4]=(s>>>4|n<<12)&255;this.r[5]=n>>>1&8190;o=e[10]&255|(e[11]&255)<<8;this.r[6]=(n>>>14|o<<2)&8191;p=e[12]&255|(e[13]&255)<<8;this.r[7]=(o>>>11|p<<5)&8065;l=e[14]&255|(e[15]&255)<<8;this.r[8]=(p>>>8|l<<8)&8191;this.r[9]=l>>>5&127;this.pad[0]=e[16]&255|(e[17]&255)<<8;this.pad[1]=e[18]&255|(e[19]&255)<<8;this.pad[2]=e[20]&255|(e[21]&255)<<8;this.pad[3]=e[22]&255|(e[23]&255)<<8;this.pad[4]=e[24]&255|(e[25]&255)<<8;this.pad[5]=e[26]&255|(e[27]&255)<<8;this.pad[6]=e[28]&255|(e[29]&255)<<8;this.pad[7]=e[30]&255|(e[31]&255)<<8};poly1305.prototype.blocks=function(e,t,r){var i=this.fin?0:1<<11;var s,n,o,p,l,u,m,h,g;var _,E,w,v,b,y,T,I,C,k;var R=this.h[0],B=this.h[1],P=this.h[2],O=this.h[3],D=this.h[4],U=this.h[5],L=this.h[6],G=this.h[7],x=this.h[8],Q=this.h[9];var V=this.r[0],q=this.r[1],W=this.r[2],j=this.r[3],$=this.r[4],Y=this.r[5],z=this.r[6],J=this.r[7],ee=this.r[8],te=this.r[9];while(r>=16){s=e[t+0]&255|(e[t+1]&255)<<8;R+=s&8191;n=e[t+2]&255|(e[t+3]&255)<<8;B+=(s>>>13|n<<3)&8191;o=e[t+4]&255|(e[t+5]&255)<<8;P+=(n>>>10|o<<6)&8191;p=e[t+6]&255|(e[t+7]&255)<<8;O+=(o>>>7|p<<9)&8191;l=e[t+8]&255|(e[t+9]&255)<<8;D+=(p>>>4|l<<12)&8191;U+=l>>>1&8191;u=e[t+10]&255|(e[t+11]&255)<<8;L+=(l>>>14|u<<2)&8191;m=e[t+12]&255|(e[t+13]&255)<<8;G+=(u>>>11|m<<5)&8191;h=e[t+14]&255|(e[t+15]&255)<<8;x+=(m>>>8|h<<8)&8191;Q+=h>>>5|i;g=0;_=g;_+=R*V;_+=B*(5*te);_+=P*(5*ee);_+=O*(5*J);_+=D*(5*z);g=_>>>13;_&=8191;_+=U*(5*Y);_+=L*(5*$);_+=G*(5*j);_+=x*(5*W);_+=Q*(5*q);g+=_>>>13;_&=8191;E=g;E+=R*q;E+=B*V;E+=P*(5*te);E+=O*(5*ee);E+=D*(5*J);g=E>>>13;E&=8191;E+=U*(5*z);E+=L*(5*Y);E+=G*(5*$);E+=x*(5*j);E+=Q*(5*W);g+=E>>>13;E&=8191;w=g;w+=R*W;w+=B*q;w+=P*V;w+=O*(5*te);w+=D*(5*ee);g=w>>>13;w&=8191;w+=U*(5*J);w+=L*(5*z);w+=G*(5*Y);w+=x*(5*$);w+=Q*(5*j);g+=w>>>13;w&=8191;v=g;v+=R*j;v+=B*W;v+=P*q;v+=O*V;v+=D*(5*te);g=v>>>13;v&=8191;v+=U*(5*ee);v+=L*(5*J);v+=G*(5*z);v+=x*(5*Y);v+=Q*(5*$);g+=v>>>13;v&=8191;b=g;b+=R*$;b+=B*j;b+=P*W;b+=O*q;b+=D*V;g=b>>>13;b&=8191;b+=U*(5*te);b+=L*(5*ee);b+=G*(5*J);b+=x*(5*z);b+=Q*(5*Y);g+=b>>>13;b&=8191;y=g;y+=R*Y;y+=B*$;y+=P*j;y+=O*W;y+=D*q;g=y>>>13;y&=8191;y+=U*V;y+=L*(5*te);y+=G*(5*ee);y+=x*(5*J);y+=Q*(5*z);g+=y>>>13;y&=8191;T=g;T+=R*z;T+=B*Y;T+=P*$;T+=O*j;T+=D*W;g=T>>>13;T&=8191;T+=U*q;T+=L*V;T+=G*(5*te);T+=x*(5*ee);T+=Q*(5*J);g+=T>>>13;T&=8191;I=g;I+=R*J;I+=B*z;I+=P*Y;I+=O*$;I+=D*j;g=I>>>13;I&=8191;I+=U*W;I+=L*q;I+=G*V;I+=x*(5*te);I+=Q*(5*ee);g+=I>>>13;I&=8191;C=g;C+=R*ee;C+=B*J;C+=P*z;C+=O*Y;C+=D*$;g=C>>>13;C&=8191;C+=U*j;C+=L*W;C+=G*q;C+=x*V;C+=Q*(5*te);g+=C>>>13;C&=8191;k=g;k+=R*te;k+=B*ee;k+=P*J;k+=O*z;k+=D*Y;g=k>>>13;k&=8191;k+=U*$;k+=L*j;k+=G*W;k+=x*q;k+=Q*V;g+=k>>>13;k&=8191;g=(g<<2)+g|0;g=g+_|0;_=g&8191;g=g>>>13;E+=g;R=_;B=E;P=w;O=v;D=b;U=y;L=T;G=I;x=C;Q=k;t+=16;r-=16}this.h[0]=R;this.h[1]=B;this.h[2]=P;this.h[3]=O;this.h[4]=D;this.h[5]=U;this.h[6]=L;this.h[7]=G;this.h[8]=x;this.h[9]=Q};poly1305.prototype.finish=function(e,t){var r=new Uint16Array(10);var i,s,n,o;if(this.leftover){o=this.leftover;this.buffer[o++]=1;for(;o<16;o++)this.buffer[o]=0;this.fin=1;this.blocks(this.buffer,0,16)}i=this.h[1]>>>13;this.h[1]&=8191;for(o=2;o<10;o++){this.h[o]+=i;i=this.h[o]>>>13;this.h[o]&=8191}this.h[0]+=i*5;i=this.h[0]>>>13;this.h[0]&=8191;this.h[1]+=i;i=this.h[1]>>>13;this.h[1]&=8191;this.h[2]+=i;r[0]=this.h[0]+5;i=r[0]>>>13;r[0]&=8191;for(o=1;o<10;o++){r[o]=this.h[o]+i;i=r[o]>>>13;r[o]&=8191}r[9]-=1<<13;s=(i^1)-1;for(o=0;o<10;o++)r[o]&=s;s=~s;for(o=0;o<10;o++)this.h[o]=this.h[o]&s|r[o];this.h[0]=(this.h[0]|this.h[1]<<13)&65535;this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535;this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535;this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535;this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535;this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535;this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535;this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535;n=this.h[0]+this.pad[0];this.h[0]=n&65535;for(o=1;o<8;o++){n=(this.h[o]+this.pad[o]|0)+(n>>>16)|0;this.h[o]=n&65535}e[t+0]=this.h[0]>>>0&255;e[t+1]=this.h[0]>>>8&255;e[t+2]=this.h[1]>>>0&255;e[t+3]=this.h[1]>>>8&255;e[t+4]=this.h[2]>>>0&255;e[t+5]=this.h[2]>>>8&255;e[t+6]=this.h[3]>>>0&255;e[t+7]=this.h[3]>>>8&255;e[t+8]=this.h[4]>>>0&255;e[t+9]=this.h[4]>>>8&255;e[t+10]=this.h[5]>>>0&255;e[t+11]=this.h[5]>>>8&255;e[t+12]=this.h[6]>>>0&255;e[t+13]=this.h[6]>>>8&255;e[t+14]=this.h[7]>>>0&255;e[t+15]=this.h[7]>>>8&255};poly1305.prototype.update=function(e,t,r){var i,s;if(this.leftover){s=16-this.leftover;if(s>r)s=r;for(i=0;i<s;i++)this.buffer[this.leftover+i]=e[t+i];r-=s;t+=s;this.leftover+=s;if(this.leftover<16)return;this.blocks(this.buffer,0,16);this.leftover=0}if(r>=16){s=r-r%16;this.blocks(e,t,s);t+=s;r-=s}if(r){for(i=0;i<r;i++)this.buffer[this.leftover+i]=e[t+i];this.leftover+=r}};function crypto_onetimeauth(e,t,r,i,s,n){var o=new poly1305(n);o.update(r,i,s);o.finish(e,t);return 0}function crypto_onetimeauth_verify(e,t,r,i,s,n){var o=new Uint8Array(16);crypto_onetimeauth(o,0,r,i,s,n);return crypto_verify_16(e,t,o,0)}function crypto_secretbox(e,t,r,i,s){var n;if(r<32)return-1;crypto_stream_xor(e,0,t,0,r,i,s);crypto_onetimeauth(e,16,e,32,r-32,e);for(n=0;n<16;n++)e[n]=0;return 0}function crypto_secretbox_open(e,t,r,i,s){var n;var o=new Uint8Array(32);if(r<32)return-1;crypto_stream(o,0,32,i,s);if(crypto_onetimeauth_verify(t,16,t,32,r-32,o)!==0)return-1;crypto_stream_xor(e,0,t,0,r,i,s);for(n=0;n<32;n++)e[n]=0;return 0}function set25519(e,t){var r;for(r=0;r<16;r++)e[r]=t[r]|0}function car25519(e){var t,r,i=1;for(t=0;t<16;t++){r=e[t]+i+65535;i=Math.floor(r/65536);e[t]=r-i*65536}e[0]+=i-1+37*(i-1)}function sel25519(e,t,r){var i,s=~(r-1);for(var n=0;n<16;n++){i=s&(e[n]^t[n]);e[n]^=i;t[n]^=i}}function pack25519(e,t){var r,i,s;var n=gf(),o=gf();for(r=0;r<16;r++)o[r]=t[r];car25519(o);car25519(o);car25519(o);for(i=0;i<2;i++){n[0]=o[0]-65517;for(r=1;r<15;r++){n[r]=o[r]-65535-(n[r-1]>>16&1);n[r-1]&=65535}n[15]=o[15]-32767-(n[14]>>16&1);s=n[15]>>16&1;n[14]&=65535;sel25519(o,n,1-s)}for(r=0;r<16;r++){e[2*r]=o[r]&255;e[2*r+1]=o[r]>>8}}function neq25519(e,t){var r=new Uint8Array(32),i=new Uint8Array(32);pack25519(r,e);pack25519(i,t);return crypto_verify_32(r,0,i,0)}function par25519(e){var t=new Uint8Array(32);pack25519(t,e);return t[0]&1}function unpack25519(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function A(e,t,r){for(var i=0;i<16;i++)e[i]=t[i]+r[i]}function Z(e,t,r){for(var i=0;i<16;i++)e[i]=t[i]-r[i]}function M(e,t,r){var i,s,n=0,o=0,p=0,l=0,u=0,m=0,h=0,g=0,_=0,E=0,w=0,v=0,b=0,y=0,T=0,I=0,C=0,k=0,R=0,B=0,P=0,O=0,D=0,U=0,L=0,G=0,x=0,Q=0,V=0,q=0,W=0,j=r[0],$=r[1],Y=r[2],z=r[3],J=r[4],ee=r[5],te=r[6],re=r[7],ie=r[8],ae=r[9],se=r[10],ne=r[11],oe=r[12],pe=r[13],de=r[14],le=r[15];i=t[0];n+=i*j;o+=i*$;p+=i*Y;l+=i*z;u+=i*J;m+=i*ee;h+=i*te;g+=i*re;_+=i*ie;E+=i*ae;w+=i*se;v+=i*ne;b+=i*oe;y+=i*pe;T+=i*de;I+=i*le;i=t[1];o+=i*j;p+=i*$;l+=i*Y;u+=i*z;m+=i*J;h+=i*ee;g+=i*te;_+=i*re;E+=i*ie;w+=i*ae;v+=i*se;b+=i*ne;y+=i*oe;T+=i*pe;I+=i*de;C+=i*le;i=t[2];p+=i*j;l+=i*$;u+=i*Y;m+=i*z;h+=i*J;g+=i*ee;_+=i*te;E+=i*re;w+=i*ie;v+=i*ae;b+=i*se;y+=i*ne;T+=i*oe;I+=i*pe;C+=i*de;k+=i*le;i=t[3];l+=i*j;u+=i*$;m+=i*Y;h+=i*z;g+=i*J;_+=i*ee;E+=i*te;w+=i*re;v+=i*ie;b+=i*ae;y+=i*se;T+=i*ne;I+=i*oe;C+=i*pe;k+=i*de;R+=i*le;i=t[4];u+=i*j;m+=i*$;h+=i*Y;g+=i*z;_+=i*J;E+=i*ee;w+=i*te;v+=i*re;b+=i*ie;y+=i*ae;T+=i*se;I+=i*ne;C+=i*oe;k+=i*pe;R+=i*de;B+=i*le;i=t[5];m+=i*j;h+=i*$;g+=i*Y;_+=i*z;E+=i*J;w+=i*ee;v+=i*te;b+=i*re;y+=i*ie;T+=i*ae;I+=i*se;C+=i*ne;k+=i*oe;R+=i*pe;B+=i*de;P+=i*le;i=t[6];h+=i*j;g+=i*$;_+=i*Y;E+=i*z;w+=i*J;v+=i*ee;b+=i*te;y+=i*re;T+=i*ie;I+=i*ae;C+=i*se;k+=i*ne;R+=i*oe;B+=i*pe;P+=i*de;O+=i*le;i=t[7];g+=i*j;_+=i*$;E+=i*Y;w+=i*z;v+=i*J;b+=i*ee;y+=i*te;T+=i*re;I+=i*ie;C+=i*ae;k+=i*se;R+=i*ne;B+=i*oe;P+=i*pe;O+=i*de;D+=i*le;i=t[8];_+=i*j;E+=i*$;w+=i*Y;v+=i*z;b+=i*J;y+=i*ee;T+=i*te;I+=i*re;C+=i*ie;k+=i*ae;R+=i*se;B+=i*ne;P+=i*oe;O+=i*pe;D+=i*de;U+=i*le;i=t[9];E+=i*j;w+=i*$;v+=i*Y;b+=i*z;y+=i*J;T+=i*ee;I+=i*te;C+=i*re;k+=i*ie;R+=i*ae;B+=i*se;P+=i*ne;O+=i*oe;D+=i*pe;U+=i*de;L+=i*le;i=t[10];w+=i*j;v+=i*$;b+=i*Y;y+=i*z;T+=i*J;I+=i*ee;C+=i*te;k+=i*re;R+=i*ie;B+=i*ae;P+=i*se;O+=i*ne;D+=i*oe;U+=i*pe;L+=i*de;G+=i*le;i=t[11];v+=i*j;b+=i*$;y+=i*Y;T+=i*z;I+=i*J;C+=i*ee;k+=i*te;R+=i*re;B+=i*ie;P+=i*ae;O+=i*se;D+=i*ne;U+=i*oe;L+=i*pe;G+=i*de;x+=i*le;i=t[12];b+=i*j;y+=i*$;T+=i*Y;I+=i*z;C+=i*J;k+=i*ee;R+=i*te;B+=i*re;P+=i*ie;O+=i*ae;D+=i*se;U+=i*ne;L+=i*oe;G+=i*pe;x+=i*de;Q+=i*le;i=t[13];y+=i*j;T+=i*$;I+=i*Y;C+=i*z;k+=i*J;R+=i*ee;B+=i*te;P+=i*re;O+=i*ie;D+=i*ae;U+=i*se;L+=i*ne;G+=i*oe;x+=i*pe;Q+=i*de;V+=i*le;i=t[14];T+=i*j;I+=i*$;C+=i*Y;k+=i*z;R+=i*J;B+=i*ee;P+=i*te;O+=i*re;D+=i*ie;U+=i*ae;L+=i*se;G+=i*ne;x+=i*oe;Q+=i*pe;V+=i*de;q+=i*le;i=t[15];I+=i*j;C+=i*$;k+=i*Y;R+=i*z;B+=i*J;P+=i*ee;O+=i*te;D+=i*re;U+=i*ie;L+=i*ae;G+=i*se;x+=i*ne;Q+=i*oe;V+=i*pe;q+=i*de;W+=i*le;n+=38*C;o+=38*k;p+=38*R;l+=38*B;u+=38*P;m+=38*O;h+=38*D;g+=38*U;_+=38*L;E+=38*G;w+=38*x;v+=38*Q;b+=38*V;y+=38*q;T+=38*W;s=1;i=n+s+65535;s=Math.floor(i/65536);n=i-s*65536;i=o+s+65535;s=Math.floor(i/65536);o=i-s*65536;i=p+s+65535;s=Math.floor(i/65536);p=i-s*65536;i=l+s+65535;s=Math.floor(i/65536);l=i-s*65536;i=u+s+65535;s=Math.floor(i/65536);u=i-s*65536;i=m+s+65535;s=Math.floor(i/65536);m=i-s*65536;i=h+s+65535;s=Math.floor(i/65536);h=i-s*65536;i=g+s+65535;s=Math.floor(i/65536);g=i-s*65536;i=_+s+65535;s=Math.floor(i/65536);_=i-s*65536;i=E+s+65535;s=Math.floor(i/65536);E=i-s*65536;i=w+s+65535;s=Math.floor(i/65536);w=i-s*65536;i=v+s+65535;s=Math.floor(i/65536);v=i-s*65536;i=b+s+65535;s=Math.floor(i/65536);b=i-s*65536;i=y+s+65535;s=Math.floor(i/65536);y=i-s*65536;i=T+s+65535;s=Math.floor(i/65536);T=i-s*65536;i=I+s+65535;s=Math.floor(i/65536);I=i-s*65536;n+=s-1+37*(s-1);s=1;i=n+s+65535;s=Math.floor(i/65536);n=i-s*65536;i=o+s+65535;s=Math.floor(i/65536);o=i-s*65536;i=p+s+65535;s=Math.floor(i/65536);p=i-s*65536;i=l+s+65535;s=Math.floor(i/65536);l=i-s*65536;i=u+s+65535;s=Math.floor(i/65536);u=i-s*65536;i=m+s+65535;s=Math.floor(i/65536);m=i-s*65536;i=h+s+65535;s=Math.floor(i/65536);h=i-s*65536;i=g+s+65535;s=Math.floor(i/65536);g=i-s*65536;i=_+s+65535;s=Math.floor(i/65536);_=i-s*65536;i=E+s+65535;s=Math.floor(i/65536);E=i-s*65536;i=w+s+65535;s=Math.floor(i/65536);w=i-s*65536;i=v+s+65535;s=Math.floor(i/65536);v=i-s*65536;i=b+s+65535;s=Math.floor(i/65536);b=i-s*65536;i=y+s+65535;s=Math.floor(i/65536);y=i-s*65536;i=T+s+65535;s=Math.floor(i/65536);T=i-s*65536;i=I+s+65535;s=Math.floor(i/65536);I=i-s*65536;n+=s-1+37*(s-1);e[0]=n;e[1]=o;e[2]=p;e[3]=l;e[4]=u;e[5]=m;e[6]=h;e[7]=g;e[8]=_;e[9]=E;e[10]=w;e[11]=v;e[12]=b;e[13]=y;e[14]=T;e[15]=I}function S(e,t){M(e,t,t)}function inv25519(e,t){var r=gf();var i;for(i=0;i<16;i++)r[i]=t[i];for(i=253;i>=0;i--){S(r,r);if(i!==2&&i!==4)M(r,r,t)}for(i=0;i<16;i++)e[i]=r[i]}function pow2523(e,t){var r=gf();var i;for(i=0;i<16;i++)r[i]=t[i];for(i=250;i>=0;i--){S(r,r);if(i!==1)M(r,r,t)}for(i=0;i<16;i++)e[i]=r[i]}function crypto_scalarmult(e,t,r){var i=new Uint8Array(32);var s=new Float64Array(80),n,p;var l=gf(),u=gf(),m=gf(),h=gf(),g=gf(),_=gf();for(p=0;p<31;p++)i[p]=t[p];i[31]=t[31]&127|64;i[0]&=248;unpack25519(s,r);for(p=0;p<16;p++){u[p]=s[p];h[p]=l[p]=m[p]=0}l[0]=h[0]=1;for(p=254;p>=0;--p){n=i[p>>>3]>>>(p&7)&1;sel25519(l,u,n);sel25519(m,h,n);A(g,l,m);Z(l,l,m);A(m,u,h);Z(u,u,h);S(h,g);S(_,l);M(l,m,l);M(m,u,g);A(g,l,m);Z(l,l,m);S(u,l);Z(m,h,_);M(l,m,o);A(l,l,h);M(m,m,l);M(l,h,_);M(h,u,s);S(u,g);sel25519(l,u,n);sel25519(m,h,n)}for(p=0;p<16;p++){s[p+16]=l[p];s[p+32]=m[p];s[p+48]=u[p];s[p+64]=h[p]}var E=s.subarray(32);var w=s.subarray(16);inv25519(E,E);M(w,w,E);pack25519(e,w);return 0}function crypto_scalarmult_base(e,t){return crypto_scalarmult(e,t,i)}function crypto_box_keypair(e,t){randombytes(t,32);return crypto_scalarmult_base(e,t)}function crypto_box_beforenm(e,r,i){var s=new Uint8Array(32);crypto_scalarmult(s,i,r);return crypto_core_hsalsa20(e,t,s,g)}var _=crypto_secretbox;var E=crypto_secretbox_open;function crypto_box(e,t,r,i,s,n){var o=new Uint8Array(32);crypto_box_beforenm(o,s,n);return _(e,t,r,i,o)}function crypto_box_open(e,t,r,i,s,n){var o=new Uint8Array(32);crypto_box_beforenm(o,s,n);return E(e,t,r,i,o)}var w=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function crypto_hashblocks_hl(e,t,r,i){var s=new Int32Array(16),n=new Int32Array(16),o,p,l,u,m,h,g,_,E,v,b,y,T,I,C,k,R,B,P,O,D,U,L,G,x,Q;var V=e[0],q=e[1],W=e[2],j=e[3],$=e[4],Y=e[5],z=e[6],J=e[7],ee=t[0],te=t[1],re=t[2],ie=t[3],ae=t[4],se=t[5],ne=t[6],oe=t[7];var pe=0;while(i>=128){for(P=0;P<16;P++){O=8*P+pe;s[P]=r[O+0]<<24|r[O+1]<<16|r[O+2]<<8|r[O+3];n[P]=r[O+4]<<24|r[O+5]<<16|r[O+6]<<8|r[O+7]}for(P=0;P<80;P++){o=V;p=q;l=W;u=j;m=$;h=Y;g=z;_=J;E=ee;v=te;b=re;y=ie;T=ae;I=se;C=ne;k=oe;D=J;U=oe;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=($>>>14|ae<<32-14)^($>>>18|ae<<32-18)^(ae>>>41-32|$<<32-(41-32));U=(ae>>>14|$<<32-14)^(ae>>>18|$<<32-18)^($>>>41-32|ae<<32-(41-32));L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;D=$&Y^~$&z;U=ae&se^~ae&ne;L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;D=w[P*2];U=w[P*2+1];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;D=s[P%16];U=n[P%16];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;R=x&65535|Q<<16;B=L&65535|G<<16;D=R;U=B;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=(V>>>28|ee<<32-28)^(ee>>>34-32|V<<32-(34-32))^(ee>>>39-32|V<<32-(39-32));U=(ee>>>28|V<<32-28)^(V>>>34-32|ee<<32-(34-32))^(V>>>39-32|ee<<32-(39-32));L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;D=V&q^V&W^q&W;U=ee&te^ee&re^te&re;L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;_=x&65535|Q<<16;k=L&65535|G<<16;D=u;U=y;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=R;U=B;L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;u=x&65535|Q<<16;y=L&65535|G<<16;q=o;W=p;j=l;$=u;Y=m;z=h;J=g;V=_;te=E;re=v;ie=b;ae=y;se=T;ne=I;oe=C;ee=k;if(P%16===15){for(O=0;O<16;O++){D=s[O];U=n[O];L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=s[(O+9)%16];U=n[(O+9)%16];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;R=s[(O+1)%16];B=n[(O+1)%16];D=(R>>>1|B<<32-1)^(R>>>8|B<<32-8)^R>>>7;U=(B>>>1|R<<32-1)^(B>>>8|R<<32-8)^(B>>>7|R<<32-7);L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;R=s[(O+14)%16];B=n[(O+14)%16];D=(R>>>19|B<<32-19)^(B>>>61-32|R<<32-(61-32))^R>>>6;U=(B>>>19|R<<32-19)^(R>>>61-32|B<<32-(61-32))^(B>>>6|R<<32-6);L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;s[O]=x&65535|Q<<16;n[O]=L&65535|G<<16}}}D=V;U=ee;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[0];U=t[0];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[0]=V=x&65535|Q<<16;t[0]=ee=L&65535|G<<16;D=q;U=te;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[1];U=t[1];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[1]=q=x&65535|Q<<16;t[1]=te=L&65535|G<<16;D=W;U=re;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[2];U=t[2];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[2]=W=x&65535|Q<<16;t[2]=re=L&65535|G<<16;D=j;U=ie;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[3];U=t[3];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[3]=j=x&65535|Q<<16;t[3]=ie=L&65535|G<<16;D=$;U=ae;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[4];U=t[4];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[4]=$=x&65535|Q<<16;t[4]=ae=L&65535|G<<16;D=Y;U=se;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[5];U=t[5];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[5]=Y=x&65535|Q<<16;t[5]=se=L&65535|G<<16;D=z;U=ne;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[6];U=t[6];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[6]=z=x&65535|Q<<16;t[6]=ne=L&65535|G<<16;D=J;U=oe;L=U&65535;G=U>>>16;x=D&65535;Q=D>>>16;D=e[7];U=t[7];L+=U&65535;G+=U>>>16;x+=D&65535;Q+=D>>>16;G+=L>>>16;x+=G>>>16;Q+=x>>>16;e[7]=J=x&65535|Q<<16;t[7]=oe=L&65535|G<<16;pe+=128;i-=128}return i}function crypto_hash(e,t,r){var i=new Int32Array(8),s=new Int32Array(8),n=new Uint8Array(256),o,p=r;i[0]=1779033703;i[1]=3144134277;i[2]=1013904242;i[3]=2773480762;i[4]=1359893119;i[5]=2600822924;i[6]=528734635;i[7]=1541459225;s[0]=4089235720;s[1]=2227873595;s[2]=4271175723;s[3]=1595750129;s[4]=2917565137;s[5]=725511199;s[6]=4215389547;s[7]=327033209;crypto_hashblocks_hl(i,s,t,r);r%=128;for(o=0;o<r;o++)n[o]=t[p-r+o];n[r]=128;r=256-128*(r<112?1:0);n[r-9]=0;ts64(n,r-8,p/536870912|0,p<<3);crypto_hashblocks_hl(i,s,n,r);for(o=0;o<8;o++)ts64(e,8*o,i[o],s[o]);return 0}function add(e,t){var r=gf(),i=gf(),s=gf(),n=gf(),o=gf(),p=gf(),u=gf(),m=gf(),h=gf();Z(r,e[1],e[0]);Z(h,t[1],t[0]);M(r,r,h);A(i,e[0],e[1]);A(h,t[0],t[1]);M(i,i,h);M(s,e[3],t[3]);M(s,s,l);M(n,e[2],t[2]);A(n,n,n);Z(o,i,r);Z(p,n,s);A(u,n,s);A(m,i,r);M(e[0],o,p);M(e[1],m,u);M(e[2],u,p);M(e[3],o,m)}function cswap(e,t,r){var i;for(i=0;i<4;i++){sel25519(e[i],t[i],r)}}function pack(e,t){var r=gf(),i=gf(),s=gf();inv25519(s,t[2]);M(r,t[0],s);M(i,t[1],s);pack25519(e,i);e[31]^=par25519(r)<<7}function scalarmult(e,t,r){var i,o;set25519(e[0],s);set25519(e[1],n);set25519(e[2],n);set25519(e[3],s);for(o=255;o>=0;--o){i=r[o/8|0]>>(o&7)&1;cswap(e,t,i);add(t,e);add(e,e);cswap(e,t,i)}}function scalarbase(e,t){var r=[gf(),gf(),gf(),gf()];set25519(r[0],u);set25519(r[1],m);set25519(r[2],n);M(r[3],u,m);scalarmult(e,r,t)}function crypto_sign_keypair(e,t,r){var i=new Uint8Array(64);var s=[gf(),gf(),gf(),gf()];var n;if(!r)randombytes(t,32);crypto_hash(i,t,32);i[0]&=248;i[31]&=127;i[31]|=64;scalarbase(s,i);pack(e,s);for(n=0;n<32;n++)t[n+32]=e[n];return 0}var v=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function modL(e,t){var r,i,s,n;for(i=63;i>=32;--i){r=0;for(s=i-32,n=i-12;s<n;++s){t[s]+=r-16*t[i]*v[s-(i-32)];r=t[s]+128>>8;t[s]-=r*256}t[s]+=r;t[i]=0}r=0;for(s=0;s<32;s++){t[s]+=r-(t[31]>>4)*v[s];r=t[s]>>8;t[s]&=255}for(s=0;s<32;s++)t[s]-=r*v[s];for(i=0;i<32;i++){t[i+1]+=t[i]>>8;e[i]=t[i]&255}}function reduce(e){var t=new Float64Array(64),r;for(r=0;r<64;r++)t[r]=e[r];for(r=0;r<64;r++)e[r]=0;modL(e,t)}function crypto_sign(e,t,r,i){var s=new Uint8Array(64),n=new Uint8Array(64),o=new Uint8Array(64);var p,l,u=new Float64Array(64);var m=[gf(),gf(),gf(),gf()];crypto_hash(s,i,32);s[0]&=248;s[31]&=127;s[31]|=64;var h=r+64;for(p=0;p<r;p++)e[64+p]=t[p];for(p=0;p<32;p++)e[32+p]=s[32+p];crypto_hash(o,e.subarray(32),r+32);reduce(o);scalarbase(m,o);pack(e,m);for(p=32;p<64;p++)e[p]=i[p];crypto_hash(n,e,r+64);reduce(n);for(p=0;p<64;p++)u[p]=0;for(p=0;p<32;p++)u[p]=o[p];for(p=0;p<32;p++){for(l=0;l<32;l++){u[p+l]+=n[p]*s[l]}}modL(e.subarray(32),u);return h}function unpackneg(e,t){var r=gf(),i=gf(),o=gf(),l=gf(),u=gf(),m=gf(),g=gf();set25519(e[2],n);unpack25519(e[1],t);S(o,e[1]);M(l,o,p);Z(o,o,e[2]);A(l,e[2],l);S(u,l);S(m,u);M(g,m,u);M(r,g,o);M(r,r,l);pow2523(r,r);M(r,r,o);M(r,r,l);M(r,r,l);M(e[0],r,l);S(i,e[0]);M(i,i,l);if(neq25519(i,o))M(e[0],e[0],h);S(i,e[0]);M(i,i,l);if(neq25519(i,o))return-1;if(par25519(e[0])===t[31]>>7)Z(e[0],s,e[0]);M(e[3],e[0],e[1]);return 0}function crypto_sign_open(e,t,r,i){var s,n;var o=new Uint8Array(32),p=new Uint8Array(64);var l=[gf(),gf(),gf(),gf()],u=[gf(),gf(),gf(),gf()];n=-1;if(r<64)return-1;if(unpackneg(u,i))return-1;for(s=0;s<r;s++)e[s]=t[s];for(s=0;s<32;s++)e[s+32]=i[s];crypto_hash(p,e,r);reduce(p);scalarmult(l,u,p);scalarbase(u,t.subarray(32));add(l,u);pack(o,l);r-=64;if(crypto_verify_32(t,0,o,0)){for(s=0;s<r;s++)e[s]=0;return-1}for(s=0;s<r;s++)e[s]=t[s+64];n=r;return n}var b=32,y=24,T=32,I=16,C=32,k=32,R=32,B=32,P=32,O=y,D=T,U=I,L=64,G=32,x=64,Q=32,V=64;e.lowlevel={crypto_core_hsalsa20:crypto_core_hsalsa20,crypto_stream_xor:crypto_stream_xor,crypto_stream:crypto_stream,crypto_stream_salsa20_xor:crypto_stream_salsa20_xor,crypto_stream_salsa20:crypto_stream_salsa20,crypto_onetimeauth:crypto_onetimeauth,crypto_onetimeauth_verify:crypto_onetimeauth_verify,crypto_verify_16:crypto_verify_16,crypto_verify_32:crypto_verify_32,crypto_secretbox:crypto_secretbox,crypto_secretbox_open:crypto_secretbox_open,crypto_scalarmult:crypto_scalarmult,crypto_scalarmult_base:crypto_scalarmult_base,crypto_box_beforenm:crypto_box_beforenm,crypto_box_afternm:_,crypto_box:crypto_box,crypto_box_open:crypto_box_open,crypto_box_keypair:crypto_box_keypair,crypto_hash:crypto_hash,crypto_sign:crypto_sign,crypto_sign_keypair:crypto_sign_keypair,crypto_sign_open:crypto_sign_open,crypto_secretbox_KEYBYTES:b,crypto_secretbox_NONCEBYTES:y,crypto_secretbox_ZEROBYTES:T,crypto_secretbox_BOXZEROBYTES:I,crypto_scalarmult_BYTES:C,crypto_scalarmult_SCALARBYTES:k,crypto_box_PUBLICKEYBYTES:R,crypto_box_SECRETKEYBYTES:B,crypto_box_BEFORENMBYTES:P,crypto_box_NONCEBYTES:O,crypto_box_ZEROBYTES:D,crypto_box_BOXZEROBYTES:U,crypto_sign_BYTES:L,crypto_sign_PUBLICKEYBYTES:G,crypto_sign_SECRETKEYBYTES:x,crypto_sign_SEEDBYTES:Q,crypto_hash_BYTES:V};function checkLengths(e,t){if(e.length!==b)throw new Error("bad key size");if(t.length!==y)throw new Error("bad nonce size")}function checkBoxLengths(e,t){if(e.length!==R)throw new Error("bad public key size");if(t.length!==B)throw new Error("bad secret key size")}function checkArrayTypes(){var e,t;for(t=0;t<arguments.length;t++){if((e=Object.prototype.toString.call(arguments[t]))!=="[object Uint8Array]")throw new TypeError("unexpected type "+e+", use Uint8Array")}}function cleanup(e){for(var t=0;t<e.length;t++)e[t]=0}if(!e.util){e.util={};e.util.decodeUTF8=e.util.encodeUTF8=e.util.encodeBase64=e.util.decodeBase64=function(){throw new Error("nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js")}}e.randomBytes=function(e){var t=new Uint8Array(e);randombytes(t,e);return t};e.secretbox=function(e,t,r){checkArrayTypes(e,t,r);checkLengths(r,t);var i=new Uint8Array(T+e.length);var s=new Uint8Array(i.length);for(var n=0;n<e.length;n++)i[n+T]=e[n];crypto_secretbox(s,i,i.length,t,r);return s.subarray(I)};e.secretbox.open=function(e,t,r){checkArrayTypes(e,t,r);checkLengths(r,t);var i=new Uint8Array(I+e.length);var s=new Uint8Array(i.length);for(var n=0;n<e.length;n++)i[n+I]=e[n];if(i.length<32)return false;if(crypto_secretbox_open(s,i,i.length,t,r)!==0)return false;return s.subarray(T)};e.secretbox.keyLength=b;e.secretbox.nonceLength=y;e.secretbox.overheadLength=I;e.scalarMult=function(e,t){checkArrayTypes(e,t);if(e.length!==k)throw new Error("bad n size");if(t.length!==C)throw new Error("bad p size");var r=new Uint8Array(C);crypto_scalarmult(r,e,t);return r};e.scalarMult.base=function(e){checkArrayTypes(e);if(e.length!==k)throw new Error("bad n size");var t=new Uint8Array(C);crypto_scalarmult_base(t,e);return t};e.scalarMult.scalarLength=k;e.scalarMult.groupElementLength=C;e.box=function(t,r,i,s){var n=e.box.before(i,s);return e.secretbox(t,r,n)};e.box.before=function(e,t){checkArrayTypes(e,t);checkBoxLengths(e,t);var r=new Uint8Array(P);crypto_box_beforenm(r,e,t);return r};e.box.after=e.secretbox;e.box.open=function(t,r,i,s){var n=e.box.before(i,s);return e.secretbox.open(t,r,n)};e.box.open.after=e.secretbox.open;e.box.keyPair=function(){var e=new Uint8Array(R);var t=new Uint8Array(B);crypto_box_keypair(e,t);return{publicKey:e,secretKey:t}};e.box.keyPair.fromSecretKey=function(e){checkArrayTypes(e);if(e.length!==B)throw new Error("bad secret key size");var t=new Uint8Array(R);crypto_scalarmult_base(t,e);return{publicKey:t,secretKey:new Uint8Array(e)}};e.box.publicKeyLength=R;e.box.secretKeyLength=B;e.box.sharedKeyLength=P;e.box.nonceLength=O;e.box.overheadLength=e.secretbox.overheadLength;e.sign=function(e,t){checkArrayTypes(e,t);if(t.length!==x)throw new Error("bad secret key size");var r=new Uint8Array(L+e.length);crypto_sign(r,e,e.length,t);return r};e.sign.open=function(e,t){if(arguments.length!==2)throw new Error("nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?");checkArrayTypes(e,t);if(t.length!==G)throw new Error("bad public key size");var r=new Uint8Array(e.length);var i=crypto_sign_open(r,e,e.length,t);if(i<0)return null;var s=new Uint8Array(i);for(var n=0;n<s.length;n++)s[n]=r[n];return s};e.sign.detached=function(t,r){var i=e.sign(t,r);var s=new Uint8Array(L);for(var n=0;n<s.length;n++)s[n]=i[n];return s};e.sign.detached.verify=function(e,t,r){checkArrayTypes(e,t,r);if(t.length!==L)throw new Error("bad signature size");if(r.length!==G)throw new Error("bad public key size");var i=new Uint8Array(L+e.length);var s=new Uint8Array(L+e.length);var n;for(n=0;n<L;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+L]=e[n];return crypto_sign_open(s,i,i.length,r)>=0};e.sign.keyPair=function(){var e=new Uint8Array(G);var t=new Uint8Array(x);crypto_sign_keypair(e,t);return{publicKey:e,secretKey:t}};e.sign.keyPair.fromSecretKey=function(e){checkArrayTypes(e);if(e.length!==x)throw new Error("bad secret key size");var t=new Uint8Array(G);for(var r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}};e.sign.keyPair.fromSeed=function(e){checkArrayTypes(e);if(e.length!==Q)throw new Error("bad seed size");var t=new Uint8Array(G);var r=new Uint8Array(x);for(var i=0;i<32;i++)r[i]=e[i];crypto_sign_keypair(t,r,true);return{publicKey:t,secretKey:r}};e.sign.publicKeyLength=G;e.sign.secretKeyLength=x;e.sign.seedLength=Q;e.sign.signatureLength=L;e.hash=function(e){checkArrayTypes(e);var t=new Uint8Array(V);crypto_hash(t,e,e.length);return t};e.hash.hashLength=V;e.verify=function(e,t){checkArrayTypes(e,t);if(e.length===0||t.length===0)return false;if(e.length!==t.length)return false;return vn(e,0,t,0,e.length)===0?true:false};e.setPRNG=function(e){randombytes=e};(function(){var t=typeof self!=="undefined"?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){var i=65536;e.setPRNG((function(e,r){var s,n=new Uint8Array(r);for(s=0;s<r;s+=i){t.getRandomValues(n.subarray(s,s+Math.min(r-s,i)))}for(s=0;s<r;s++)e[s]=n[s];cleanup(n)}))}else if(true){t=r(6113);if(t&&t.randomBytes){e.setPRNG((function(e,r){var i,s=t.randomBytes(r);for(i=0;i<r;i++)e[i]=s[i];cleanup(s)}))}}})()})(true&&e.exports?e.exports:self.nacl=self.nacl||{})},5030:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&"version"in process){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}t.getUserAgent=getUserAgent},5840:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});Object.defineProperty(t,"v1",{enumerable:true,get:function(){return i.default}});Object.defineProperty(t,"v3",{enumerable:true,get:function(){return s.default}});Object.defineProperty(t,"v4",{enumerable:true,get:function(){return n.default}});Object.defineProperty(t,"v5",{enumerable:true,get:function(){return o.default}});Object.defineProperty(t,"NIL",{enumerable:true,get:function(){return p.default}});Object.defineProperty(t,"version",{enumerable:true,get:function(){return l.default}});Object.defineProperty(t,"validate",{enumerable:true,get:function(){return u.default}});Object.defineProperty(t,"stringify",{enumerable:true,get:function(){return m.default}});Object.defineProperty(t,"parse",{enumerable:true,get:function(){return h.default}});var i=_interopRequireDefault(r(8628));var s=_interopRequireDefault(r(6409));var n=_interopRequireDefault(r(5122));var o=_interopRequireDefault(r(9120));var p=_interopRequireDefault(r(5332));var l=_interopRequireDefault(r(1595));var u=_interopRequireDefault(r(6900));var m=_interopRequireDefault(r(8950));var h=_interopRequireDefault(r(2746));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},4569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function md5(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return i.default.createHash("md5").update(e).digest()}var s=md5;t["default"]=s},5332:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r="00000000-0000-0000-0000-000000000000";t["default"]=r},2746:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function parse(e){if(!(0,i.default)(e)){throw TypeError("Invalid UUID")}let t;const r=new Uint8Array(16);r[0]=(t=parseInt(e.slice(0,8),16))>>>24;r[1]=t>>>16&255;r[2]=t>>>8&255;r[3]=t&255;r[4]=(t=parseInt(e.slice(9,13),16))>>>8;r[5]=t&255;r[6]=(t=parseInt(e.slice(14,18),16))>>>8;r[7]=t&255;r[8]=(t=parseInt(e.slice(19,23),16))>>>8;r[9]=t&255;r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255;r[11]=t/4294967296&255;r[12]=t>>>24&255;r[13]=t>>>16&255;r[14]=t>>>8&255;r[15]=t&255;return r}var s=parse;t["default"]=s},814:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;t["default"]=r},807:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=rng;var i=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const s=new Uint8Array(256);let n=s.length;function rng(){if(n>s.length-16){i.default.randomFillSync(s);n=0}return s.slice(n,n+=16)}},5274:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(6113));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function sha1(e){if(Array.isArray(e)){e=Buffer.from(e)}else if(typeof e==="string"){e=Buffer.from(e,"utf8")}return i.default.createHash("sha1").update(e).digest()}var s=sha1;t["default"]=s},8950:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const s=[];for(let e=0;e<256;++e){s.push((e+256).toString(16).substr(1))}function stringify(e,t=0){const r=(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase();if(!(0,i.default)(r)){throw TypeError("Stringified UUID is invalid")}return r}var n=stringify;t["default"]=n},8628:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(807));var s=_interopRequireDefault(r(8950));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}let n;let o;let p=0;let l=0;function v1(e,t,r){let u=t&&r||0;const m=t||new Array(16);e=e||{};let h=e.node||n;let g=e.clockseq!==undefined?e.clockseq:o;if(h==null||g==null){const t=e.random||(e.rng||i.default)();if(h==null){h=n=[t[0]|1,t[1],t[2],t[3],t[4],t[5]]}if(g==null){g=o=(t[6]<<8|t[7])&16383}}let _=e.msecs!==undefined?e.msecs:Date.now();let E=e.nsecs!==undefined?e.nsecs:l+1;const w=_-p+(E-l)/1e4;if(w<0&&e.clockseq===undefined){g=g+1&16383}if((w<0||_>p)&&e.nsecs===undefined){E=0}if(E>=1e4){throw new Error("uuid.v1(): Can't create more than 10M uuids/sec")}p=_;l=E;o=g;_+=122192928e5;const v=((_&268435455)*1e4+E)%4294967296;m[u++]=v>>>24&255;m[u++]=v>>>16&255;m[u++]=v>>>8&255;m[u++]=v&255;const b=_/4294967296*1e4&268435455;m[u++]=b>>>8&255;m[u++]=b&255;m[u++]=b>>>24&15|16;m[u++]=b>>>16&255;m[u++]=g>>>8|128;m[u++]=g&255;for(let e=0;e<6;++e){m[u+e]=h[e]}return t||(0,s.default)(m)}var u=v1;t["default"]=u},6409:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(5998));var s=_interopRequireDefault(r(4569));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=(0,i.default)("v3",48,s.default);var o=n;t["default"]=o},5998:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=_default;t.URL=t.DNS=void 0;var i=_interopRequireDefault(r(8950));var s=_interopRequireDefault(r(2746));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function stringToBytes(e){e=unescape(encodeURIComponent(e));const t=[];for(let r=0;r<e.length;++r){t.push(e.charCodeAt(r))}return t}const n="6ba7b810-9dad-11d1-80b4-00c04fd430c8";t.DNS=n;const o="6ba7b811-9dad-11d1-80b4-00c04fd430c8";t.URL=o;function _default(e,t,r){function generateUUID(e,n,o,p){if(typeof e==="string"){e=stringToBytes(e)}if(typeof n==="string"){n=(0,s.default)(n)}if(n.length!==16){throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)")}let l=new Uint8Array(16+e.length);l.set(n);l.set(e,n.length);l=r(l);l[6]=l[6]&15|t;l[8]=l[8]&63|128;if(o){p=p||0;for(let e=0;e<16;++e){o[p+e]=l[e]}return o}return(0,i.default)(l)}try{generateUUID.name=e}catch(e){}generateUUID.DNS=n;generateUUID.URL=o;return generateUUID}},5122:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(807));var s=_interopRequireDefault(r(8950));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function v4(e,t,r){e=e||{};const n=e.random||(e.rng||i.default)();n[6]=n[6]&15|64;n[8]=n[8]&63|128;if(t){r=r||0;for(let e=0;e<16;++e){t[r+e]=n[e]}return t}return(0,s.default)(n)}var n=v4;t["default"]=n},9120:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(5998));var s=_interopRequireDefault(r(5274));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const n=(0,i.default)("v5",80,s.default);var o=n;t["default"]=o},6900:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(814));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function validate(e){return typeof e==="string"&&i.default.test(e)}var s=validate;t["default"]=s},1595:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t["default"]=void 0;var i=_interopRequireDefault(r(6900));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function version(e){if(!(0,i.default)(e)){throw TypeError("Invalid UUID")}return parseInt(e.substr(14,1),16)}var s=version;t["default"]=s},4886:e=>{"use strict";var t={};e.exports=t;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,t){if(!t.unsigned){--e}const r=t.unsigned?0:-Math.pow(2,e);const i=Math.pow(2,e)-1;const s=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e);const n=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){if(!o)o={};let p=+e;if(o.enforceRange){if(!Number.isFinite(p)){throw new TypeError("Argument is not a finite number")}p=sign(p)*Math.floor(Math.abs(p));if(p<r||p>i){throw new TypeError("Argument is not in byte range")}return p}if(!isNaN(p)&&o.clamp){p=evenRound(p);if(p<r)p=r;if(p>i)p=i;return p}if(!Number.isFinite(p)||p===0){return 0}p=sign(p)*Math.floor(Math.abs(p));p=p%s;if(!t.unsigned&&p>=n){return p-s}else if(t.unsigned){if(p<0){p+=s}else if(p===-0){return 0}}return p}}t["void"]=function(){return undefined};t["boolean"]=function(e){return!!e};t["byte"]=createNumberConversion(8,{unsigned:false});t["octet"]=createNumberConversion(8,{unsigned:true});t["short"]=createNumberConversion(16,{unsigned:false});t["unsigned short"]=createNumberConversion(16,{unsigned:true});t["long"]=createNumberConversion(32,{unsigned:false});t["unsigned long"]=createNumberConversion(32,{unsigned:true});t["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});t["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});t["double"]=function(e){const t=+e;if(!Number.isFinite(t)){throw new TypeError("Argument is not a finite floating-point value")}return t};t["unrestricted double"]=function(e){const t=+e;if(isNaN(t)){throw new TypeError("Argument is NaN")}return t};t["float"]=t["double"];t["unrestricted float"]=t["unrestricted double"];t["DOMString"]=function(e,t){if(!t)t={};if(t.treatNullAsEmptyString&&e===null){return""}return String(e)};t["ByteString"]=function(e,t){const r=String(e);let i=undefined;for(let e=0;(i=r.codePointAt(e))!==undefined;++e){if(i>255){throw new TypeError("Argument is not a valid bytestring")}}return r};t["USVString"]=function(e){const t=String(e);const r=t.length;const i=[];for(let e=0;e<r;++e){const s=t.charCodeAt(e);if(s<55296||s>57343){i.push(String.fromCodePoint(s))}else if(56320<=s&&s<=57343){i.push(String.fromCodePoint(65533))}else{if(e===r-1){i.push(String.fromCodePoint(65533))}else{const r=t.charCodeAt(e+1);if(56320<=r&&r<=57343){const t=s&1023;const n=r&1023;i.push(String.fromCodePoint((2<<15)+(2<<9)*t+n));++e}else{i.push(String.fromCodePoint(65533))}}}}return i.join("")};t["Date"]=function(e,t){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};t["RegExp"]=function(e,t){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},7537:(e,t,r)=>{"use strict";const i=r(2158);t.implementation=class URLImpl{constructor(e){const t=e[0];const r=e[1];let s=null;if(r!==undefined){s=i.basicURLParse(r);if(s==="failure"){throw new TypeError("Invalid base URL")}}const n=i.basicURLParse(t,{baseURL:s});if(n==="failure"){throw new TypeError("Invalid URL")}this._url=n}get href(){return i.serializeURL(this._url)}set href(e){const t=i.basicURLParse(e);if(t==="failure"){throw new TypeError("Invalid URL")}this._url=t}get origin(){return i.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){i.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return i.serializeHost(e.host)}return i.serializeHost(e.host)+":"+i.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}i.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return i.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}i.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return i.serializeInteger(this._url.port)}set port(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{i.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];i.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const t=this._url;if(e===""){t.query=null;return}const r=e[0]==="?"?e.substring(1):e;t.query="";i.basicURLParse(r,{url:t,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const t=e[0]==="#"?e.substring(1):e;this._url.fragment="";i.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},3394:(e,t,r)=>{"use strict";const i=r(4886);const s=r(3185);const n=r(7537);const o=s.implSymbol;function URL(t){if(!this||this[o]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const r=[];for(let e=0;e<arguments.length&&e<2;++e){r[e]=arguments[e]}r[0]=i["USVString"](r[0]);if(r[1]!==undefined){r[1]=i["USVString"](r[1])}e.exports.setup(this,r)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const t=[];for(let e=0;e<arguments.length&&e<0;++e){t[e]=arguments[e]}return this[o].toJSON.apply(this[o],t)};Object.defineProperty(URL.prototype,"href",{get(){return this[o].href},set(e){e=i["USVString"](e);this[o].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[o].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[o].protocol},set(e){e=i["USVString"](e);this[o].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[o].username},set(e){e=i["USVString"](e);this[o].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[o].password},set(e){e=i["USVString"](e);this[o].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[o].host},set(e){e=i["USVString"](e);this[o].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[o].hostname},set(e){e=i["USVString"](e);this[o].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[o].port},set(e){e=i["USVString"](e);this[o].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[o].pathname},set(e){e=i["USVString"](e);this[o].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[o].search},set(e){e=i["USVString"](e);this[o].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[o].hash},set(e){e=i["USVString"](e);this[o].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[o]instanceof n.implementation},create(e,t){let r=Object.create(URL.prototype);this.setup(r,e,t);return r},setup(e,t,r){if(!r)r={};r.wrapper=e;e[o]=new n.implementation(t,r);e[o][s.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},8665:(e,t,r)=>{"use strict";t.URL=r(3394)["interface"];t.serializeURL=r(2158).serializeURL;t.serializeURLOrigin=r(2158).serializeURLOrigin;t.basicURLParse=r(2158).basicURLParse;t.setTheUsername=r(2158).setTheUsername;t.setThePassword=r(2158).setThePassword;t.serializeHost=r(2158).serializeHost;t.serializeInteger=r(2158).serializeInteger;t.parseURL=r(2158).parseURL},2158:(e,t,r)=>{"use strict";const i=r(5477);const s=r(4256);const n={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const o=Symbol("failure");function countSymbols(e){return i.ucs2.decode(e).length}function at(e,t){const r=e[t];return isNaN(r)?undefined:String.fromCodePoint(r)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,t){return isASCIIAlpha(e)&&(t===58||t===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return n[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return n[e]}function percentEncode(e){let t=e.toString(16).toUpperCase();if(t.length===1){t="0"+t}return"%"+t}function utf8PercentEncode(e){const t=new Buffer(e);let r="";for(let e=0;e<t.length;++e){r+=percentEncode(t[e])}return r}function utf8PercentDecode(e){const t=new Buffer(e);const r=[];for(let e=0;e<t.length;++e){if(t[e]!==37){r.push(t[e])}else if(t[e]===37&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])){r.push(parseInt(t.slice(e+1,e+3).toString(),16));e+=2}else{r.push(t[e])}}return new Buffer(r).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const p=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||p.has(e)}const l=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||l.has(e)}function percentEncodeChar(e,t){const r=String.fromCodePoint(e);if(t(e)){return utf8PercentEncode(r)}return r}function parseIPv4Number(e){let t=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);t=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);t=8}if(e===""){return 0}const r=t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(r.test(e)){return o}return parseInt(e,t)}function parseIPv4(e){const t=e.split(".");if(t[t.length-1]===""){if(t.length>1){t.pop()}}if(t.length>4){return e}const r=[];for(const i of t){if(i===""){return e}const t=parseIPv4Number(i);if(t===o){return e}r.push(t)}for(let e=0;e<r.length-1;++e){if(r[e]>255){return o}}if(r[r.length-1]>=Math.pow(256,5-r.length)){return o}let i=r.pop();let s=0;for(const e of r){i+=e*Math.pow(256,3-s);++s}return i}function serializeIPv4(e){let t="";let r=e;for(let e=1;e<=4;++e){t=String(r%256)+t;if(e!==4){t="."+t}r=Math.floor(r/256)}return t}function parseIPv6(e){const t=[0,0,0,0,0,0,0,0];let r=0;let s=null;let n=0;e=i.ucs2.decode(e);if(e[n]===58){if(e[n+1]!==58){return o}n+=2;++r;s=r}while(n<e.length){if(r===8){return o}if(e[n]===58){if(s!==null){return o}++n;++r;s=r;continue}let i=0;let p=0;while(p<4&&isASCIIHex(e[n])){i=i*16+parseInt(at(e,n),16);++n;++p}if(e[n]===46){if(p===0){return o}n-=p;if(r>6){return o}let i=0;while(e[n]!==undefined){let s=null;if(i>0){if(e[n]===46&&i<4){++n}else{return o}}if(!isASCIIDigit(e[n])){return o}while(isASCIIDigit(e[n])){const t=parseInt(at(e,n));if(s===null){s=t}else if(s===0){return o}else{s=s*10+t}if(s>255){return o}++n}t[r]=t[r]*256+s;++i;if(i===2||i===4){++r}}if(i!==4){return o}break}else if(e[n]===58){++n;if(e[n]===undefined){return o}}else if(e[n]!==undefined){return o}t[r]=i;++r}if(s!==null){let e=r-s;r=7;while(r!==0&&e>0){const i=t[s+e-1];t[s+e-1]=t[r];t[r]=i;--r;--e}}else if(s===null&&r!==8){return o}return t}function serializeIPv6(e){let t="";const r=findLongestZeroSequence(e);const i=r.idx;let s=false;for(let r=0;r<=7;++r){if(s&&e[r]===0){continue}else if(s){s=false}if(i===r){const e=r===0?"::":":";t+=e;s=true;continue}t+=e[r].toString(16);if(r!==7){t+=":"}}return t}function parseHost(e,t){if(e[0]==="["){if(e[e.length-1]!=="]"){return o}return parseIPv6(e.substring(1,e.length-1))}if(!t){return parseOpaqueHost(e)}const r=utf8PercentDecode(e);const i=s.toASCII(r,false,s.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(i===null){return o}if(containsForbiddenHostCodePoint(i)){return o}const n=parseIPv4(i);if(typeof n==="number"||n===o){return n}return i}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return o}let t="";const r=i.ucs2.decode(e);for(let e=0;e<r.length;++e){t+=percentEncodeChar(r[e],isC0ControlPercentEncode)}return t}function findLongestZeroSequence(e){let t=null;let r=1;let i=null;let s=0;for(let n=0;n<e.length;++n){if(e[n]!==0){if(s>r){t=i;r=s}i=null;s=0}else{if(i===null){i=n}++s}}if(s>r){t=i;r=s}return{idx:t,len:r}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const t=e.path;if(t.length===0){return}if(e.scheme==="file"&&t.length===1&&isNormalizedWindowsDriveLetter(t[0])){return}t.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,t,r,s,n){this.pointer=0;this.input=e;this.base=t||null;this.encodingOverride=r||"utf-8";this.stateOverride=n;this.url=s;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const p=trimTabAndNewline(this.input);if(p!==this.input){this.parseError=true}this.input=p;this.state=n||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=i.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const t=isNaN(e)?undefined:String.fromCodePoint(e);const r=this["parse "+this.state](e,t);if(!r){break}else if(r===o){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,t){if(isASCIIAlpha(e)){this.buffer+=t.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,t){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=t.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return o}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,t){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const r=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=r}else{this.url.username+=r}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return o}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=t}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,t){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return o}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return o}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=t}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,t){if(isASCIIDigit(e)){this.buffer+=t}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return o}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return o}return true};const u=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!u.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,t){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=t}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,t){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e){if(t[e]<33||t[e]>126||t[e]===34||t[e]===35||t[e]===60||t[e]===62){this.url.query+=percentEncode(t[e])}else{this.url.query+=String.fromCodePoint(t[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=t}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,t){let r=e.scheme+":";if(e.host!==null){r+="//";if(e.username!==""||e.password!==""){r+=e.username;if(e.password!==""){r+=":"+e.password}r+="@"}r+=serializeHost(e.host);if(e.port!==null){r+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){r+="//"}if(e.cannotBeABaseURL){r+=e.path[0]}else{for(const t of e.path){r+="/"+t}}if(e.query!==null){r+="?"+e.query}if(!t&&e.fragment!==null){r+="#"+e.fragment}return r}function serializeOrigin(e){let t=e.scheme+"://";t+=serializeHost(e.host);if(e.port!==null){t+=":"+e.port}return t}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,t){if(t===undefined){t={}}const r=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);if(r.failure){return"failure"}return r.url};e.exports.setTheUsername=function(e,t){e.username="";const r=i.ucs2.decode(t);for(let t=0;t<r.length;++t){e.username+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,t){e.password="";const r=i.ucs2.decode(t);for(let t=0;t<r.length;++t){e.password+=percentEncodeChar(r[t],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(t,r){if(r===undefined){r={}}return e.exports.basicURLParse(t,{baseURL:r.baseURL,encodingOverride:r.encodingOverride})}},3185:e=>{"use strict";e.exports.mixin=function mixin(e,t){const r=Object.getOwnPropertyNames(t);for(let i=0;i<r.length;++i){Object.defineProperty(e,r[i],Object.getOwnPropertyDescriptor(t,r[i]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},2940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var r=0;r<t.length;r++){t[r]=arguments[r]}var i=e.apply(this,t);var s=t[t.length-1];if(typeof i==="function"&&i!==s){Object.keys(s).forEach((function(e){i[e]=s[e]}))}return i}}},1802:e=>{async function restartApp(e,t){return new Promise(((r,i)=>{e.exec(`pm2 restart ${t} -s`,{},((e,t)=>{if(e){i(e);return}t.on("close",((e,t)=>{if(Number(e)!==0){i()}r()})).on("data",(e=>{console.log(e)}))}))}))}e.exports=restartApp},8282:(e,t,r)=>{const{readdirSync:i}=r(7147);const{join:s}=r(1017);const n=r(8084);const o=r(2310);const p=r(1496);const l=r(3593);function getSftp(e){return new Promise(((t,r)=>{e.sftp(((e,i)=>{if(e){r(e);return}t(i)}))}))}e.exports=async function uploadDirectory(e,t,r){const u=n(t);if(!u){throw new Error(`Bad path: ${t} not exist`)}if(u!=="d"){throw new Error(`Bad path: ${t}: not a directory`)}const m=await getSftp(e);const h=await o(m,r);if(h&&h!=="d"){throw new Error(`Bad path ${r} Not a directory`)}if(!h){await l(m,r,true)}const g=i(t,{encoding:"utf8",withFileTypes:true});const _=[];for(const e of g){const i=s(t,e.name);const n=`${r}/${e.name}`;if(e.isDirectory()){await uploadDirectory(i,n,options)}else if(e.isFile()){_.push(p(m,i,n))}else{console.log(`uploadDirectory: File ignored: ${e.name} not a regular file`)}await Promise.all(_)}return`${t} uploaded to ${t}`}},8084:(e,t,r)=>{const{statSync:i}=r(7147);e.exports=function isLocalExists(e){const t=i(e,{throwIfNoEntry:false});if(!t){return false}if(t.isDirectory()){return"d"}if(t.isFile()){return"f"}throw new Error(`Bad path: ${e}: target must be a file or directory`)}},1496:e=>{e.exports=function fastPut(e,t,r){return new Promise(((i,s)=>{e.fastPut(t,r,{concurrency:10},(e=>{if(e){s(new Error(`${e.message} Local: ${t} Remote: ${r}`));return}console.log(`OK ${t} -> ${r}`);i()}))}))}},2310:(e,t,r)=>{const i=r(9325);e.exports=async function isRemoteExists(e,t){try{const r=await i(e,t);if(r.isDirectory)return"d";if(r.isSymbolicLink)return"l";if(r.isFile)return"f"}catch(e){return false}}},3593:(e,t,r)=>{const{parse:i}=r(1017);const s=r(2310);async function mkdir(e,t){return new Promise(((r,i)=>{e.mkdir(t,(e=>{if(e){if(e.code===4){i(new Error(`Bad path: ${p} permission denied`));return}else if(e.code===2){i(new Error(`Bad path: ${p} parent not a directory or not exist`));return}else{i(new Error(`${e.message} ${p}`));return}}r()}))}))}e.exports=async function remoteMkdir(e,t,r){const n=await s(e,t);if(n&&n!=="d"){throw new Error(`Bad path: ${t} already exists as a file`)}else if(n){return new Error(`${t} already exists`)}if(!r){return mkdir(e,t)}const o=i(t).dir;if(o){const t=await s(e,o);if(!t){await remoteMkdir(e,o,true)}else if(t!=="d"){throw new Error(`Bad path: ${o} not a directory`)}}return mkdir(e,t)}},9325:e=>{e.exports=async function remoteStat(e,t){return new Promise(((r,i)=>{e.stat(t,((e,s)=>{if(e){if(e.code===2||e.code===4){i(new Error(`No such file: ${t}`));return}else{i(new Error(`${e.message} ${t}`));return}}r({mode:s.mode,uid:s.uid,gid:s.gid,size:s.size,accessTime:s.atime*1e3,modifyTime:s.mtime*1e3,isDirectory:s.isDirectory(),isFile:s.isFile(),isBlockDevice:s.isBlockDevice(),isCharacterDevice:s.isCharacterDevice(),isSymbolicLink:s.isSymbolicLink(),isFIFO:s.isFIFO(),isSocket:s.isSocket()})}))}))}},7449:(e,t,r)=>{const i=r(5869);function ssh(e){return new Promise(((t,r)=>{const s=(new i.Client).on("error",(e=>{console.error(e);r(e)})).on("ready",(()=>t(s))).on("connect",(()=>console.log("connected"))).on("banner",(()=>console.log("banner"))).on("greeting",(e=>console.log("greeting",e))).connect(e)}))}e.exports=ssh},4240:(e,t,r)=>{e.exports=require(r.ab+"build/Release/cpufeatures.node")},9041:(e,t,r)=>{e.exports=require(r.ab+"lib/protocol/crypto/build/Release/sshcrypto.node")},2877:module=>{module.exports=eval("require")("encoding")},9491:e=>{"use strict";e.exports=require("assert")},4300:e=>{"use strict";e.exports=require("buffer")},2081:e=>{"use strict";e.exports=require("child_process")},6113:e=>{"use strict";e.exports=require("crypto")},9523:e=>{"use strict";e.exports=require("dns")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},5687:e=>{"use strict";e.exports=require("https")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},4404:e=>{"use strict";e.exports=require("tls")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")},6674:e=>{"use strict";e.exports={i8:"1.11.0"}},2020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var r=__webpack_module_cache__[e]={exports:{}};var i=true;try{__webpack_modules__[e].call(r.exports,r,r.exports,__nccwpck_require__);i=false}finally{if(i)delete __webpack_module_cache__[e]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(2186);const t=__nccwpck_require__(5438);const r=__nccwpck_require__(1802);const i=__nccwpck_require__(8282);const s=__nccwpck_require__(7449);async function main(e){let t;try{t=await s({host:e.remoteAddress,port:e.remotePort||22,username:e.sshUser,privateKey:e.sshKey});await i(t,e.distPath,e.remotePath);if(e.appName){await r(t,e.appName)}}catch(e){if(t){t.end()}throw e}}try{main({distPath:e.getInput("dist-path",{required:true,trimWhitespace:true}),sshKey:e.getInput("ssh-key",{required:true,trimWhitespace:true}),sshUser:e.getInput("ssh-user",{required:true,trimWhitespace:true}),remoteAddress:e.getInput("remote-address",{required:true,trimWhitespace:true}),remotePort:Number(e.getInput("remote-port",{trimWhitespace:true,trimWhitespace:true})),remotePath:e.getInput("remote-path",{required:true,trimWhitespace:true}),appName:e.getInput("app-name",{trimWhitespace:true})})}catch(t){e.setFailed(t.message)}})();module.exports=__webpack_exports__})();